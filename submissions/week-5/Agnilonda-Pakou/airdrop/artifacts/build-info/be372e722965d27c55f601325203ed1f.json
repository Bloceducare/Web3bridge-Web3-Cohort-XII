{"id":"be372e722965d27c55f601325203ed1f","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientKeccak256(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"contracts/Airdrop.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"./CustomERC20.sol\";\n\ncontract MyAirdrop {\n    ERC20Token public token;\n    string public name;\n    string public symbol;\n    uint256 public initialSupply;\n    bytes32 public merkleRoot;\n    mapping(address => bool) public claimed;\n\n    event Claimed(address indexed claimant, uint256 amount);\n\n    constructor(bytes32 root, string memory _name, string memory _symbol, uint256 _initialSupply) {\n        name = _name;\n        symbol = _symbol;\n        initialSupply = _initialSupply;\n        token = new ERC20Token(name, symbol, initialSupply );\n        merkleRoot = root;\n    }\n\n    function claim(uint256 amount, bytes32[] calldata merkleProof) external {\n        require(!claimed[msg.sender], \"ALREADY_CLAIMED\");\n        \n     \n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender, amount)); \n        require(MerkleProof.verify(merkleProof, merkleRoot, leaf), \"INVALID PROOF\");\n\n        require(token.transfer(msg.sender, amount), \"INVALID PROOF\");\n        claimed[msg.sender] = true;\n\n        emit Claimed(msg.sender, amount);\n    }\n\n    function _balanceOf() public view returns (uint256) {\n        return token.balanceOf(msg.sender);\n    }\n}"},"contracts/CustomERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n\ncontract ERC20Token is ERC20 {\n    address public owner;\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply\n    ) ERC20(name, symbol) {\n        owner = msg.sender;\n        _mint(owner, initialSupply);\n    }\n\n    function mint(address to, uint256 amount) public {\n        if (msg.sender != owner) {\n            revert(\"Only owner can mint\");\n        }\n        transferFrom(owner, to, amount);\n    }\n  \n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:141:0","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"290:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"309:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"629:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"662:6:0","nodeType":"VariableDeclaration","scope":11,"src":"654:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"678:7:0","nodeType":"VariableDeclaration","scope":11,"src":"670:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"695:6:0","nodeType":"VariableDeclaration","scope":11,"src":"687:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:0"},"src":"623:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"709:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"872:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"899:6:0","nodeType":"VariableDeclaration","scope":16,"src":"891:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:0"},"src":"866:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"913:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1104:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:0"},"src":"1077:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1128:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1519:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1528:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1555:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:0"},"src":"1478:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1569:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1754:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1783:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1775:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:0"},"src":"1748:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1799:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2005:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2033:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:0"},"src":"1999:43:0"}],"scope":137,"src":"280:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2046:143:0","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2200:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2220:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2450:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2477:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2469:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:0"},"src":"2444:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2490:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2633:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:0"},"src":"2627:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2679:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3008:6:0","nodeType":"VariableDeclaration","scope":61,"src":"3000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3016:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3041:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3033:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:0"},"src":"2973:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3054:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3217:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3245:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:0"},"src":"3211:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3259:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:0"},"src":"3423:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3475:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3768:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3778:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:0"},"src":"3727:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3801:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3986:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4016:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4008:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:0"},"src":"3980:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4032:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4240:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4270:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4262:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:0"},"src":"4234:46:0"}],"scope":137,"src":"2190:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4284:145:0","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4440:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4461:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4868:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4860:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4884:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4876:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4901:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4893:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4909:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:0"},"src":"4827:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4932:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5095:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5124:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5116:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:0"},"src":"5089:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5138:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5331:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:0"},"src":"5302:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5355:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5659:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5677:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5669:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:0"},"src":"5616:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5690:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5906:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5898:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:0"},"src":"5869:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5922:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6161:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6153:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:0"},"src":"6124:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6177:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6494:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6513:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:0"},"src":"6462:73:0"}],"scope":137,"src":"4430:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6426:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1133:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1133:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1133:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1142:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1142:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1142:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1150:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1150:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1150:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1166:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1166:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1166:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:757:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1124:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1185:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1201:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1245:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1261:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1288:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1335:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1385:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1370:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1396:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1657:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1667:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1675:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1667:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1690:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1700:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1690:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1425:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1627:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1613:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1634:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1657:0:1"},"scope":651,"src":"1601:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"1839:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1856:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"1849:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1720:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"1792:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1824:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:1"},"scope":651,"src":"1779:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2043:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2060:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2053:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1874:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"1996:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2028:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:1"},"scope":651,"src":"1981:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"2763:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"2773:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2080:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2724:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"2756:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:1"},"scope":651,"src":"2707:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"2910:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2927:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"2920:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2795:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2869:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2901:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:1"},"scope":651,"src":"2849:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3078:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3095:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3105:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3088:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"2952:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3031:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:1"},"scope":651,"src":"3004:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3390:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3408:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3400:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3416:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3448:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3455:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3459:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3438:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3438:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3475:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3126:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3341:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3333:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3353:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3345:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3384:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:1"},"scope":651,"src":"3315:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3640:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3657:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3669:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3676:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3650:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3499:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3578:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3570:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3593:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3585:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3631:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:1"},"scope":651,"src":"3551:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4077:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4095:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4103:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4134:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4141:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4150:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4125:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4125:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4166:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3697:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4023:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4015:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4040:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4032:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4071:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:1"},"scope":651,"src":"3998:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"4869:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"4887:7:1","nodeType":"VariableDeclaration","scope":333,"src":"4879:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4897:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4935:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4941:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4950:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4919:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4919:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4976:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4982:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4986:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4966:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4966:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5002:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4190:581:1","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"4806:4:1","nodeType":"VariableDeclaration","scope":334,"src":"4798:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"4820:2:1","nodeType":"VariableDeclaration","scope":334,"src":"4812:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"4832:5:1","nodeType":"VariableDeclaration","scope":334,"src":"4824:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"4863:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:1"},"scope":651,"src":"4776:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5462:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5476:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5472:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5496:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5517:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":356,"nodeType":"RevertStatement","src":"5510:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5571:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5567:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5589:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5610:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":371,"nodeType":"RevertStatement","src":"5603:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5670:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5676:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5680:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5662:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5662:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5026:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5420:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5412:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5434:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5426:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5446:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5438:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5462:0:1"},"scope":651,"src":"5393:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6083:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6097:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6271:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6285:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6307:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6317:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6340:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6354:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6336:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6361:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6411:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6417:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6430:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6386:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":416,"nodeType":"RevertStatement","src":"6379:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6464:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6571:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6581:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6589:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6603:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6571:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6093:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6117:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6233:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6233:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6647:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"6862:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"6876:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7021:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7031:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7038:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7021:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6643:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6665:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6679:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6810:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6826:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"6810:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7092:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7098:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7102:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7083:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7078:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5699:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6033:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6025:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6047:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6039:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6059:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6051:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6083:0:1"},"scope":651,"src":"6008:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7514:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7528:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7524:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7551:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7572:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":478,"nodeType":"RevertStatement","src":"7565:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7644:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7653:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7624:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7624:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7121:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7481:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7498:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7490:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7514:0:1"},"scope":651,"src":"7458:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8040:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8054:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8050:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8077:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8098:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":511,"nodeType":"RevertStatement","src":"8091:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8156:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8177:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8148:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8148:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7672:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8007:7:1","nodeType":"VariableDeclaration","scope":524,"src":"7999:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8024:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8016:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8040:0:1"},"scope":651,"src":"7984:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"8800:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8819:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8826:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8835:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"8810:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"8810:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8196:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"8752:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8744:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"8767:7:1","nodeType":"VariableDeclaration","scope":542,"src":"8759:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"8784:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8776:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"8800:0:1"},"scope":651,"src":"8726:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"9799:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"9813:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"9809:89:1","trueBody":{"id":567,"nodeType":"Block","src":"9834:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"9855:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":566,"nodeType":"RevertStatement","src":"9848:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9911:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"9907:90:1","trueBody":{"id":582,"nodeType":"Block","src":"9934:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"9955:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":581,"nodeType":"RevertStatement","src":"9948:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10006:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10018:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10025:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10036:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10006:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10055:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10051:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10066:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10094:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10101:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10110:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10085:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10080:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"8860:836:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9727:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9719:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9742:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9734:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"9759:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9751:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:1","nodeType":"VariableDeclaration","scope":602,"src":"9766:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"9799:0:1"},"scope":651,"src":"9701:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10504:387:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10514:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10551:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10558:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10541:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10580:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:1","memberName":"max","nodeType":"MemberAccess","src":"10599:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10576:309:1","trueBody":{"id":647,"nodeType":"Block","src":"10618:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10636:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10655:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10632:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10662:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10714:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10723:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10741:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10687:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":634,"nodeType":"RevertStatement","src":"10680:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"10775:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10812:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10819:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10847:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"10803:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"10803:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10139:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10448:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10440:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10463:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10455:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10480:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10472:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10504:0:1"},"scope":651,"src":"10415:476:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1106:9787:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:10789:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:71:2","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"214:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"227:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"396:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:2","nodeType":"VariableDeclaration","scope":663,"src":"405:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:2","nodeType":"VariableDeclaration","scope":663,"src":"427:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:2","nodeType":"VariableDeclaration","scope":663,"src":"447:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:2"},"src":"390:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"468:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"627:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:2","nodeType":"VariableDeclaration","scope":672,"src":"636:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:2","nodeType":"VariableDeclaration","scope":672,"src":"659:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:2","nodeType":"VariableDeclaration","scope":672,"src":"684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:2"},"src":"621:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"705:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"795:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"821:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:2"},"scope":729,"src":"775:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"836:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":686,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":729,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"986:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1230:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1222:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1242:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1234:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1267:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:2"},"scope":729,"src":"1204:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1279:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1575:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1567:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1590:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1622:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:2"},"scope":729,"src":"1548:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1637:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2334:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2326:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2351:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2343:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2376:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:2"},"scope":729,"src":"2309:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2388:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2720:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2712:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2734:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2726:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2746:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2738:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2771:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:2"},"scope":729,"src":"2690:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"204:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2674:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["306:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"306:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"306:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:87:3","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"288:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"319:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"391:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"417:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:3"},"scope":755,"src":"378:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"438:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"514:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"540:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:3"},"scope":755,"src":"499:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"561:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"648:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"674:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:3"},"scope":755,"src":"631:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"278:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:559:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[825]},"id":826,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"139:81:5","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":825,"linearizedBaseContracts":[825],"name":"Hashes","nameLocation":"229:6:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":811,"nodeType":"Block","src":"588:85:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"605:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"609:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"661:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"664:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":805,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"641:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"641:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:61:5","trueExpression":{"arguments":[{"id":802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"633:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":803,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"636:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":801,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"613:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":810,"nodeType":"Return","src":"598:68:5"}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"242:257:5","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:5","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"a","nameLocation":"542:1:5","nodeType":"VariableDeclaration","scope":812,"src":"534:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"b","nameLocation":"553:1:5","nodeType":"VariableDeclaration","scope":812,"src":"545:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"579:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:5"},"scope":825,"src":"504:169:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":823,"nodeType":"Block","src":"881:151:5","statements":[{"AST":{"nativeSrc":"916:110:5","nodeType":"YulBlock","src":"916:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"937:4:5","nodeType":"YulLiteral","src":"937:4:5","type":"","value":"0x00"},{"name":"a","nativeSrc":"943:1:5","nodeType":"YulIdentifier","src":"943:1:5"}],"functionName":{"name":"mstore","nativeSrc":"930:6:5","nodeType":"YulIdentifier","src":"930:6:5"},"nativeSrc":"930:15:5","nodeType":"YulFunctionCall","src":"930:15:5"},"nativeSrc":"930:15:5","nodeType":"YulExpressionStatement","src":"930:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"965:4:5","nodeType":"YulLiteral","src":"965:4:5","type":"","value":"0x20"},{"name":"b","nativeSrc":"971:1:5","nodeType":"YulIdentifier","src":"971:1:5"}],"functionName":{"name":"mstore","nativeSrc":"958:6:5","nodeType":"YulIdentifier","src":"958:6:5"},"nativeSrc":"958:15:5","nodeType":"YulFunctionCall","src":"958:15:5"},"nativeSrc":"958:15:5","nodeType":"YulExpressionStatement","src":"958:15:5"},{"nativeSrc":"986:30:5","nodeType":"YulAssignment","src":"986:30:5","value":{"arguments":[{"kind":"number","nativeSrc":"1005:4:5","nodeType":"YulLiteral","src":"1005:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1011:4:5","nodeType":"YulLiteral","src":"1011:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"995:9:5","nodeType":"YulIdentifier","src":"995:9:5"},"nativeSrc":"995:21:5","nodeType":"YulFunctionCall","src":"995:21:5"},"variableNames":[{"name":"value","nativeSrc":"986:5:5","nodeType":"YulIdentifier","src":"986:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":815,"isOffset":false,"isSlot":false,"src":"943:1:5","valueSize":1},{"declaration":817,"isOffset":false,"isSlot":false,"src":"971:1:5","valueSize":1},{"declaration":820,"isOffset":false,"isSlot":false,"src":"986:5:5","valueSize":1}],"flags":["memory-safe"],"id":822,"nodeType":"InlineAssembly","src":"891:135:5"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"679:109:5","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":824,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientKeccak256","nameLocation":"802:19:5","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"a","nameLocation":"830:1:5","nodeType":"VariableDeclaration","scope":824,"src":"822:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"b","nameLocation":"841:1:5","nodeType":"VariableDeclaration","scope":824,"src":"833:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"833:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"821:22:5"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"value","nameLocation":"874:5:5","nodeType":"VariableDeclaration","scope":824,"src":"866:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"866:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"865:15:5"},"scope":825,"src":"793:239:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":826,"src":"221:813:5","usedErrors":[],"usedEvents":[]}],"src":"113:922:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[825],"MerkleProof":[1898]},"id":1899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":827,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1899,"sourceUnit":826,"src":"232:36:6","symbolAliases":[{"foreign":{"id":828,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"240:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"270:1082:6","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":1898,"linearizedBaseContracts":[1898],"name":"MerkleProof","nameLocation":"1361:11:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"1379:60:6","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":833,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:6","nodeType":"ErrorDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"1478:2:6"},"src":"1444:37:6"},{"body":{"id":853,"nodeType":"Block","src":"1999:57:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":847,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2029:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":848,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2036:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":846,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[895,977],"referencedDeclaration":895,"src":"2016:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":850,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2045:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":845,"id":852,"nodeType":"Return","src":"2009:40:6"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1487:410:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:6","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"proof","nameLocation":"1935:5:6","nodeType":"VariableDeclaration","scope":854,"src":"1918:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":836,"nodeType":"ArrayTypeName","src":"1918:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"root","nameLocation":"1950:4:6","nodeType":"VariableDeclaration","scope":854,"src":"1942:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:6","nodeType":"VariableDeclaration","scope":854,"src":"1956:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:6"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1993:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":843,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:6"},"scope":1898,"src":"1902:154:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"2549:216:6","statements":[{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:6","nodeType":"VariableDeclaration","scope":894,"src":"2559:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":868,"initialValue":{"id":867,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2582:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:6"},{"body":{"id":890,"nodeType":"Block","src":"2639:91:6","statements":[{"expression":{"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":880,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2653:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":883,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2696:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":884,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2710:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":886,"indexExpression":{"id":885,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2716:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":881,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"2668:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$825_$","typeString":"type(library Hashes)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":812,"src":"2668:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":889,"nodeType":"ExpressionStatement","src":"2653:66:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2616:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":874,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2620:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:6","memberName":"length","nodeType":"MemberAccess","src":"2620:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":891,"initializationExpression":{"assignments":[870],"declarations":[{"constant":false,"id":870,"mutability":"mutable","name":"i","nameLocation":"2609:1:6","nodeType":"VariableDeclaration","scope":891,"src":"2601:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":872,"initialValue":{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:6","subExpression":{"id":877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2634:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"2634:3:6"},"nodeType":"ForStatement","src":"2596:134:6"},{"expression":{"id":892,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2746:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":864,"id":893,"nodeType":"Return","src":"2739:19:6"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"2062:390:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:6","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"proof","nameLocation":"2496:5:6","nodeType":"VariableDeclaration","scope":895,"src":"2479:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":857,"nodeType":"ArrayTypeName","src":"2479:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:6","nodeType":"VariableDeclaration","scope":895,"src":"2503:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:6"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":895,"src":"2540:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:6"},"scope":1898,"src":"2457:308:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":926,"nodeType":"Block","src":"3376:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":919,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"3406:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":920,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"3413:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":921,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"3419:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":918,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[895,977],"referencedDeclaration":977,"src":"3393:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":923,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"3430:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":917,"id":925,"nodeType":"Return","src":"3386:48:6"}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"2771:407:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":927,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:6","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"proof","nameLocation":"3225:5:6","nodeType":"VariableDeclaration","scope":927,"src":"3208:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":898,"nodeType":"ArrayTypeName","src":"3208:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"root","nameLocation":"3248:4:6","nodeType":"VariableDeclaration","scope":927,"src":"3240:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:6","nodeType":"VariableDeclaration","scope":927,"src":"3262:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:6","nodeType":"VariableDeclaration","scope":927,"src":"3284:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":912,"nodeType":"FunctionTypeName","parameterTypes":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"3293:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"3302:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:6"},"returnParameterTypes":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"3325:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:6"},"src":"3284:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:6"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":927,"src":"3370:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":915,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:6"},"scope":1898,"src":"3183:258:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"4019:195:6","statements":[{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:6","nodeType":"VariableDeclaration","scope":976,"src":"4029:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":951,"initialValue":{"id":950,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4052:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:6"},{"body":{"id":972,"nodeType":"Block","src":"4109:70:6","statements":[{"expression":{"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":963,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4123:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":965,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4145:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":966,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"4159:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":968,"indexExpression":{"id":967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"4165:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":964,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4138:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":971,"nodeType":"ExpressionStatement","src":"4123:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"4086:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":957,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"4090:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:6","memberName":"length","nodeType":"MemberAccess","src":"4090:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":973,"initializationExpression":{"assignments":[953],"declarations":[{"constant":false,"id":953,"mutability":"mutable","name":"i","nameLocation":"4079:1:6","nodeType":"VariableDeclaration","scope":973,"src":"4071:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":955,"initialValue":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:6","subExpression":{"id":960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"4104:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ExpressionStatement","src":"4104:3:6"},"nodeType":"ForStatement","src":"4066:113:6"},{"expression":{"id":974,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4195:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":947,"id":975,"nodeType":"Return","src":"4188:19:6"}]},"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"3447:387:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:6","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"proof","nameLocation":"3887:5:6","nodeType":"VariableDeclaration","scope":977,"src":"3870:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":930,"nodeType":"ArrayTypeName","src":"3870:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:6","nodeType":"VariableDeclaration","scope":977,"src":"3902:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:6","nodeType":"VariableDeclaration","scope":977,"src":"3924:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":942,"nodeType":"FunctionTypeName","parameterTypes":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"3933:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"3942:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:6"},"returnParameterTypes":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"3965:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:6"},"src":"3924:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:6"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":977,"src":"4010:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:6"},"scope":1898,"src":"3839:375:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"4744:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":991,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"4782:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":992,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4789:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":990,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1039,1121],"referencedDeclaration":1039,"src":"4761:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":994,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"4798:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":989,"id":996,"nodeType":"Return","src":"4754:48:6"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"4220:412:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:6","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"proof","nameLocation":"4680:5:6","nodeType":"VariableDeclaration","scope":998,"src":"4661:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":980,"nodeType":"ArrayTypeName","src":"4661:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"root","nameLocation":"4695:4:6","nodeType":"VariableDeclaration","scope":998,"src":"4687:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:6","nodeType":"VariableDeclaration","scope":998,"src":"4701:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:6"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"4738:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":987,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:6"},"scope":1898,"src":"4637:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"5314:216:6","statements":[{"assignments":[1010],"declarations":[{"constant":false,"id":1010,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:6","nodeType":"VariableDeclaration","scope":1038,"src":"5324:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1012,"initialValue":{"id":1011,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5347:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:6"},{"body":{"id":1034,"nodeType":"Block","src":"5404:91:6","statements":[{"expression":{"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1024,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5418:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1027,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5461:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1028,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5475:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1030,"indexExpression":{"id":1029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5481:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1025,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5433:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$825_$","typeString":"type(library Hashes)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":812,"src":"5433:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1033,"nodeType":"ExpressionStatement","src":"5418:66:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5381:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1018,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5385:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:6","memberName":"length","nodeType":"MemberAccess","src":"5385:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1035,"initializationExpression":{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"i","nameLocation":"5374:1:6","nodeType":"VariableDeclaration","scope":1035,"src":"5366:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1016,"initialValue":{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:6","subExpression":{"id":1021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5399:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"5399:3:6"},"nodeType":"ForStatement","src":"5361:134:6"},{"expression":{"id":1036,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5511:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1008,"id":1037,"nodeType":"Return","src":"5504:19:6"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"4815:392:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:6","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"proof","nameLocation":"5261:5:6","nodeType":"VariableDeclaration","scope":1039,"src":"5242:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1001,"nodeType":"ArrayTypeName","src":"5242:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:6","nodeType":"VariableDeclaration","scope":1039,"src":"5268:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:6"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"5305:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:6"},"scope":1898,"src":"5212:318:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"6153:73:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1063,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6191:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1064,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6198:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1065,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6204:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1062,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1039,1121],"referencedDeclaration":1121,"src":"6170:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1067,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"6215:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1061,"id":1069,"nodeType":"Return","src":"6163:56:6"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"5536:409:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:6","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"proof","nameLocation":"6002:5:6","nodeType":"VariableDeclaration","scope":1071,"src":"5983:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1042,"nodeType":"ArrayTypeName","src":"5983:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"root","nameLocation":"6025:4:6","nodeType":"VariableDeclaration","scope":1071,"src":"6017:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:6","nodeType":"VariableDeclaration","scope":1071,"src":"6039:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:6","nodeType":"VariableDeclaration","scope":1071,"src":"6061:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1056,"nodeType":"FunctionTypeName","parameterTypes":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"6070:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"6079:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:6"},"returnParameterTypes":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"6102:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:6"},"src":"6061:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:6"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"6147:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:6"},"scope":1898,"src":"5950:276:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"6816:195:6","statements":[{"assignments":[1093],"declarations":[{"constant":false,"id":1093,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:6","nodeType":"VariableDeclaration","scope":1120,"src":"6826:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1095,"initialValue":{"id":1094,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"6849:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:6"},{"body":{"id":1116,"nodeType":"Block","src":"6906:70:6","statements":[{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1107,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6920:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1109,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6942:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1110,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"6956:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1112,"indexExpression":{"id":1111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"6962:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1108,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"6935:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1115,"nodeType":"ExpressionStatement","src":"6920:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"6883:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1101,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"6887:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:6","memberName":"length","nodeType":"MemberAccess","src":"6887:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"initializationExpression":{"assignments":[1097],"declarations":[{"constant":false,"id":1097,"mutability":"mutable","name":"i","nameLocation":"6876:1:6","nodeType":"VariableDeclaration","scope":1117,"src":"6868:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1099,"initialValue":{"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:6","subExpression":{"id":1104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"6901:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1106,"nodeType":"ExpressionStatement","src":"6901:3:6"},"nodeType":"ForStatement","src":"6863:113:6"},{"expression":{"id":1118,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"6992:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1091,"id":1119,"nodeType":"Return","src":"6985:19:6"}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"6232:389:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:6","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"proof","nameLocation":"6684:5:6","nodeType":"VariableDeclaration","scope":1121,"src":"6665:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1074,"nodeType":"ArrayTypeName","src":"6665:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:6","nodeType":"VariableDeclaration","scope":1121,"src":"6699:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:6","nodeType":"VariableDeclaration","scope":1121,"src":"6721:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1086,"nodeType":"FunctionTypeName","parameterTypes":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"6730:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"6739:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:6"},"returnParameterTypes":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"6762:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:6"},"src":"6721:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:6"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"6807:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:6"},"scope":1898,"src":"6626:385:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"7797:76:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1139,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"7832:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1140,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"7839:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1141,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7851:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1138,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1305,1509],"referencedDeclaration":1305,"src":"7814:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1143,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7862:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1137,"id":1145,"nodeType":"Return","src":"7807:59:6"}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"7017:593:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:6","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"proof","nameLocation":"7667:5:6","nodeType":"VariableDeclaration","scope":1147,"src":"7650:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1124,"nodeType":"ArrayTypeName","src":"7650:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:6","nodeType":"VariableDeclaration","scope":1147,"src":"7682:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1126,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1127,"nodeType":"ArrayTypeName","src":"7682:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"root","nameLocation":"7724:4:6","nodeType":"VariableDeclaration","scope":1147,"src":"7716:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:6","nodeType":"VariableDeclaration","scope":1147,"src":"7738:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1132,"nodeType":"ArrayTypeName","src":"7738:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:6"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"7791:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1135,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:6"},"scope":1898,"src":"7615:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"9159:2104:6","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:6","nodeType":"VariableDeclaration","scope":1304,"src":"9543:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1166,"initialValue":{"expression":{"id":1164,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"9563:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:6","memberName":"length","nodeType":"MemberAccess","src":"9563:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:6"},{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:6","nodeType":"VariableDeclaration","scope":1304,"src":"9586:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1171,"initialValue":{"expression":{"id":1169,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"9610:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:6","memberName":"length","nodeType":"MemberAccess","src":"9610:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9675:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1173,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"9687:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:6","memberName":"length","nodeType":"MemberAccess","src":"9687:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1176,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"9703:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1184,"nodeType":"IfStatement","src":"9671:113:6","trueBody":{"id":1183,"nodeType":"Block","src":"9722:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1180,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"9743:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1182,"nodeType":"RevertStatement","src":"9736:37:6"}]}},{"assignments":[1189],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:6","nodeType":"VariableDeclaration","scope":1304,"src":"10028:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1188,"nodeType":"ArrayTypeName","src":"10028:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1195,"initialValue":{"arguments":[{"id":1193,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"10068:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1191,"nodeType":"ArrayTypeName","src":"10058:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:6"},{"assignments":[1197],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:6","nodeType":"VariableDeclaration","scope":1304,"src":"10092:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1199,"initialValue":{"hexValue":"30","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:6"},{"assignments":[1201],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:6","nodeType":"VariableDeclaration","scope":1304,"src":"10121:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"hexValue":"30","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:6"},{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:6","nodeType":"VariableDeclaration","scope":1304,"src":"10150:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1207,"initialValue":{"hexValue":"30","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:6"},{"body":{"id":1267,"nodeType":"Block","src":"10590:310:6","statements":[{"assignments":[1219],"declarations":[{"constant":false,"id":1219,"mutability":"mutable","name":"a","nameLocation":"10612:1:6","nodeType":"VariableDeclaration","scope":1267,"src":"10604:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1232,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10616:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1221,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"10626:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1227,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"10658:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1230,"indexExpression":{"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:6","subExpression":{"id":1228,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"10665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:6","trueExpression":{"baseExpression":{"id":1223,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10638:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1226,"indexExpression":{"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:6","subExpression":{"id":1224,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10645:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:6"},{"assignments":[1234],"declarations":[{"constant":false,"id":1234,"mutability":"mutable","name":"b","nameLocation":"10697:1:6","nodeType":"VariableDeclaration","scope":1267,"src":"10689:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1256,"initialValue":{"condition":{"baseExpression":{"id":1235,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"10701:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1237,"indexExpression":{"id":1236,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"10712:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1251,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"10813:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1254,"indexExpression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:6","subExpression":{"id":1252,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"10819:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1239,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"10744:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1245,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"10776:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1248,"indexExpression":{"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:6","subExpression":{"id":1246,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"10783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:6","trueExpression":{"baseExpression":{"id":1241,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10756:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1244,"indexExpression":{"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:6","subExpression":{"id":1242,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"10763:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:6"},{"expression":{"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1257,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"10844:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1259,"indexExpression":{"id":1258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"10851:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"10884:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"10887:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1260,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"10856:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$825_$","typeString":"type(library Hashes)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":812,"src":"10856:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1266,"nodeType":"ExpressionStatement","src":"10844:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"10566:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1213,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"10570:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1268,"initializationExpression":{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"i","nameLocation":"10559:1:6","nodeType":"VariableDeclaration","scope":1268,"src":"10551:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1211,"initialValue":{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:6","subExpression":{"id":1215,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"10585:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"10585:3:6"},"nodeType":"ForStatement","src":"10546:354:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1269,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"10914:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"11155:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1301,"nodeType":"Block","src":"11217:40:6","statements":[{"expression":{"baseExpression":{"id":1297,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"11238:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1299,"indexExpression":{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1161,"id":1300,"nodeType":"Return","src":"11231:15:6"}]},"id":1302,"nodeType":"IfStatement","src":"11151:106:6","trueBody":{"id":1296,"nodeType":"Block","src":"11170:41:6","statements":[{"expression":{"baseExpression":{"id":1292,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11191:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1294,"indexExpression":{"hexValue":"30","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1161,"id":1295,"nodeType":"Return","src":"11184:16:6"}]}},"id":1303,"nodeType":"IfStatement","src":"10910:347:6","trueBody":{"id":1288,"nodeType":"Block","src":"10933:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1272,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"10951:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1273,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"10963:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:6","memberName":"length","nodeType":"MemberAccess","src":"10963:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1280,"nodeType":"IfStatement","src":"10947:100:6","trueBody":{"id":1279,"nodeType":"Block","src":"10977:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1276,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"11002:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1278,"nodeType":"RevertStatement","src":"10995:37:6"}]}},{"id":1287,"nodeType":"UncheckedBlock","src":"11060:75:6","statements":[{"expression":{"baseExpression":{"id":1281,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"11095:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1285,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"11102:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1161,"id":1286,"nodeType":"Return","src":"11088:32:6"}]}]}}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"7879:1100:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:6","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"proof","nameLocation":"9037:5:6","nodeType":"VariableDeclaration","scope":1305,"src":"9020:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1150,"nodeType":"ArrayTypeName","src":"9020:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:6","nodeType":"VariableDeclaration","scope":1305,"src":"9052:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1152,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1153,"nodeType":"ArrayTypeName","src":"9052:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:6","nodeType":"VariableDeclaration","scope":1305,"src":"9086:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1156,"nodeType":"ArrayTypeName","src":"9086:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:6"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:6","nodeType":"VariableDeclaration","scope":1305,"src":"9139:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:6"},"scope":1898,"src":"8984:2279:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1341,"nodeType":"Block","src":"12112:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1333,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"12147:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1334,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"12154:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1335,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"12166:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1336,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"12174:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1332,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1305,1509],"referencedDeclaration":1509,"src":"12129:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1338,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"12185:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1331,"id":1340,"nodeType":"Return","src":"12122:67:6"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"11269:590:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":1342,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:6","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"proof","nameLocation":"11916:5:6","nodeType":"VariableDeclaration","scope":1342,"src":"11899:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1308,"nodeType":"ArrayTypeName","src":"11899:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:6","nodeType":"VariableDeclaration","scope":1342,"src":"11931:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1310,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1311,"nodeType":"ArrayTypeName","src":"11931:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"root","nameLocation":"11973:4:6","nodeType":"VariableDeclaration","scope":1342,"src":"11965:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:6","nodeType":"VariableDeclaration","scope":1342,"src":"11987:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1316,"nodeType":"ArrayTypeName","src":"11987:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:6","nodeType":"VariableDeclaration","scope":1342,"src":"12020:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1326,"nodeType":"FunctionTypeName","parameterTypes":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"12029:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"12038:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:6"},"returnParameterTypes":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"12061:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:6"},"src":"12020:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:6"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"12106:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1329,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:6"},"scope":1898,"src":"11864:332:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"13545:2083:6","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:6","nodeType":"VariableDeclaration","scope":1508,"src":"13929:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1371,"initialValue":{"expression":{"id":1369,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"13949:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:6","memberName":"length","nodeType":"MemberAccess","src":"13949:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:6"},{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:6","nodeType":"VariableDeclaration","scope":1508,"src":"13972:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1376,"initialValue":{"expression":{"id":1374,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"13996:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:6","memberName":"length","nodeType":"MemberAccess","src":"13996:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"14061:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1378,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"14073:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:6","memberName":"length","nodeType":"MemberAccess","src":"14073:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14089:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1389,"nodeType":"IfStatement","src":"14057:113:6","trueBody":{"id":1388,"nodeType":"Block","src":"14108:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1385,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"14129:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1387,"nodeType":"RevertStatement","src":"14122:37:6"}]}},{"assignments":[1394],"declarations":[{"constant":false,"id":1394,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:6","nodeType":"VariableDeclaration","scope":1508,"src":"14414:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1393,"nodeType":"ArrayTypeName","src":"14414:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1400,"initialValue":{"arguments":[{"id":1398,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14454:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1396,"nodeType":"ArrayTypeName","src":"14444:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:6"},{"assignments":[1402],"declarations":[{"constant":false,"id":1402,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:6","nodeType":"VariableDeclaration","scope":1508,"src":"14478:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1404,"initialValue":{"hexValue":"30","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:6"},{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:6","nodeType":"VariableDeclaration","scope":1508,"src":"14507:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1408,"initialValue":{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:6"},{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:6","nodeType":"VariableDeclaration","scope":1508,"src":"14536:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1412,"initialValue":{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:6"},{"body":{"id":1471,"nodeType":"Block","src":"14976:289:6","statements":[{"assignments":[1424],"declarations":[{"constant":false,"id":1424,"mutability":"mutable","name":"a","nameLocation":"14998:1:6","nodeType":"VariableDeclaration","scope":1471,"src":"14990:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1437,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"15002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1426,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"15012:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1432,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"15044:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1435,"indexExpression":{"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:6","subExpression":{"id":1433,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"15051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:6","trueExpression":{"baseExpression":{"id":1428,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15024:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1431,"indexExpression":{"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:6","subExpression":{"id":1429,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"15031:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:6"},{"assignments":[1439],"declarations":[{"constant":false,"id":1439,"mutability":"mutable","name":"b","nameLocation":"15083:1:6","nodeType":"VariableDeclaration","scope":1471,"src":"15075:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1461,"initialValue":{"condition":{"baseExpression":{"id":1440,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"15087:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1442,"indexExpression":{"id":1441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"15098:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1456,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"15199:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1459,"indexExpression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:6","subExpression":{"id":1457,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"15205:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"15120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1444,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"15130:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1450,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"15162:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1453,"indexExpression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:6","subExpression":{"id":1451,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"15169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:6","trueExpression":{"baseExpression":{"id":1446,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15142:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1449,"indexExpression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:6","subExpression":{"id":1447,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"15149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:6"},{"expression":{"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1462,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"15230:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1464,"indexExpression":{"id":1463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"15237:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1466,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"15249:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"15252:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1465,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"15242:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1470,"nodeType":"ExpressionStatement","src":"15230:24:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"14952:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1418,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14956:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1472,"initializationExpression":{"assignments":[1414],"declarations":[{"constant":false,"id":1414,"mutability":"mutable","name":"i","nameLocation":"14945:1:6","nodeType":"VariableDeclaration","scope":1472,"src":"14937:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1416,"initialValue":{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:6","subExpression":{"id":1420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"14971:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1422,"nodeType":"ExpressionStatement","src":"14971:3:6"},"nodeType":"ForStatement","src":"14932:333:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15279:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"15520:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1505,"nodeType":"Block","src":"15582:40:6","statements":[{"expression":{"baseExpression":{"id":1501,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"15603:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1503,"indexExpression":{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1366,"id":1504,"nodeType":"Return","src":"15596:15:6"}]},"id":1506,"nodeType":"IfStatement","src":"15516:106:6","trueBody":{"id":1500,"nodeType":"Block","src":"15535:41:6","statements":[{"expression":{"baseExpression":{"id":1496,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"15556:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1498,"indexExpression":{"hexValue":"30","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1366,"id":1499,"nodeType":"Return","src":"15549:16:6"}]}},"id":1507,"nodeType":"IfStatement","src":"15275:347:6","trueBody":{"id":1492,"nodeType":"Block","src":"15298:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"15316:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1477,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"15328:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:6","memberName":"length","nodeType":"MemberAccess","src":"15328:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1484,"nodeType":"IfStatement","src":"15312:100:6","trueBody":{"id":1483,"nodeType":"Block","src":"15342:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1480,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"15367:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1482,"nodeType":"RevertStatement","src":"15360:37:6"}]}},{"id":1491,"nodeType":"UncheckedBlock","src":"15425:75:6","statements":[{"expression":{"baseExpression":{"id":1485,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"15460:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1489,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"15467:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1366,"id":1490,"nodeType":"Return","src":"15453:32:6"}]}]}}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"12202:1097:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:6","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"proof","nameLocation":"13357:5:6","nodeType":"VariableDeclaration","scope":1509,"src":"13340:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1345,"nodeType":"ArrayTypeName","src":"13340:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:6","nodeType":"VariableDeclaration","scope":1509,"src":"13372:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1347,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1348,"nodeType":"ArrayTypeName","src":"13372:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:6","nodeType":"VariableDeclaration","scope":1509,"src":"13406:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1351,"nodeType":"ArrayTypeName","src":"13406:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:6","nodeType":"VariableDeclaration","scope":1509,"src":"13439:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1361,"nodeType":"FunctionTypeName","parameterTypes":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"13448:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"13457:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:6"},"returnParameterTypes":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"13480:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:6"},"src":"13439:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:6"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:6","nodeType":"VariableDeclaration","scope":1509,"src":"13525:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:6"},"scope":1898,"src":"13304:2324:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"16436:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1527,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"16479:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1528,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"16486:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1529,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"16498:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1526,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1693,1897],"referencedDeclaration":1693,"src":"16453:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1531,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"16509:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1525,"id":1533,"nodeType":"Return","src":"16446:67:6"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"15634:603:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:6","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"proof","nameLocation":"16304:5:6","nodeType":"VariableDeclaration","scope":1535,"src":"16285:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1512,"nodeType":"ArrayTypeName","src":"16285:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:6","nodeType":"VariableDeclaration","scope":1535,"src":"16319:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1514,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1515,"nodeType":"ArrayTypeName","src":"16319:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"root","nameLocation":"16363:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"16355:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"16377:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1520,"nodeType":"ArrayTypeName","src":"16377:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:6"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"16430:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1523,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:6"},"scope":1898,"src":"16242:278:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"17820:2104:6","statements":[{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:6","nodeType":"VariableDeclaration","scope":1692,"src":"18204:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1554,"initialValue":{"expression":{"id":1552,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"18224:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:6","memberName":"length","nodeType":"MemberAccess","src":"18224:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:6"},{"assignments":[1556],"declarations":[{"constant":false,"id":1556,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:6","nodeType":"VariableDeclaration","scope":1692,"src":"18247:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1559,"initialValue":{"expression":{"id":1557,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"18271:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:6","memberName":"length","nodeType":"MemberAccess","src":"18271:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"18336:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1561,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"18348:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:6","memberName":"length","nodeType":"MemberAccess","src":"18348:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"18364:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"nodeType":"IfStatement","src":"18332:113:6","trueBody":{"id":1571,"nodeType":"Block","src":"18383:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1568,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"18404:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1570,"nodeType":"RevertStatement","src":"18397:37:6"}]}},{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:6","nodeType":"VariableDeclaration","scope":1692,"src":"18689:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1576,"nodeType":"ArrayTypeName","src":"18689:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1583,"initialValue":{"arguments":[{"id":1581,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"18729:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1579,"nodeType":"ArrayTypeName","src":"18719:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:6"},{"assignments":[1585],"declarations":[{"constant":false,"id":1585,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:6","nodeType":"VariableDeclaration","scope":1692,"src":"18753:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1587,"initialValue":{"hexValue":"30","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:6"},{"assignments":[1589],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:6","nodeType":"VariableDeclaration","scope":1692,"src":"18782:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1591,"initialValue":{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:6"},{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:6","nodeType":"VariableDeclaration","scope":1692,"src":"18811:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1595,"initialValue":{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:6"},{"body":{"id":1655,"nodeType":"Block","src":"19251:310:6","statements":[{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"a","nameLocation":"19273:1:6","nodeType":"VariableDeclaration","scope":1655,"src":"19265:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1620,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"19277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1609,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"19287:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1615,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"19319:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1618,"indexExpression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:6","subExpression":{"id":1616,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"19326:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:6","trueExpression":{"baseExpression":{"id":1611,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"19299:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1614,"indexExpression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:6","subExpression":{"id":1612,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"19306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:6"},{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"b","nameLocation":"19358:1:6","nodeType":"VariableDeclaration","scope":1655,"src":"19350:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1644,"initialValue":{"condition":{"baseExpression":{"id":1623,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"19362:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1625,"indexExpression":{"id":1624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"19373:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1639,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"19474:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1642,"indexExpression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:6","subExpression":{"id":1640,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"19480:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"19395:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"19405:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1633,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"19437:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1636,"indexExpression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:6","subExpression":{"id":1634,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"19444:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:6","trueExpression":{"baseExpression":{"id":1629,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"19417:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1632,"indexExpression":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:6","subExpression":{"id":1630,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"19424:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:6"},{"expression":{"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1645,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"19505:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1647,"indexExpression":{"id":1646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"19512:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"19545:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1651,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"19548:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1648,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"19517:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$825_$","typeString":"type(library Hashes)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":812,"src":"19517:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1654,"nodeType":"ExpressionStatement","src":"19505:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"19227:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1601,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"19231:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1656,"initializationExpression":{"assignments":[1597],"declarations":[{"constant":false,"id":1597,"mutability":"mutable","name":"i","nameLocation":"19220:1:6","nodeType":"VariableDeclaration","scope":1656,"src":"19212:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1599,"initialValue":{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:6","subExpression":{"id":1603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"19246:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"19246:3:6"},"nodeType":"ForStatement","src":"19207:354:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1657,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"19575:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"19816:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1689,"nodeType":"Block","src":"19878:40:6","statements":[{"expression":{"baseExpression":{"id":1685,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"19899:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1687,"indexExpression":{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1549,"id":1688,"nodeType":"Return","src":"19892:15:6"}]},"id":1690,"nodeType":"IfStatement","src":"19812:106:6","trueBody":{"id":1684,"nodeType":"Block","src":"19831:41:6","statements":[{"expression":{"baseExpression":{"id":1680,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"19852:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1682,"indexExpression":{"hexValue":"30","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1549,"id":1683,"nodeType":"Return","src":"19845:16:6"}]}},"id":1691,"nodeType":"IfStatement","src":"19571:347:6","trueBody":{"id":1676,"nodeType":"Block","src":"19594:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"19612:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1661,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"19624:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:6","memberName":"length","nodeType":"MemberAccess","src":"19624:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"19608:100:6","trueBody":{"id":1667,"nodeType":"Block","src":"19638:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1664,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"19663:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1666,"nodeType":"RevertStatement","src":"19656:37:6"}]}},{"id":1675,"nodeType":"UncheckedBlock","src":"19721:75:6","statements":[{"expression":{"baseExpression":{"id":1669,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"19756:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1673,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"19763:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1549,"id":1674,"nodeType":"Return","src":"19749:32:6"}]}]}}]},"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"16526:1102:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:6","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"proof","nameLocation":"17696:5:6","nodeType":"VariableDeclaration","scope":1693,"src":"17677:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1538,"nodeType":"ArrayTypeName","src":"17677:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:6","nodeType":"VariableDeclaration","scope":1693,"src":"17711:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1540,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1541,"nodeType":"ArrayTypeName","src":"17711:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:6","nodeType":"VariableDeclaration","scope":1693,"src":"17747:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1544,"nodeType":"ArrayTypeName","src":"17747:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:6"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:6","nodeType":"VariableDeclaration","scope":1693,"src":"17800:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:6"},"scope":1898,"src":"17633:2291:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"20795:92:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1721,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"20838:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1722,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"20845:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1723,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"20857:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1724,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"20865:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1720,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1693,1897],"referencedDeclaration":1897,"src":"20812:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1726,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"20876:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1719,"id":1728,"nodeType":"Return","src":"20805:75:6"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"19930:600:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:6","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"proof","nameLocation":"20597:5:6","nodeType":"VariableDeclaration","scope":1730,"src":"20578:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1696,"nodeType":"ArrayTypeName","src":"20578:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:6","nodeType":"VariableDeclaration","scope":1730,"src":"20612:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1698,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"ArrayTypeName","src":"20612:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"root","nameLocation":"20656:4:6","nodeType":"VariableDeclaration","scope":1730,"src":"20648:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:6","nodeType":"VariableDeclaration","scope":1730,"src":"20670:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1704,"nodeType":"ArrayTypeName","src":"20670:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:6","nodeType":"VariableDeclaration","scope":1730,"src":"20703:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1714,"nodeType":"FunctionTypeName","parameterTypes":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"20712:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"20721:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:6"},"returnParameterTypes":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"20744:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:6"},"src":"20703:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:6"},"returnParameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"20789:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1717,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:6"},"scope":1898,"src":"20535:352:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"22250:2083:6","statements":[{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:6","nodeType":"VariableDeclaration","scope":1896,"src":"22634:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1759,"initialValue":{"expression":{"id":1757,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"22654:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:6","memberName":"length","nodeType":"MemberAccess","src":"22654:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:6"},{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:6","nodeType":"VariableDeclaration","scope":1896,"src":"22677:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1764,"initialValue":{"expression":{"id":1762,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"22701:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:6","memberName":"length","nodeType":"MemberAccess","src":"22701:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"22766:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1766,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"22778:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:6","memberName":"length","nodeType":"MemberAccess","src":"22778:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"22794:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"nodeType":"IfStatement","src":"22762:113:6","trueBody":{"id":1776,"nodeType":"Block","src":"22813:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1773,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"22834:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1775,"nodeType":"RevertStatement","src":"22827:37:6"}]}},{"assignments":[1782],"declarations":[{"constant":false,"id":1782,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:6","nodeType":"VariableDeclaration","scope":1896,"src":"23119:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1781,"nodeType":"ArrayTypeName","src":"23119:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1788,"initialValue":{"arguments":[{"id":1786,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"23159:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1784,"nodeType":"ArrayTypeName","src":"23149:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:6"},{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:6","nodeType":"VariableDeclaration","scope":1896,"src":"23183:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1792,"initialValue":{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:6"},{"assignments":[1794],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:6","nodeType":"VariableDeclaration","scope":1896,"src":"23212:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1796,"initialValue":{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:6"},{"assignments":[1798],"declarations":[{"constant":false,"id":1798,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:6","nodeType":"VariableDeclaration","scope":1896,"src":"23241:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1800,"initialValue":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:6"},{"body":{"id":1859,"nodeType":"Block","src":"23681:289:6","statements":[{"assignments":[1812],"declarations":[{"constant":false,"id":1812,"mutability":"mutable","name":"a","nameLocation":"23703:1:6","nodeType":"VariableDeclaration","scope":1859,"src":"23695:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1825,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"23707:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1814,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"23717:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1820,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"23749:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1823,"indexExpression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:6","subExpression":{"id":1821,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"23756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:6","trueExpression":{"baseExpression":{"id":1816,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"23729:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1819,"indexExpression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:6","subExpression":{"id":1817,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"23736:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:6"},{"assignments":[1827],"declarations":[{"constant":false,"id":1827,"mutability":"mutable","name":"b","nameLocation":"23788:1:6","nodeType":"VariableDeclaration","scope":1859,"src":"23780:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1849,"initialValue":{"condition":{"baseExpression":{"id":1828,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"23792:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1830,"indexExpression":{"id":1829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"23803:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1844,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"23904:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1847,"indexExpression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:6","subExpression":{"id":1845,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"23910:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"23825:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1832,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"23835:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1838,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"23867:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1841,"indexExpression":{"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:6","subExpression":{"id":1839,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"23874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:6","trueExpression":{"baseExpression":{"id":1834,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"23847:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1837,"indexExpression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:6","subExpression":{"id":1835,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"23854:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:6"},{"expression":{"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1850,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"23935:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1852,"indexExpression":{"id":1851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"23942:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"23954:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"23957:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1853,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"23947:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1858,"nodeType":"ExpressionStatement","src":"23935:24:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"23657:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1806,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"23661:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1860,"initializationExpression":{"assignments":[1802],"declarations":[{"constant":false,"id":1802,"mutability":"mutable","name":"i","nameLocation":"23650:1:6","nodeType":"VariableDeclaration","scope":1860,"src":"23642:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1804,"initialValue":{"hexValue":"30","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:6","subExpression":{"id":1808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"23676:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ExpressionStatement","src":"23676:3:6"},"nodeType":"ForStatement","src":"23637:333:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"23984:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"24225:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1893,"nodeType":"Block","src":"24287:40:6","statements":[{"expression":{"baseExpression":{"id":1889,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"24308:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1891,"indexExpression":{"hexValue":"30","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1754,"id":1892,"nodeType":"Return","src":"24301:15:6"}]},"id":1894,"nodeType":"IfStatement","src":"24221:106:6","trueBody":{"id":1888,"nodeType":"Block","src":"24240:41:6","statements":[{"expression":{"baseExpression":{"id":1884,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"24261:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1886,"indexExpression":{"hexValue":"30","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1754,"id":1887,"nodeType":"Return","src":"24254:16:6"}]}},"id":1895,"nodeType":"IfStatement","src":"23980:347:6","trueBody":{"id":1880,"nodeType":"Block","src":"24003:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"24021:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1865,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"24033:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:6","memberName":"length","nodeType":"MemberAccess","src":"24033:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"IfStatement","src":"24017:100:6","trueBody":{"id":1871,"nodeType":"Block","src":"24047:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1868,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"24072:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1870,"nodeType":"RevertStatement","src":"24065:37:6"}]}},{"id":1879,"nodeType":"UncheckedBlock","src":"24130:75:6","statements":[{"expression":{"baseExpression":{"id":1873,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"24165:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1877,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1874,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"24172:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1754,"id":1878,"nodeType":"Return","src":"24158:32:6"}]}]}}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"20893:1099:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:6","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"proof","nameLocation":"22060:5:6","nodeType":"VariableDeclaration","scope":1897,"src":"22041:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1733,"nodeType":"ArrayTypeName","src":"22041:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:6","nodeType":"VariableDeclaration","scope":1897,"src":"22075:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1735,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1736,"nodeType":"ArrayTypeName","src":"22075:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:6","nodeType":"VariableDeclaration","scope":1897,"src":"22111:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1739,"nodeType":"ArrayTypeName","src":"22111:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:6","nodeType":"VariableDeclaration","scope":1897,"src":"22144:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1749,"nodeType":"FunctionTypeName","parameterTypes":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"22153:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"22162:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:6"},"returnParameterTypes":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"22185:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:6"},"src":"22144:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:6"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:6","nodeType":"VariableDeclaration","scope":1897,"src":"22230:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:6"},"scope":1898,"src":"21997:2336:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1899,"src":"1353:22982:6","usedErrors":[833],"usedEvents":[]}],"src":"206:24130:6"},"id":6},"contracts/Airdrop.sol":{"ast":{"absolutePath":"contracts/Airdrop.sol","exportedSymbols":{"ERC20":[651],"ERC20Token":[2093],"Hashes":[825],"MerkleProof":[1898],"MyAirdrop":[2036]},"id":2037,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1900,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":1899,"src":"58:68:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CustomERC20.sol","file":"./CustomERC20.sol","id":1902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2037,"sourceUnit":2094,"src":"127:27:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MyAirdrop","contractDependencies":[2093],"contractKind":"contract","fullyImplemented":true,"id":2036,"linearizedBaseContracts":[2036],"name":"MyAirdrop","nameLocation":"165:9:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":1905,"mutability":"mutable","name":"token","nameLocation":"199:5:7","nodeType":"VariableDeclaration","scope":2036,"src":"181:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"},"typeName":{"id":1904,"nodeType":"UserDefinedTypeName","pathNode":{"id":1903,"name":"ERC20Token","nameLocations":["181:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"181:10:7"},"referencedDeclaration":2093,"src":"181:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"}},"visibility":"public"},{"constant":false,"functionSelector":"06fdde03","id":1907,"mutability":"mutable","name":"name","nameLocation":"224:4:7","nodeType":"VariableDeclaration","scope":2036,"src":"210:18:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1906,"name":"string","nodeType":"ElementaryTypeName","src":"210:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":1909,"mutability":"mutable","name":"symbol","nameLocation":"248:6:7","nodeType":"VariableDeclaration","scope":2036,"src":"234:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1908,"name":"string","nodeType":"ElementaryTypeName","src":"234:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"378dc3dc","id":1911,"mutability":"mutable","name":"initialSupply","nameLocation":"275:13:7","nodeType":"VariableDeclaration","scope":2036,"src":"260:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":1913,"mutability":"mutable","name":"merkleRoot","nameLocation":"309:10:7","nodeType":"VariableDeclaration","scope":2036,"src":"294:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"294:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"c884ef83","id":1917,"mutability":"mutable","name":"claimed","nameLocation":"357:7:7","nodeType":"VariableDeclaration","scope":2036,"src":"325:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1916,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"333:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"325:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1915,"name":"bool","nodeType":"ElementaryTypeName","src":"344:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a","id":1923,"name":"Claimed","nameLocation":"377:7:7","nodeType":"EventDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"indexed":true,"mutability":"mutable","name":"claimant","nameLocation":"401:8:7","nodeType":"VariableDeclaration","scope":1923,"src":"385:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1921,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"419:6:7","nodeType":"VariableDeclaration","scope":1923,"src":"411:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"384:42:7"},"src":"371:56:7"},{"body":{"id":1960,"nodeType":"Block","src":"527:184:7","statements":[{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1934,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"537:4:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1935,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"544:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"537:12:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1937,"nodeType":"ExpressionStatement","src":"537:12:7"},{"expression":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1938,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"559:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1939,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"568:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"559:16:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1941,"nodeType":"ExpressionStatement","src":"559:16:7"},{"expression":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1942,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"585:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1943,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"601:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"585:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1945,"nodeType":"ExpressionStatement","src":"585:30:7"},{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1946,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"625:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1950,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"648:4:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":1951,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"654:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":1952,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"662:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"633:14:7","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_ERC20Token_$2093_$","typeString":"function (string memory,string memory,uint256) returns (contract ERC20Token)"},"typeName":{"id":1948,"nodeType":"UserDefinedTypeName","pathNode":{"id":1947,"name":"ERC20Token","nameLocations":["637:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"637:10:7"},"referencedDeclaration":2093,"src":"637:10:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"633:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"}},"src":"625:52:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"}},"id":1955,"nodeType":"ExpressionStatement","src":"625:52:7"},{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"687:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1957,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"700:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"687:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1959,"nodeType":"ExpressionStatement","src":"687:17:7"}]},"id":1961,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"root","nameLocation":"453:4:7","nodeType":"VariableDeclaration","scope":1961,"src":"445:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"_name","nameLocation":"473:5:7","nodeType":"VariableDeclaration","scope":1961,"src":"459:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"459:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"_symbol","nameLocation":"494:7:7","nodeType":"VariableDeclaration","scope":1961,"src":"480:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"480:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"_initialSupply","nameLocation":"511:14:7","nodeType":"VariableDeclaration","scope":1961,"src":"503:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"444:82:7"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"527:0:7"},"scope":2036,"src":"433:278:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2022,"nodeType":"Block","src":"789:388:7","statements":[{"expression":{"arguments":[{"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"807:20:7","subExpression":{"baseExpression":{"id":1970,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"808:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1973,"indexExpression":{"expression":{"id":1971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"816:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"820:6:7","memberName":"sender","nodeType":"MemberAccess","src":"816:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"808:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414c52454144595f434c41494d4544","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"829:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861","typeString":"literal_string \"ALREADY_CLAIMED\""},"value":"ALREADY_CLAIMED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861","typeString":"literal_string \"ALREADY_CLAIMED\""}],"id":1969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"799:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"799:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"799:48:7"},{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"leaf","nameLocation":"880:4:7","nodeType":"VariableDeclaration","scope":2022,"src":"872:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"872:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1988,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1983,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"914:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"918:6:7","memberName":"sender","nodeType":"MemberAccess","src":"914:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1985,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"926:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1981,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"897:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"901:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"897:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"897:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1980,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"887:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"887:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"872:62:7"},{"expression":{"arguments":[{"arguments":[{"id":1992,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"972:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1993,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"985:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1994,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"997:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1990,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"953:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1898_$","typeString":"type(library MerkleProof)"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"965:6:7","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":854,"src":"953:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49442050524f4f46","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1004:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a","typeString":"literal_string \"INVALID PROOF\""},"value":"INVALID PROOF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a","typeString":"literal_string \"INVALID PROOF\""}],"id":1989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"945:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"945:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"945:75:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1054:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1058:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1054:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2004,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"1066:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2000,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"1039:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1045:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"1039:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1039:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49442050524f4f46","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1075:15:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a","typeString":"literal_string \"INVALID PROOF\""},"value":"INVALID PROOF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a","typeString":"literal_string \"INVALID PROOF\""}],"id":1999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1031:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1031:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"ExpressionStatement","src":"1031:60:7"},{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2009,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1101:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2012,"indexExpression":{"expression":{"id":2010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1109:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1113:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1109:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1101:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1123:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1101:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2015,"nodeType":"ExpressionStatement","src":"1101:26:7"},{"eventCall":{"arguments":[{"expression":{"id":2017,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1151:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1155:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1151:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2019,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"1163:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2016,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1143:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1143:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"EmitStatement","src":"1138:32:7"}]},"functionSelector":"2f52ebb7","id":2023,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"726:5:7","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"amount","nameLocation":"740:6:7","nodeType":"VariableDeclaration","scope":2023,"src":"732:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"merkleProof","nameLocation":"767:11:7","nodeType":"VariableDeclaration","scope":2023,"src":"748:30:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"748:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1965,"nodeType":"ArrayTypeName","src":"748:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"731:48:7"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[],"src":"789:0:7"},"scope":2036,"src":"717:460:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2034,"nodeType":"Block","src":"1235:51:7","statements":[{"expression":{"arguments":[{"expression":{"id":2030,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1268:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1272:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1268:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2028,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"1252:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Token_$2093","typeString":"contract ERC20Token"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1258:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":237,"src":"1252:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1252:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2027,"id":2033,"nodeType":"Return","src":"1245:34:7"}]},"functionSelector":"89ded484","id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"_balanceOf","nameLocation":"1192:10:7","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[],"src":"1202:2:7"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"1226:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:9:7"},"scope":2036,"src":"1183:103:7","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2037,"src":"156:1132:7","usedErrors":[],"usedEvents":[1923]}],"src":"32:1256:7"},"id":7},"contracts/CustomERC20.sol":{"ast":{"absolutePath":"contracts/CustomERC20.sol","exportedSymbols":{"ERC20":[651],"ERC20Token":[2093]},"id":2094,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2038,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2094,"sourceUnit":652,"src":"58:68:8","symbolAliases":[{"foreign":{"id":2039,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"66:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2041,"name":"ERC20","nameLocations":["152:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"152:5:8"},"id":2042,"nodeType":"InheritanceSpecifier","src":"152:5:8"}],"canonicalName":"ERC20Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2093,"linearizedBaseContracts":[2093,651,41,755,729,785],"name":"ERC20Token","nameLocation":"138:10:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":2044,"mutability":"mutable","name":"owner","nameLocation":"179:5:8","nodeType":"VariableDeclaration","scope":2093,"src":"164:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":2067,"nodeType":"Block","src":"317:72:8","statements":[{"expression":{"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2057,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"327:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2058,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"335:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"339:6:8","memberName":"sender","nodeType":"MemberAccess","src":"335:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"327:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2061,"nodeType":"ExpressionStatement","src":"327:18:8"},{"expression":{"arguments":[{"id":2063,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"361:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2064,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"368:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2062,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"355:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"355:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"ExpressionStatement","src":"355:27:8"}]},"id":2068,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2053,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"303:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2054,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"309:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2055,"kind":"baseConstructorSpecifier","modifierName":{"id":2052,"name":"ERC20","nameLocations":["297:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"297:5:8"},"nodeType":"ModifierInvocation","src":"297:19:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"name","nameLocation":"225:4:8","nodeType":"VariableDeclaration","scope":2068,"src":"211:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2045,"name":"string","nodeType":"ElementaryTypeName","src":"211:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"symbol","nameLocation":"253:6:8","nodeType":"VariableDeclaration","scope":2068,"src":"239:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2047,"name":"string","nodeType":"ElementaryTypeName","src":"239:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"initialSupply","nameLocation":"277:13:8","nodeType":"VariableDeclaration","scope":2068,"src":"269:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"201:95:8"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[],"src":"317:0:8"},"scope":2093,"src":"190:199:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2091,"nodeType":"Block","src":"444:136:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"458:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"462:6:8","memberName":"sender","nodeType":"MemberAccess","src":"458:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2077,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"472:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"458:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2084,"nodeType":"IfStatement","src":"454:79:8","trueBody":{"id":2083,"nodeType":"Block","src":"479:54:8","statements":[{"expression":{"arguments":[{"hexValue":"4f6e6c79206f776e65722063616e206d696e74","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"500:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac","typeString":"literal_string \"Only owner can mint\""},"value":"Only owner can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac","typeString":"literal_string \"Only owner can mint\""}],"id":2079,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"493:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"493:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"493:29:8"}]}},{"expression":{"arguments":[{"id":2086,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"555:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2087,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"562:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2088,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"566:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2085,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"542:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"542:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"ExpressionStatement","src":"542:31:8"}]},"functionSelector":"40c10f19","id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"404:4:8","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"to","nameLocation":"417:2:8","nodeType":"VariableDeclaration","scope":2092,"src":"409:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"amount","nameLocation":"429:6:8","nodeType":"VariableDeclaration","scope":2092,"src":"421:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:28:8"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[],"src":"444:0:8"},"scope":2093,"src":"395:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2094,"src":"129:456:8","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"32:553:8"},"id":8}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1f2a1dd5da02582977b2ee28be4117fb13cb4518a86467b30aa480382b9c9c964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 CALLCODE LOG1 0xDD TSTORE LOG0 0x25 DUP3 SWAP8 PUSH28 0x2EE28BE4117FB13CB4518A86467B30AA480382B9C9C964736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"221:813:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1f2a1dd5da02582977b2ee28be4117fb13cb4518a86467b30aa480382b9c9c964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 CALLCODE LOG1 0xDD TSTORE LOG0 0x25 DUP3 SWAP8 PUSH28 0x2EE28BE4117FB13CB4518A86467B30AA480382B9C9C964736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"221:813:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bc5e7d9fcea64ec4d6207e59f7a95728013dfb367a7bf60817f540e24761e7b64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xC5 0xE7 0xD9 0xFC 0xEA PUSH5 0xEC4D6207E5 SWAP16 PUSH27 0x95728013DFB367A7BF60817F540E24761E7B64736F6C634300081C STOP CALLER ","sourceMap":"1353:22982:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bc5e7d9fcea64ec4d6207e59f7a95728013dfb367a7bf60817f540e24761e7b64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xC5 0xE7 0xD9 0xFC 0xEA PUSH5 0xEC4D6207E5 SWAP16 PUSH27 0x95728013DFB367A7BF60817F540E24761E7B64736F6C634300081C STOP CALLER ","sourceMap":"1353:22982:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"contracts/Airdrop.sol":{"MyAirdrop":{"abi":[{"inputs":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"claimant","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claimed","type":"event"},{"inputs":[],"name":"_balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract ERC20Token","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1961":{"entryPoint":null,"id":1961,"parameterSlots":4,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":556,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":1643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1775,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_string_storage_t_string_storage_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":1790,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":438,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":241,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":465,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":988,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":881,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1626,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1275,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_bytes32":{"entryPoint":261,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":668,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1240,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1130,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1416,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":514,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1009,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":939,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1388,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":389,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1120,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1358,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":892,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":342,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1164,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":315,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":320,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":256,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":251,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":325,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1025,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1345,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1216,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1038,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1174,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":271,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":678,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1211,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:11304:9","nodeType":"YulBlock","src":"0:11304:9","statements":[{"body":{"nativeSrc":"47:35:9","nodeType":"YulBlock","src":"47:35:9","statements":[{"nativeSrc":"57:19:9","nodeType":"YulAssignment","src":"57:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:9","nodeType":"YulLiteral","src":"73:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:9","nodeType":"YulIdentifier","src":"67:5:9"},"nativeSrc":"67:9:9","nodeType":"YulFunctionCall","src":"67:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:9","nodeType":"YulIdentifier","src":"57:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:9","nodeType":"YulTypedName","src":"40:6:9","type":""}],"src":"7:75:9"},{"body":{"nativeSrc":"177:28:9","nodeType":"YulBlock","src":"177:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:9","nodeType":"YulLiteral","src":"194:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:9","nodeType":"YulLiteral","src":"197:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:9","nodeType":"YulIdentifier","src":"187:6:9"},"nativeSrc":"187:12:9","nodeType":"YulFunctionCall","src":"187:12:9"},"nativeSrc":"187:12:9","nodeType":"YulExpressionStatement","src":"187:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:9","nodeType":"YulFunctionDefinition","src":"88:117:9"},{"body":{"nativeSrc":"300:28:9","nodeType":"YulBlock","src":"300:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:9","nodeType":"YulLiteral","src":"317:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:9","nodeType":"YulLiteral","src":"320:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:9","nodeType":"YulIdentifier","src":"310:6:9"},"nativeSrc":"310:12:9","nodeType":"YulFunctionCall","src":"310:12:9"},"nativeSrc":"310:12:9","nodeType":"YulExpressionStatement","src":"310:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:9","nodeType":"YulFunctionDefinition","src":"211:117:9"},{"body":{"nativeSrc":"379:32:9","nodeType":"YulBlock","src":"379:32:9","statements":[{"nativeSrc":"389:16:9","nodeType":"YulAssignment","src":"389:16:9","value":{"name":"value","nativeSrc":"400:5:9","nodeType":"YulIdentifier","src":"400:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:9","nodeType":"YulIdentifier","src":"389:7:9"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"334:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:9","nodeType":"YulTypedName","src":"361:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:9","nodeType":"YulTypedName","src":"371:7:9","type":""}],"src":"334:77:9"},{"body":{"nativeSrc":"460:79:9","nodeType":"YulBlock","src":"460:79:9","statements":[{"body":{"nativeSrc":"517:16:9","nodeType":"YulBlock","src":"517:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:9","nodeType":"YulLiteral","src":"526:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:9","nodeType":"YulLiteral","src":"529:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:9","nodeType":"YulIdentifier","src":"519:6:9"},"nativeSrc":"519:12:9","nodeType":"YulFunctionCall","src":"519:12:9"},"nativeSrc":"519:12:9","nodeType":"YulExpressionStatement","src":"519:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:9","nodeType":"YulIdentifier","src":"483:5:9"},{"arguments":[{"name":"value","nativeSrc":"508:5:9","nodeType":"YulIdentifier","src":"508:5:9"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"490:17:9","nodeType":"YulIdentifier","src":"490:17:9"},"nativeSrc":"490:24:9","nodeType":"YulFunctionCall","src":"490:24:9"}],"functionName":{"name":"eq","nativeSrc":"480:2:9","nodeType":"YulIdentifier","src":"480:2:9"},"nativeSrc":"480:35:9","nodeType":"YulFunctionCall","src":"480:35:9"}],"functionName":{"name":"iszero","nativeSrc":"473:6:9","nodeType":"YulIdentifier","src":"473:6:9"},"nativeSrc":"473:43:9","nodeType":"YulFunctionCall","src":"473:43:9"},"nativeSrc":"470:63:9","nodeType":"YulIf","src":"470:63:9"}]},"name":"validator_revert_t_bytes32","nativeSrc":"417:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:9","nodeType":"YulTypedName","src":"453:5:9","type":""}],"src":"417:122:9"},{"body":{"nativeSrc":"608:80:9","nodeType":"YulBlock","src":"608:80:9","statements":[{"nativeSrc":"618:22:9","nodeType":"YulAssignment","src":"618:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:9","nodeType":"YulIdentifier","src":"633:6:9"}],"functionName":{"name":"mload","nativeSrc":"627:5:9","nodeType":"YulIdentifier","src":"627:5:9"},"nativeSrc":"627:13:9","nodeType":"YulFunctionCall","src":"627:13:9"},"variableNames":[{"name":"value","nativeSrc":"618:5:9","nodeType":"YulIdentifier","src":"618:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:9","nodeType":"YulIdentifier","src":"676:5:9"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"649:26:9","nodeType":"YulIdentifier","src":"649:26:9"},"nativeSrc":"649:33:9","nodeType":"YulFunctionCall","src":"649:33:9"},"nativeSrc":"649:33:9","nodeType":"YulExpressionStatement","src":"649:33:9"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"545:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:9","nodeType":"YulTypedName","src":"586:6:9","type":""},{"name":"end","nativeSrc":"594:3:9","nodeType":"YulTypedName","src":"594:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:9","nodeType":"YulTypedName","src":"602:5:9","type":""}],"src":"545:143:9"},{"body":{"nativeSrc":"783:28:9","nodeType":"YulBlock","src":"783:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"800:1:9","nodeType":"YulLiteral","src":"800:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"803:1:9","nodeType":"YulLiteral","src":"803:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"793:6:9","nodeType":"YulIdentifier","src":"793:6:9"},"nativeSrc":"793:12:9","nodeType":"YulFunctionCall","src":"793:12:9"},"nativeSrc":"793:12:9","nodeType":"YulExpressionStatement","src":"793:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"694:117:9","nodeType":"YulFunctionDefinition","src":"694:117:9"},{"body":{"nativeSrc":"906:28:9","nodeType":"YulBlock","src":"906:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"923:1:9","nodeType":"YulLiteral","src":"923:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"926:1:9","nodeType":"YulLiteral","src":"926:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"916:6:9","nodeType":"YulIdentifier","src":"916:6:9"},"nativeSrc":"916:12:9","nodeType":"YulFunctionCall","src":"916:12:9"},"nativeSrc":"916:12:9","nodeType":"YulExpressionStatement","src":"916:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"817:117:9","nodeType":"YulFunctionDefinition","src":"817:117:9"},{"body":{"nativeSrc":"988:54:9","nodeType":"YulBlock","src":"988:54:9","statements":[{"nativeSrc":"998:38:9","nodeType":"YulAssignment","src":"998:38:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1016:5:9","nodeType":"YulIdentifier","src":"1016:5:9"},{"kind":"number","nativeSrc":"1023:2:9","nodeType":"YulLiteral","src":"1023:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1012:3:9","nodeType":"YulIdentifier","src":"1012:3:9"},"nativeSrc":"1012:14:9","nodeType":"YulFunctionCall","src":"1012:14:9"},{"arguments":[{"kind":"number","nativeSrc":"1032:2:9","nodeType":"YulLiteral","src":"1032:2:9","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1028:3:9","nodeType":"YulIdentifier","src":"1028:3:9"},"nativeSrc":"1028:7:9","nodeType":"YulFunctionCall","src":"1028:7:9"}],"functionName":{"name":"and","nativeSrc":"1008:3:9","nodeType":"YulIdentifier","src":"1008:3:9"},"nativeSrc":"1008:28:9","nodeType":"YulFunctionCall","src":"1008:28:9"},"variableNames":[{"name":"result","nativeSrc":"998:6:9","nodeType":"YulIdentifier","src":"998:6:9"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"940:102:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"971:5:9","nodeType":"YulTypedName","src":"971:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"981:6:9","nodeType":"YulTypedName","src":"981:6:9","type":""}],"src":"940:102:9"},{"body":{"nativeSrc":"1076:152:9","nodeType":"YulBlock","src":"1076:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1093:1:9","nodeType":"YulLiteral","src":"1093:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1096:77:9","nodeType":"YulLiteral","src":"1096:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1086:6:9","nodeType":"YulIdentifier","src":"1086:6:9"},"nativeSrc":"1086:88:9","nodeType":"YulFunctionCall","src":"1086:88:9"},"nativeSrc":"1086:88:9","nodeType":"YulExpressionStatement","src":"1086:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1190:1:9","nodeType":"YulLiteral","src":"1190:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"1193:4:9","nodeType":"YulLiteral","src":"1193:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1183:6:9","nodeType":"YulIdentifier","src":"1183:6:9"},"nativeSrc":"1183:15:9","nodeType":"YulFunctionCall","src":"1183:15:9"},"nativeSrc":"1183:15:9","nodeType":"YulExpressionStatement","src":"1183:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:9","nodeType":"YulLiteral","src":"1214:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:4:9","nodeType":"YulLiteral","src":"1217:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1207:6:9","nodeType":"YulIdentifier","src":"1207:6:9"},"nativeSrc":"1207:15:9","nodeType":"YulFunctionCall","src":"1207:15:9"},"nativeSrc":"1207:15:9","nodeType":"YulExpressionStatement","src":"1207:15:9"}]},"name":"panic_error_0x41","nativeSrc":"1048:180:9","nodeType":"YulFunctionDefinition","src":"1048:180:9"},{"body":{"nativeSrc":"1277:238:9","nodeType":"YulBlock","src":"1277:238:9","statements":[{"nativeSrc":"1287:58:9","nodeType":"YulVariableDeclaration","src":"1287:58:9","value":{"arguments":[{"name":"memPtr","nativeSrc":"1309:6:9","nodeType":"YulIdentifier","src":"1309:6:9"},{"arguments":[{"name":"size","nativeSrc":"1339:4:9","nodeType":"YulIdentifier","src":"1339:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1317:21:9","nodeType":"YulIdentifier","src":"1317:21:9"},"nativeSrc":"1317:27:9","nodeType":"YulFunctionCall","src":"1317:27:9"}],"functionName":{"name":"add","nativeSrc":"1305:3:9","nodeType":"YulIdentifier","src":"1305:3:9"},"nativeSrc":"1305:40:9","nodeType":"YulFunctionCall","src":"1305:40:9"},"variables":[{"name":"newFreePtr","nativeSrc":"1291:10:9","nodeType":"YulTypedName","src":"1291:10:9","type":""}]},{"body":{"nativeSrc":"1456:22:9","nodeType":"YulBlock","src":"1456:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1458:16:9","nodeType":"YulIdentifier","src":"1458:16:9"},"nativeSrc":"1458:18:9","nodeType":"YulFunctionCall","src":"1458:18:9"},"nativeSrc":"1458:18:9","nodeType":"YulExpressionStatement","src":"1458:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1399:10:9","nodeType":"YulIdentifier","src":"1399:10:9"},{"kind":"number","nativeSrc":"1411:18:9","nodeType":"YulLiteral","src":"1411:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1396:2:9","nodeType":"YulIdentifier","src":"1396:2:9"},"nativeSrc":"1396:34:9","nodeType":"YulFunctionCall","src":"1396:34:9"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1435:10:9","nodeType":"YulIdentifier","src":"1435:10:9"},{"name":"memPtr","nativeSrc":"1447:6:9","nodeType":"YulIdentifier","src":"1447:6:9"}],"functionName":{"name":"lt","nativeSrc":"1432:2:9","nodeType":"YulIdentifier","src":"1432:2:9"},"nativeSrc":"1432:22:9","nodeType":"YulFunctionCall","src":"1432:22:9"}],"functionName":{"name":"or","nativeSrc":"1393:2:9","nodeType":"YulIdentifier","src":"1393:2:9"},"nativeSrc":"1393:62:9","nodeType":"YulFunctionCall","src":"1393:62:9"},"nativeSrc":"1390:88:9","nodeType":"YulIf","src":"1390:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1494:2:9","nodeType":"YulLiteral","src":"1494:2:9","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1498:10:9","nodeType":"YulIdentifier","src":"1498:10:9"}],"functionName":{"name":"mstore","nativeSrc":"1487:6:9","nodeType":"YulIdentifier","src":"1487:6:9"},"nativeSrc":"1487:22:9","nodeType":"YulFunctionCall","src":"1487:22:9"},"nativeSrc":"1487:22:9","nodeType":"YulExpressionStatement","src":"1487:22:9"}]},"name":"finalize_allocation","nativeSrc":"1234:281:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1263:6:9","nodeType":"YulTypedName","src":"1263:6:9","type":""},{"name":"size","nativeSrc":"1271:4:9","nodeType":"YulTypedName","src":"1271:4:9","type":""}],"src":"1234:281:9"},{"body":{"nativeSrc":"1562:88:9","nodeType":"YulBlock","src":"1562:88:9","statements":[{"nativeSrc":"1572:30:9","nodeType":"YulAssignment","src":"1572:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1582:18:9","nodeType":"YulIdentifier","src":"1582:18:9"},"nativeSrc":"1582:20:9","nodeType":"YulFunctionCall","src":"1582:20:9"},"variableNames":[{"name":"memPtr","nativeSrc":"1572:6:9","nodeType":"YulIdentifier","src":"1572:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1631:6:9","nodeType":"YulIdentifier","src":"1631:6:9"},{"name":"size","nativeSrc":"1639:4:9","nodeType":"YulIdentifier","src":"1639:4:9"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1611:19:9","nodeType":"YulIdentifier","src":"1611:19:9"},"nativeSrc":"1611:33:9","nodeType":"YulFunctionCall","src":"1611:33:9"},"nativeSrc":"1611:33:9","nodeType":"YulExpressionStatement","src":"1611:33:9"}]},"name":"allocate_memory","nativeSrc":"1521:129:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1546:4:9","nodeType":"YulTypedName","src":"1546:4:9","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1555:6:9","nodeType":"YulTypedName","src":"1555:6:9","type":""}],"src":"1521:129:9"},{"body":{"nativeSrc":"1723:241:9","nodeType":"YulBlock","src":"1723:241:9","statements":[{"body":{"nativeSrc":"1828:22:9","nodeType":"YulBlock","src":"1828:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1830:16:9","nodeType":"YulIdentifier","src":"1830:16:9"},"nativeSrc":"1830:18:9","nodeType":"YulFunctionCall","src":"1830:18:9"},"nativeSrc":"1830:18:9","nodeType":"YulExpressionStatement","src":"1830:18:9"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1800:6:9","nodeType":"YulIdentifier","src":"1800:6:9"},{"kind":"number","nativeSrc":"1808:18:9","nodeType":"YulLiteral","src":"1808:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1797:2:9","nodeType":"YulIdentifier","src":"1797:2:9"},"nativeSrc":"1797:30:9","nodeType":"YulFunctionCall","src":"1797:30:9"},"nativeSrc":"1794:56:9","nodeType":"YulIf","src":"1794:56:9"},{"nativeSrc":"1860:37:9","nodeType":"YulAssignment","src":"1860:37:9","value":{"arguments":[{"name":"length","nativeSrc":"1890:6:9","nodeType":"YulIdentifier","src":"1890:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1868:21:9","nodeType":"YulIdentifier","src":"1868:21:9"},"nativeSrc":"1868:29:9","nodeType":"YulFunctionCall","src":"1868:29:9"},"variableNames":[{"name":"size","nativeSrc":"1860:4:9","nodeType":"YulIdentifier","src":"1860:4:9"}]},{"nativeSrc":"1934:23:9","nodeType":"YulAssignment","src":"1934:23:9","value":{"arguments":[{"name":"size","nativeSrc":"1946:4:9","nodeType":"YulIdentifier","src":"1946:4:9"},{"kind":"number","nativeSrc":"1952:4:9","nodeType":"YulLiteral","src":"1952:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1942:3:9","nodeType":"YulIdentifier","src":"1942:3:9"},"nativeSrc":"1942:15:9","nodeType":"YulFunctionCall","src":"1942:15:9"},"variableNames":[{"name":"size","nativeSrc":"1934:4:9","nodeType":"YulIdentifier","src":"1934:4:9"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1656:308:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1707:6:9","nodeType":"YulTypedName","src":"1707:6:9","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1718:4:9","nodeType":"YulTypedName","src":"1718:4:9","type":""}],"src":"1656:308:9"},{"body":{"nativeSrc":"2032:186:9","nodeType":"YulBlock","src":"2032:186:9","statements":[{"nativeSrc":"2043:10:9","nodeType":"YulVariableDeclaration","src":"2043:10:9","value":{"kind":"number","nativeSrc":"2052:1:9","nodeType":"YulLiteral","src":"2052:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2047:1:9","nodeType":"YulTypedName","src":"2047:1:9","type":""}]},{"body":{"nativeSrc":"2112:63:9","nodeType":"YulBlock","src":"2112:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2137:3:9","nodeType":"YulIdentifier","src":"2137:3:9"},{"name":"i","nativeSrc":"2142:1:9","nodeType":"YulIdentifier","src":"2142:1:9"}],"functionName":{"name":"add","nativeSrc":"2133:3:9","nodeType":"YulIdentifier","src":"2133:3:9"},"nativeSrc":"2133:11:9","nodeType":"YulFunctionCall","src":"2133:11:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2156:3:9","nodeType":"YulIdentifier","src":"2156:3:9"},{"name":"i","nativeSrc":"2161:1:9","nodeType":"YulIdentifier","src":"2161:1:9"}],"functionName":{"name":"add","nativeSrc":"2152:3:9","nodeType":"YulIdentifier","src":"2152:3:9"},"nativeSrc":"2152:11:9","nodeType":"YulFunctionCall","src":"2152:11:9"}],"functionName":{"name":"mload","nativeSrc":"2146:5:9","nodeType":"YulIdentifier","src":"2146:5:9"},"nativeSrc":"2146:18:9","nodeType":"YulFunctionCall","src":"2146:18:9"}],"functionName":{"name":"mstore","nativeSrc":"2126:6:9","nodeType":"YulIdentifier","src":"2126:6:9"},"nativeSrc":"2126:39:9","nodeType":"YulFunctionCall","src":"2126:39:9"},"nativeSrc":"2126:39:9","nodeType":"YulExpressionStatement","src":"2126:39:9"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2073:1:9","nodeType":"YulIdentifier","src":"2073:1:9"},{"name":"length","nativeSrc":"2076:6:9","nodeType":"YulIdentifier","src":"2076:6:9"}],"functionName":{"name":"lt","nativeSrc":"2070:2:9","nodeType":"YulIdentifier","src":"2070:2:9"},"nativeSrc":"2070:13:9","nodeType":"YulFunctionCall","src":"2070:13:9"},"nativeSrc":"2062:113:9","nodeType":"YulForLoop","post":{"nativeSrc":"2084:19:9","nodeType":"YulBlock","src":"2084:19:9","statements":[{"nativeSrc":"2086:15:9","nodeType":"YulAssignment","src":"2086:15:9","value":{"arguments":[{"name":"i","nativeSrc":"2095:1:9","nodeType":"YulIdentifier","src":"2095:1:9"},{"kind":"number","nativeSrc":"2098:2:9","nodeType":"YulLiteral","src":"2098:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2091:3:9","nodeType":"YulIdentifier","src":"2091:3:9"},"nativeSrc":"2091:10:9","nodeType":"YulFunctionCall","src":"2091:10:9"},"variableNames":[{"name":"i","nativeSrc":"2086:1:9","nodeType":"YulIdentifier","src":"2086:1:9"}]}]},"pre":{"nativeSrc":"2066:3:9","nodeType":"YulBlock","src":"2066:3:9","statements":[]},"src":"2062:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2195:3:9","nodeType":"YulIdentifier","src":"2195:3:9"},{"name":"length","nativeSrc":"2200:6:9","nodeType":"YulIdentifier","src":"2200:6:9"}],"functionName":{"name":"add","nativeSrc":"2191:3:9","nodeType":"YulIdentifier","src":"2191:3:9"},"nativeSrc":"2191:16:9","nodeType":"YulFunctionCall","src":"2191:16:9"},{"kind":"number","nativeSrc":"2209:1:9","nodeType":"YulLiteral","src":"2209:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2184:6:9","nodeType":"YulIdentifier","src":"2184:6:9"},"nativeSrc":"2184:27:9","nodeType":"YulFunctionCall","src":"2184:27:9"},"nativeSrc":"2184:27:9","nodeType":"YulExpressionStatement","src":"2184:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1970:248:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2014:3:9","nodeType":"YulTypedName","src":"2014:3:9","type":""},{"name":"dst","nativeSrc":"2019:3:9","nodeType":"YulTypedName","src":"2019:3:9","type":""},{"name":"length","nativeSrc":"2024:6:9","nodeType":"YulTypedName","src":"2024:6:9","type":""}],"src":"1970:248:9"},{"body":{"nativeSrc":"2319:339:9","nodeType":"YulBlock","src":"2319:339:9","statements":[{"nativeSrc":"2329:75:9","nodeType":"YulAssignment","src":"2329:75:9","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2396:6:9","nodeType":"YulIdentifier","src":"2396:6:9"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2354:41:9","nodeType":"YulIdentifier","src":"2354:41:9"},"nativeSrc":"2354:49:9","nodeType":"YulFunctionCall","src":"2354:49:9"}],"functionName":{"name":"allocate_memory","nativeSrc":"2338:15:9","nodeType":"YulIdentifier","src":"2338:15:9"},"nativeSrc":"2338:66:9","nodeType":"YulFunctionCall","src":"2338:66:9"},"variableNames":[{"name":"array","nativeSrc":"2329:5:9","nodeType":"YulIdentifier","src":"2329:5:9"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2420:5:9","nodeType":"YulIdentifier","src":"2420:5:9"},{"name":"length","nativeSrc":"2427:6:9","nodeType":"YulIdentifier","src":"2427:6:9"}],"functionName":{"name":"mstore","nativeSrc":"2413:6:9","nodeType":"YulIdentifier","src":"2413:6:9"},"nativeSrc":"2413:21:9","nodeType":"YulFunctionCall","src":"2413:21:9"},"nativeSrc":"2413:21:9","nodeType":"YulExpressionStatement","src":"2413:21:9"},{"nativeSrc":"2443:27:9","nodeType":"YulVariableDeclaration","src":"2443:27:9","value":{"arguments":[{"name":"array","nativeSrc":"2458:5:9","nodeType":"YulIdentifier","src":"2458:5:9"},{"kind":"number","nativeSrc":"2465:4:9","nodeType":"YulLiteral","src":"2465:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2454:3:9","nodeType":"YulIdentifier","src":"2454:3:9"},"nativeSrc":"2454:16:9","nodeType":"YulFunctionCall","src":"2454:16:9"},"variables":[{"name":"dst","nativeSrc":"2447:3:9","nodeType":"YulTypedName","src":"2447:3:9","type":""}]},{"body":{"nativeSrc":"2508:83:9","nodeType":"YulBlock","src":"2508:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2510:77:9","nodeType":"YulIdentifier","src":"2510:77:9"},"nativeSrc":"2510:79:9","nodeType":"YulFunctionCall","src":"2510:79:9"},"nativeSrc":"2510:79:9","nodeType":"YulExpressionStatement","src":"2510:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2489:3:9","nodeType":"YulIdentifier","src":"2489:3:9"},{"name":"length","nativeSrc":"2494:6:9","nodeType":"YulIdentifier","src":"2494:6:9"}],"functionName":{"name":"add","nativeSrc":"2485:3:9","nodeType":"YulIdentifier","src":"2485:3:9"},"nativeSrc":"2485:16:9","nodeType":"YulFunctionCall","src":"2485:16:9"},{"name":"end","nativeSrc":"2503:3:9","nodeType":"YulIdentifier","src":"2503:3:9"}],"functionName":{"name":"gt","nativeSrc":"2482:2:9","nodeType":"YulIdentifier","src":"2482:2:9"},"nativeSrc":"2482:25:9","nodeType":"YulFunctionCall","src":"2482:25:9"},"nativeSrc":"2479:112:9","nodeType":"YulIf","src":"2479:112:9"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2635:3:9","nodeType":"YulIdentifier","src":"2635:3:9"},{"name":"dst","nativeSrc":"2640:3:9","nodeType":"YulIdentifier","src":"2640:3:9"},{"name":"length","nativeSrc":"2645:6:9","nodeType":"YulIdentifier","src":"2645:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2600:34:9","nodeType":"YulIdentifier","src":"2600:34:9"},"nativeSrc":"2600:52:9","nodeType":"YulFunctionCall","src":"2600:52:9"},"nativeSrc":"2600:52:9","nodeType":"YulExpressionStatement","src":"2600:52:9"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2224:434:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2292:3:9","nodeType":"YulTypedName","src":"2292:3:9","type":""},{"name":"length","nativeSrc":"2297:6:9","nodeType":"YulTypedName","src":"2297:6:9","type":""},{"name":"end","nativeSrc":"2305:3:9","nodeType":"YulTypedName","src":"2305:3:9","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2313:5:9","nodeType":"YulTypedName","src":"2313:5:9","type":""}],"src":"2224:434:9"},{"body":{"nativeSrc":"2751:282:9","nodeType":"YulBlock","src":"2751:282:9","statements":[{"body":{"nativeSrc":"2800:83:9","nodeType":"YulBlock","src":"2800:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2802:77:9","nodeType":"YulIdentifier","src":"2802:77:9"},"nativeSrc":"2802:79:9","nodeType":"YulFunctionCall","src":"2802:79:9"},"nativeSrc":"2802:79:9","nodeType":"YulExpressionStatement","src":"2802:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2779:6:9","nodeType":"YulIdentifier","src":"2779:6:9"},{"kind":"number","nativeSrc":"2787:4:9","nodeType":"YulLiteral","src":"2787:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2775:3:9","nodeType":"YulIdentifier","src":"2775:3:9"},"nativeSrc":"2775:17:9","nodeType":"YulFunctionCall","src":"2775:17:9"},{"name":"end","nativeSrc":"2794:3:9","nodeType":"YulIdentifier","src":"2794:3:9"}],"functionName":{"name":"slt","nativeSrc":"2771:3:9","nodeType":"YulIdentifier","src":"2771:3:9"},"nativeSrc":"2771:27:9","nodeType":"YulFunctionCall","src":"2771:27:9"}],"functionName":{"name":"iszero","nativeSrc":"2764:6:9","nodeType":"YulIdentifier","src":"2764:6:9"},"nativeSrc":"2764:35:9","nodeType":"YulFunctionCall","src":"2764:35:9"},"nativeSrc":"2761:122:9","nodeType":"YulIf","src":"2761:122:9"},{"nativeSrc":"2892:27:9","nodeType":"YulVariableDeclaration","src":"2892:27:9","value":{"arguments":[{"name":"offset","nativeSrc":"2912:6:9","nodeType":"YulIdentifier","src":"2912:6:9"}],"functionName":{"name":"mload","nativeSrc":"2906:5:9","nodeType":"YulIdentifier","src":"2906:5:9"},"nativeSrc":"2906:13:9","nodeType":"YulFunctionCall","src":"2906:13:9"},"variables":[{"name":"length","nativeSrc":"2896:6:9","nodeType":"YulTypedName","src":"2896:6:9","type":""}]},{"nativeSrc":"2928:99:9","nodeType":"YulAssignment","src":"2928:99:9","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3000:6:9","nodeType":"YulIdentifier","src":"3000:6:9"},{"kind":"number","nativeSrc":"3008:4:9","nodeType":"YulLiteral","src":"3008:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2996:3:9","nodeType":"YulIdentifier","src":"2996:3:9"},"nativeSrc":"2996:17:9","nodeType":"YulFunctionCall","src":"2996:17:9"},{"name":"length","nativeSrc":"3015:6:9","nodeType":"YulIdentifier","src":"3015:6:9"},{"name":"end","nativeSrc":"3023:3:9","nodeType":"YulIdentifier","src":"3023:3:9"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2937:58:9","nodeType":"YulIdentifier","src":"2937:58:9"},"nativeSrc":"2937:90:9","nodeType":"YulFunctionCall","src":"2937:90:9"},"variableNames":[{"name":"array","nativeSrc":"2928:5:9","nodeType":"YulIdentifier","src":"2928:5:9"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2678:355:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2729:6:9","nodeType":"YulTypedName","src":"2729:6:9","type":""},{"name":"end","nativeSrc":"2737:3:9","nodeType":"YulTypedName","src":"2737:3:9","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2745:5:9","nodeType":"YulTypedName","src":"2745:5:9","type":""}],"src":"2678:355:9"},{"body":{"nativeSrc":"3084:32:9","nodeType":"YulBlock","src":"3084:32:9","statements":[{"nativeSrc":"3094:16:9","nodeType":"YulAssignment","src":"3094:16:9","value":{"name":"value","nativeSrc":"3105:5:9","nodeType":"YulIdentifier","src":"3105:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"3094:7:9","nodeType":"YulIdentifier","src":"3094:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3039:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3066:5:9","nodeType":"YulTypedName","src":"3066:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3076:7:9","nodeType":"YulTypedName","src":"3076:7:9","type":""}],"src":"3039:77:9"},{"body":{"nativeSrc":"3165:79:9","nodeType":"YulBlock","src":"3165:79:9","statements":[{"body":{"nativeSrc":"3222:16:9","nodeType":"YulBlock","src":"3222:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3231:1:9","nodeType":"YulLiteral","src":"3231:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"3234:1:9","nodeType":"YulLiteral","src":"3234:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3224:6:9","nodeType":"YulIdentifier","src":"3224:6:9"},"nativeSrc":"3224:12:9","nodeType":"YulFunctionCall","src":"3224:12:9"},"nativeSrc":"3224:12:9","nodeType":"YulExpressionStatement","src":"3224:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3188:5:9","nodeType":"YulIdentifier","src":"3188:5:9"},{"arguments":[{"name":"value","nativeSrc":"3213:5:9","nodeType":"YulIdentifier","src":"3213:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3195:17:9","nodeType":"YulIdentifier","src":"3195:17:9"},"nativeSrc":"3195:24:9","nodeType":"YulFunctionCall","src":"3195:24:9"}],"functionName":{"name":"eq","nativeSrc":"3185:2:9","nodeType":"YulIdentifier","src":"3185:2:9"},"nativeSrc":"3185:35:9","nodeType":"YulFunctionCall","src":"3185:35:9"}],"functionName":{"name":"iszero","nativeSrc":"3178:6:9","nodeType":"YulIdentifier","src":"3178:6:9"},"nativeSrc":"3178:43:9","nodeType":"YulFunctionCall","src":"3178:43:9"},"nativeSrc":"3175:63:9","nodeType":"YulIf","src":"3175:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"3122:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3158:5:9","nodeType":"YulTypedName","src":"3158:5:9","type":""}],"src":"3122:122:9"},{"body":{"nativeSrc":"3313:80:9","nodeType":"YulBlock","src":"3313:80:9","statements":[{"nativeSrc":"3323:22:9","nodeType":"YulAssignment","src":"3323:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"3338:6:9","nodeType":"YulIdentifier","src":"3338:6:9"}],"functionName":{"name":"mload","nativeSrc":"3332:5:9","nodeType":"YulIdentifier","src":"3332:5:9"},"nativeSrc":"3332:13:9","nodeType":"YulFunctionCall","src":"3332:13:9"},"variableNames":[{"name":"value","nativeSrc":"3323:5:9","nodeType":"YulIdentifier","src":"3323:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3381:5:9","nodeType":"YulIdentifier","src":"3381:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3354:26:9","nodeType":"YulIdentifier","src":"3354:26:9"},"nativeSrc":"3354:33:9","nodeType":"YulFunctionCall","src":"3354:33:9"},"nativeSrc":"3354:33:9","nodeType":"YulExpressionStatement","src":"3354:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3250:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3291:6:9","nodeType":"YulTypedName","src":"3291:6:9","type":""},{"name":"end","nativeSrc":"3299:3:9","nodeType":"YulTypedName","src":"3299:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3307:5:9","nodeType":"YulTypedName","src":"3307:5:9","type":""}],"src":"3250:143:9"},{"body":{"nativeSrc":"3547:1018:9","nodeType":"YulBlock","src":"3547:1018:9","statements":[{"body":{"nativeSrc":"3594:83:9","nodeType":"YulBlock","src":"3594:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3596:77:9","nodeType":"YulIdentifier","src":"3596:77:9"},"nativeSrc":"3596:79:9","nodeType":"YulFunctionCall","src":"3596:79:9"},"nativeSrc":"3596:79:9","nodeType":"YulExpressionStatement","src":"3596:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3568:7:9","nodeType":"YulIdentifier","src":"3568:7:9"},{"name":"headStart","nativeSrc":"3577:9:9","nodeType":"YulIdentifier","src":"3577:9:9"}],"functionName":{"name":"sub","nativeSrc":"3564:3:9","nodeType":"YulIdentifier","src":"3564:3:9"},"nativeSrc":"3564:23:9","nodeType":"YulFunctionCall","src":"3564:23:9"},{"kind":"number","nativeSrc":"3589:3:9","nodeType":"YulLiteral","src":"3589:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"3560:3:9","nodeType":"YulIdentifier","src":"3560:3:9"},"nativeSrc":"3560:33:9","nodeType":"YulFunctionCall","src":"3560:33:9"},"nativeSrc":"3557:120:9","nodeType":"YulIf","src":"3557:120:9"},{"nativeSrc":"3687:128:9","nodeType":"YulBlock","src":"3687:128:9","statements":[{"nativeSrc":"3702:15:9","nodeType":"YulVariableDeclaration","src":"3702:15:9","value":{"kind":"number","nativeSrc":"3716:1:9","nodeType":"YulLiteral","src":"3716:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3706:6:9","nodeType":"YulTypedName","src":"3706:6:9","type":""}]},{"nativeSrc":"3731:74:9","nodeType":"YulAssignment","src":"3731:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3777:9:9","nodeType":"YulIdentifier","src":"3777:9:9"},{"name":"offset","nativeSrc":"3788:6:9","nodeType":"YulIdentifier","src":"3788:6:9"}],"functionName":{"name":"add","nativeSrc":"3773:3:9","nodeType":"YulIdentifier","src":"3773:3:9"},"nativeSrc":"3773:22:9","nodeType":"YulFunctionCall","src":"3773:22:9"},{"name":"dataEnd","nativeSrc":"3797:7:9","nodeType":"YulIdentifier","src":"3797:7:9"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"3741:31:9","nodeType":"YulIdentifier","src":"3741:31:9"},"nativeSrc":"3741:64:9","nodeType":"YulFunctionCall","src":"3741:64:9"},"variableNames":[{"name":"value0","nativeSrc":"3731:6:9","nodeType":"YulIdentifier","src":"3731:6:9"}]}]},{"nativeSrc":"3825:292:9","nodeType":"YulBlock","src":"3825:292:9","statements":[{"nativeSrc":"3840:39:9","nodeType":"YulVariableDeclaration","src":"3840:39:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3864:9:9","nodeType":"YulIdentifier","src":"3864:9:9"},{"kind":"number","nativeSrc":"3875:2:9","nodeType":"YulLiteral","src":"3875:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3860:3:9","nodeType":"YulIdentifier","src":"3860:3:9"},"nativeSrc":"3860:18:9","nodeType":"YulFunctionCall","src":"3860:18:9"}],"functionName":{"name":"mload","nativeSrc":"3854:5:9","nodeType":"YulIdentifier","src":"3854:5:9"},"nativeSrc":"3854:25:9","nodeType":"YulFunctionCall","src":"3854:25:9"},"variables":[{"name":"offset","nativeSrc":"3844:6:9","nodeType":"YulTypedName","src":"3844:6:9","type":""}]},{"body":{"nativeSrc":"3926:83:9","nodeType":"YulBlock","src":"3926:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3928:77:9","nodeType":"YulIdentifier","src":"3928:77:9"},"nativeSrc":"3928:79:9","nodeType":"YulFunctionCall","src":"3928:79:9"},"nativeSrc":"3928:79:9","nodeType":"YulExpressionStatement","src":"3928:79:9"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3898:6:9","nodeType":"YulIdentifier","src":"3898:6:9"},{"kind":"number","nativeSrc":"3906:18:9","nodeType":"YulLiteral","src":"3906:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3895:2:9","nodeType":"YulIdentifier","src":"3895:2:9"},"nativeSrc":"3895:30:9","nodeType":"YulFunctionCall","src":"3895:30:9"},"nativeSrc":"3892:117:9","nodeType":"YulIf","src":"3892:117:9"},{"nativeSrc":"4023:84:9","nodeType":"YulAssignment","src":"4023:84:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4079:9:9","nodeType":"YulIdentifier","src":"4079:9:9"},{"name":"offset","nativeSrc":"4090:6:9","nodeType":"YulIdentifier","src":"4090:6:9"}],"functionName":{"name":"add","nativeSrc":"4075:3:9","nodeType":"YulIdentifier","src":"4075:3:9"},"nativeSrc":"4075:22:9","nodeType":"YulFunctionCall","src":"4075:22:9"},{"name":"dataEnd","nativeSrc":"4099:7:9","nodeType":"YulIdentifier","src":"4099:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4033:41:9","nodeType":"YulIdentifier","src":"4033:41:9"},"nativeSrc":"4033:74:9","nodeType":"YulFunctionCall","src":"4033:74:9"},"variableNames":[{"name":"value1","nativeSrc":"4023:6:9","nodeType":"YulIdentifier","src":"4023:6:9"}]}]},{"nativeSrc":"4127:292:9","nodeType":"YulBlock","src":"4127:292:9","statements":[{"nativeSrc":"4142:39:9","nodeType":"YulVariableDeclaration","src":"4142:39:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4166:9:9","nodeType":"YulIdentifier","src":"4166:9:9"},{"kind":"number","nativeSrc":"4177:2:9","nodeType":"YulLiteral","src":"4177:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4162:3:9","nodeType":"YulIdentifier","src":"4162:3:9"},"nativeSrc":"4162:18:9","nodeType":"YulFunctionCall","src":"4162:18:9"}],"functionName":{"name":"mload","nativeSrc":"4156:5:9","nodeType":"YulIdentifier","src":"4156:5:9"},"nativeSrc":"4156:25:9","nodeType":"YulFunctionCall","src":"4156:25:9"},"variables":[{"name":"offset","nativeSrc":"4146:6:9","nodeType":"YulTypedName","src":"4146:6:9","type":""}]},{"body":{"nativeSrc":"4228:83:9","nodeType":"YulBlock","src":"4228:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4230:77:9","nodeType":"YulIdentifier","src":"4230:77:9"},"nativeSrc":"4230:79:9","nodeType":"YulFunctionCall","src":"4230:79:9"},"nativeSrc":"4230:79:9","nodeType":"YulExpressionStatement","src":"4230:79:9"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4200:6:9","nodeType":"YulIdentifier","src":"4200:6:9"},{"kind":"number","nativeSrc":"4208:18:9","nodeType":"YulLiteral","src":"4208:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4197:2:9","nodeType":"YulIdentifier","src":"4197:2:9"},"nativeSrc":"4197:30:9","nodeType":"YulFunctionCall","src":"4197:30:9"},"nativeSrc":"4194:117:9","nodeType":"YulIf","src":"4194:117:9"},{"nativeSrc":"4325:84:9","nodeType":"YulAssignment","src":"4325:84:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4381:9:9","nodeType":"YulIdentifier","src":"4381:9:9"},{"name":"offset","nativeSrc":"4392:6:9","nodeType":"YulIdentifier","src":"4392:6:9"}],"functionName":{"name":"add","nativeSrc":"4377:3:9","nodeType":"YulIdentifier","src":"4377:3:9"},"nativeSrc":"4377:22:9","nodeType":"YulFunctionCall","src":"4377:22:9"},{"name":"dataEnd","nativeSrc":"4401:7:9","nodeType":"YulIdentifier","src":"4401:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"4335:41:9","nodeType":"YulIdentifier","src":"4335:41:9"},"nativeSrc":"4335:74:9","nodeType":"YulFunctionCall","src":"4335:74:9"},"variableNames":[{"name":"value2","nativeSrc":"4325:6:9","nodeType":"YulIdentifier","src":"4325:6:9"}]}]},{"nativeSrc":"4429:129:9","nodeType":"YulBlock","src":"4429:129:9","statements":[{"nativeSrc":"4444:16:9","nodeType":"YulVariableDeclaration","src":"4444:16:9","value":{"kind":"number","nativeSrc":"4458:2:9","nodeType":"YulLiteral","src":"4458:2:9","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"4448:6:9","nodeType":"YulTypedName","src":"4448:6:9","type":""}]},{"nativeSrc":"4474:74:9","nodeType":"YulAssignment","src":"4474:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4520:9:9","nodeType":"YulIdentifier","src":"4520:9:9"},{"name":"offset","nativeSrc":"4531:6:9","nodeType":"YulIdentifier","src":"4531:6:9"}],"functionName":{"name":"add","nativeSrc":"4516:3:9","nodeType":"YulIdentifier","src":"4516:3:9"},"nativeSrc":"4516:22:9","nodeType":"YulFunctionCall","src":"4516:22:9"},{"name":"dataEnd","nativeSrc":"4540:7:9","nodeType":"YulIdentifier","src":"4540:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4484:31:9","nodeType":"YulIdentifier","src":"4484:31:9"},"nativeSrc":"4484:64:9","nodeType":"YulFunctionCall","src":"4484:64:9"},"variableNames":[{"name":"value3","nativeSrc":"4474:6:9","nodeType":"YulIdentifier","src":"4474:6:9"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory","nativeSrc":"3399:1166:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3493:9:9","nodeType":"YulTypedName","src":"3493:9:9","type":""},{"name":"dataEnd","nativeSrc":"3504:7:9","nodeType":"YulTypedName","src":"3504:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3516:6:9","nodeType":"YulTypedName","src":"3516:6:9","type":""},{"name":"value1","nativeSrc":"3524:6:9","nodeType":"YulTypedName","src":"3524:6:9","type":""},{"name":"value2","nativeSrc":"3532:6:9","nodeType":"YulTypedName","src":"3532:6:9","type":""},{"name":"value3","nativeSrc":"3540:6:9","nodeType":"YulTypedName","src":"3540:6:9","type":""}],"src":"3399:1166:9"},{"body":{"nativeSrc":"4630:40:9","nodeType":"YulBlock","src":"4630:40:9","statements":[{"nativeSrc":"4641:22:9","nodeType":"YulAssignment","src":"4641:22:9","value":{"arguments":[{"name":"value","nativeSrc":"4657:5:9","nodeType":"YulIdentifier","src":"4657:5:9"}],"functionName":{"name":"mload","nativeSrc":"4651:5:9","nodeType":"YulIdentifier","src":"4651:5:9"},"nativeSrc":"4651:12:9","nodeType":"YulFunctionCall","src":"4651:12:9"},"variableNames":[{"name":"length","nativeSrc":"4641:6:9","nodeType":"YulIdentifier","src":"4641:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4571:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4613:5:9","nodeType":"YulTypedName","src":"4613:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4623:6:9","nodeType":"YulTypedName","src":"4623:6:9","type":""}],"src":"4571:99:9"},{"body":{"nativeSrc":"4704:152:9","nodeType":"YulBlock","src":"4704:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4721:1:9","nodeType":"YulLiteral","src":"4721:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"4724:77:9","nodeType":"YulLiteral","src":"4724:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4714:6:9","nodeType":"YulIdentifier","src":"4714:6:9"},"nativeSrc":"4714:88:9","nodeType":"YulFunctionCall","src":"4714:88:9"},"nativeSrc":"4714:88:9","nodeType":"YulExpressionStatement","src":"4714:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4818:1:9","nodeType":"YulLiteral","src":"4818:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"4821:4:9","nodeType":"YulLiteral","src":"4821:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4811:6:9","nodeType":"YulIdentifier","src":"4811:6:9"},"nativeSrc":"4811:15:9","nodeType":"YulFunctionCall","src":"4811:15:9"},"nativeSrc":"4811:15:9","nodeType":"YulExpressionStatement","src":"4811:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4842:1:9","nodeType":"YulLiteral","src":"4842:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"4845:4:9","nodeType":"YulLiteral","src":"4845:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4835:6:9","nodeType":"YulIdentifier","src":"4835:6:9"},"nativeSrc":"4835:15:9","nodeType":"YulFunctionCall","src":"4835:15:9"},"nativeSrc":"4835:15:9","nodeType":"YulExpressionStatement","src":"4835:15:9"}]},"name":"panic_error_0x22","nativeSrc":"4676:180:9","nodeType":"YulFunctionDefinition","src":"4676:180:9"},{"body":{"nativeSrc":"4913:269:9","nodeType":"YulBlock","src":"4913:269:9","statements":[{"nativeSrc":"4923:22:9","nodeType":"YulAssignment","src":"4923:22:9","value":{"arguments":[{"name":"data","nativeSrc":"4937:4:9","nodeType":"YulIdentifier","src":"4937:4:9"},{"kind":"number","nativeSrc":"4943:1:9","nodeType":"YulLiteral","src":"4943:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4933:3:9","nodeType":"YulIdentifier","src":"4933:3:9"},"nativeSrc":"4933:12:9","nodeType":"YulFunctionCall","src":"4933:12:9"},"variableNames":[{"name":"length","nativeSrc":"4923:6:9","nodeType":"YulIdentifier","src":"4923:6:9"}]},{"nativeSrc":"4954:38:9","nodeType":"YulVariableDeclaration","src":"4954:38:9","value":{"arguments":[{"name":"data","nativeSrc":"4984:4:9","nodeType":"YulIdentifier","src":"4984:4:9"},{"kind":"number","nativeSrc":"4990:1:9","nodeType":"YulLiteral","src":"4990:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4980:3:9","nodeType":"YulIdentifier","src":"4980:3:9"},"nativeSrc":"4980:12:9","nodeType":"YulFunctionCall","src":"4980:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4958:18:9","nodeType":"YulTypedName","src":"4958:18:9","type":""}]},{"body":{"nativeSrc":"5031:51:9","nodeType":"YulBlock","src":"5031:51:9","statements":[{"nativeSrc":"5045:27:9","nodeType":"YulAssignment","src":"5045:27:9","value":{"arguments":[{"name":"length","nativeSrc":"5059:6:9","nodeType":"YulIdentifier","src":"5059:6:9"},{"kind":"number","nativeSrc":"5067:4:9","nodeType":"YulLiteral","src":"5067:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5055:3:9","nodeType":"YulIdentifier","src":"5055:3:9"},"nativeSrc":"5055:17:9","nodeType":"YulFunctionCall","src":"5055:17:9"},"variableNames":[{"name":"length","nativeSrc":"5045:6:9","nodeType":"YulIdentifier","src":"5045:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5011:18:9","nodeType":"YulIdentifier","src":"5011:18:9"}],"functionName":{"name":"iszero","nativeSrc":"5004:6:9","nodeType":"YulIdentifier","src":"5004:6:9"},"nativeSrc":"5004:26:9","nodeType":"YulFunctionCall","src":"5004:26:9"},"nativeSrc":"5001:81:9","nodeType":"YulIf","src":"5001:81:9"},{"body":{"nativeSrc":"5134:42:9","nodeType":"YulBlock","src":"5134:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"5148:16:9","nodeType":"YulIdentifier","src":"5148:16:9"},"nativeSrc":"5148:18:9","nodeType":"YulFunctionCall","src":"5148:18:9"},"nativeSrc":"5148:18:9","nodeType":"YulExpressionStatement","src":"5148:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5098:18:9","nodeType":"YulIdentifier","src":"5098:18:9"},{"arguments":[{"name":"length","nativeSrc":"5121:6:9","nodeType":"YulIdentifier","src":"5121:6:9"},{"kind":"number","nativeSrc":"5129:2:9","nodeType":"YulLiteral","src":"5129:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5118:2:9","nodeType":"YulIdentifier","src":"5118:2:9"},"nativeSrc":"5118:14:9","nodeType":"YulFunctionCall","src":"5118:14:9"}],"functionName":{"name":"eq","nativeSrc":"5095:2:9","nodeType":"YulIdentifier","src":"5095:2:9"},"nativeSrc":"5095:38:9","nodeType":"YulFunctionCall","src":"5095:38:9"},"nativeSrc":"5092:84:9","nodeType":"YulIf","src":"5092:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"4862:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4897:4:9","nodeType":"YulTypedName","src":"4897:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4906:6:9","nodeType":"YulTypedName","src":"4906:6:9","type":""}],"src":"4862:320:9"},{"body":{"nativeSrc":"5242:87:9","nodeType":"YulBlock","src":"5242:87:9","statements":[{"nativeSrc":"5252:11:9","nodeType":"YulAssignment","src":"5252:11:9","value":{"name":"ptr","nativeSrc":"5260:3:9","nodeType":"YulIdentifier","src":"5260:3:9"},"variableNames":[{"name":"data","nativeSrc":"5252:4:9","nodeType":"YulIdentifier","src":"5252:4:9"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5280:1:9","nodeType":"YulLiteral","src":"5280:1:9","type":"","value":"0"},{"name":"ptr","nativeSrc":"5283:3:9","nodeType":"YulIdentifier","src":"5283:3:9"}],"functionName":{"name":"mstore","nativeSrc":"5273:6:9","nodeType":"YulIdentifier","src":"5273:6:9"},"nativeSrc":"5273:14:9","nodeType":"YulFunctionCall","src":"5273:14:9"},"nativeSrc":"5273:14:9","nodeType":"YulExpressionStatement","src":"5273:14:9"},{"nativeSrc":"5296:26:9","nodeType":"YulAssignment","src":"5296:26:9","value":{"arguments":[{"kind":"number","nativeSrc":"5314:1:9","nodeType":"YulLiteral","src":"5314:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"5317:4:9","nodeType":"YulLiteral","src":"5317:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"5304:9:9","nodeType":"YulIdentifier","src":"5304:9:9"},"nativeSrc":"5304:18:9","nodeType":"YulFunctionCall","src":"5304:18:9"},"variableNames":[{"name":"data","nativeSrc":"5296:4:9","nodeType":"YulIdentifier","src":"5296:4:9"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"5188:141:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"5229:3:9","nodeType":"YulTypedName","src":"5229:3:9","type":""}],"returnVariables":[{"name":"data","nativeSrc":"5237:4:9","nodeType":"YulTypedName","src":"5237:4:9","type":""}],"src":"5188:141:9"},{"body":{"nativeSrc":"5379:49:9","nodeType":"YulBlock","src":"5379:49:9","statements":[{"nativeSrc":"5389:33:9","nodeType":"YulAssignment","src":"5389:33:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5407:5:9","nodeType":"YulIdentifier","src":"5407:5:9"},{"kind":"number","nativeSrc":"5414:2:9","nodeType":"YulLiteral","src":"5414:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5403:3:9","nodeType":"YulIdentifier","src":"5403:3:9"},"nativeSrc":"5403:14:9","nodeType":"YulFunctionCall","src":"5403:14:9"},{"kind":"number","nativeSrc":"5419:2:9","nodeType":"YulLiteral","src":"5419:2:9","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"5399:3:9","nodeType":"YulIdentifier","src":"5399:3:9"},"nativeSrc":"5399:23:9","nodeType":"YulFunctionCall","src":"5399:23:9"},"variableNames":[{"name":"result","nativeSrc":"5389:6:9","nodeType":"YulIdentifier","src":"5389:6:9"}]}]},"name":"divide_by_32_ceil","nativeSrc":"5335:93:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5362:5:9","nodeType":"YulTypedName","src":"5362:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5372:6:9","nodeType":"YulTypedName","src":"5372:6:9","type":""}],"src":"5335:93:9"},{"body":{"nativeSrc":"5487:54:9","nodeType":"YulBlock","src":"5487:54:9","statements":[{"nativeSrc":"5497:37:9","nodeType":"YulAssignment","src":"5497:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"5522:4:9","nodeType":"YulIdentifier","src":"5522:4:9"},{"name":"value","nativeSrc":"5528:5:9","nodeType":"YulIdentifier","src":"5528:5:9"}],"functionName":{"name":"shl","nativeSrc":"5518:3:9","nodeType":"YulIdentifier","src":"5518:3:9"},"nativeSrc":"5518:16:9","nodeType":"YulFunctionCall","src":"5518:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"5497:8:9","nodeType":"YulIdentifier","src":"5497:8:9"}]}]},"name":"shift_left_dynamic","nativeSrc":"5434:107:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"5462:4:9","nodeType":"YulTypedName","src":"5462:4:9","type":""},{"name":"value","nativeSrc":"5468:5:9","nodeType":"YulTypedName","src":"5468:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"5478:8:9","nodeType":"YulTypedName","src":"5478:8:9","type":""}],"src":"5434:107:9"},{"body":{"nativeSrc":"5623:317:9","nodeType":"YulBlock","src":"5623:317:9","statements":[{"nativeSrc":"5633:35:9","nodeType":"YulVariableDeclaration","src":"5633:35:9","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"5654:10:9","nodeType":"YulIdentifier","src":"5654:10:9"},{"kind":"number","nativeSrc":"5666:1:9","nodeType":"YulLiteral","src":"5666:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"5650:3:9","nodeType":"YulIdentifier","src":"5650:3:9"},"nativeSrc":"5650:18:9","nodeType":"YulFunctionCall","src":"5650:18:9"},"variables":[{"name":"shiftBits","nativeSrc":"5637:9:9","nodeType":"YulTypedName","src":"5637:9:9","type":""}]},{"nativeSrc":"5677:109:9","nodeType":"YulVariableDeclaration","src":"5677:109:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5708:9:9","nodeType":"YulIdentifier","src":"5708:9:9"},{"kind":"number","nativeSrc":"5719:66:9","nodeType":"YulLiteral","src":"5719:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5689:18:9","nodeType":"YulIdentifier","src":"5689:18:9"},"nativeSrc":"5689:97:9","nodeType":"YulFunctionCall","src":"5689:97:9"},"variables":[{"name":"mask","nativeSrc":"5681:4:9","nodeType":"YulTypedName","src":"5681:4:9","type":""}]},{"nativeSrc":"5795:51:9","nodeType":"YulAssignment","src":"5795:51:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5826:9:9","nodeType":"YulIdentifier","src":"5826:9:9"},{"name":"toInsert","nativeSrc":"5837:8:9","nodeType":"YulIdentifier","src":"5837:8:9"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5807:18:9","nodeType":"YulIdentifier","src":"5807:18:9"},"nativeSrc":"5807:39:9","nodeType":"YulFunctionCall","src":"5807:39:9"},"variableNames":[{"name":"toInsert","nativeSrc":"5795:8:9","nodeType":"YulIdentifier","src":"5795:8:9"}]},{"nativeSrc":"5855:30:9","nodeType":"YulAssignment","src":"5855:30:9","value":{"arguments":[{"name":"value","nativeSrc":"5868:5:9","nodeType":"YulIdentifier","src":"5868:5:9"},{"arguments":[{"name":"mask","nativeSrc":"5879:4:9","nodeType":"YulIdentifier","src":"5879:4:9"}],"functionName":{"name":"not","nativeSrc":"5875:3:9","nodeType":"YulIdentifier","src":"5875:3:9"},"nativeSrc":"5875:9:9","nodeType":"YulFunctionCall","src":"5875:9:9"}],"functionName":{"name":"and","nativeSrc":"5864:3:9","nodeType":"YulIdentifier","src":"5864:3:9"},"nativeSrc":"5864:21:9","nodeType":"YulFunctionCall","src":"5864:21:9"},"variableNames":[{"name":"value","nativeSrc":"5855:5:9","nodeType":"YulIdentifier","src":"5855:5:9"}]},{"nativeSrc":"5894:40:9","nodeType":"YulAssignment","src":"5894:40:9","value":{"arguments":[{"name":"value","nativeSrc":"5907:5:9","nodeType":"YulIdentifier","src":"5907:5:9"},{"arguments":[{"name":"toInsert","nativeSrc":"5918:8:9","nodeType":"YulIdentifier","src":"5918:8:9"},{"name":"mask","nativeSrc":"5928:4:9","nodeType":"YulIdentifier","src":"5928:4:9"}],"functionName":{"name":"and","nativeSrc":"5914:3:9","nodeType":"YulIdentifier","src":"5914:3:9"},"nativeSrc":"5914:19:9","nodeType":"YulFunctionCall","src":"5914:19:9"}],"functionName":{"name":"or","nativeSrc":"5904:2:9","nodeType":"YulIdentifier","src":"5904:2:9"},"nativeSrc":"5904:30:9","nodeType":"YulFunctionCall","src":"5904:30:9"},"variableNames":[{"name":"result","nativeSrc":"5894:6:9","nodeType":"YulIdentifier","src":"5894:6:9"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"5547:393:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5584:5:9","nodeType":"YulTypedName","src":"5584:5:9","type":""},{"name":"shiftBytes","nativeSrc":"5591:10:9","nodeType":"YulTypedName","src":"5591:10:9","type":""},{"name":"toInsert","nativeSrc":"5603:8:9","nodeType":"YulTypedName","src":"5603:8:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5616:6:9","nodeType":"YulTypedName","src":"5616:6:9","type":""}],"src":"5547:393:9"},{"body":{"nativeSrc":"5978:28:9","nodeType":"YulBlock","src":"5978:28:9","statements":[{"nativeSrc":"5988:12:9","nodeType":"YulAssignment","src":"5988:12:9","value":{"name":"value","nativeSrc":"5995:5:9","nodeType":"YulIdentifier","src":"5995:5:9"},"variableNames":[{"name":"ret","nativeSrc":"5988:3:9","nodeType":"YulIdentifier","src":"5988:3:9"}]}]},"name":"identity","nativeSrc":"5946:60:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5964:5:9","nodeType":"YulTypedName","src":"5964:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5974:3:9","nodeType":"YulTypedName","src":"5974:3:9","type":""}],"src":"5946:60:9"},{"body":{"nativeSrc":"6072:82:9","nodeType":"YulBlock","src":"6072:82:9","statements":[{"nativeSrc":"6082:66:9","nodeType":"YulAssignment","src":"6082:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6140:5:9","nodeType":"YulIdentifier","src":"6140:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6122:17:9","nodeType":"YulIdentifier","src":"6122:17:9"},"nativeSrc":"6122:24:9","nodeType":"YulFunctionCall","src":"6122:24:9"}],"functionName":{"name":"identity","nativeSrc":"6113:8:9","nodeType":"YulIdentifier","src":"6113:8:9"},"nativeSrc":"6113:34:9","nodeType":"YulFunctionCall","src":"6113:34:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6095:17:9","nodeType":"YulIdentifier","src":"6095:17:9"},"nativeSrc":"6095:53:9","nodeType":"YulFunctionCall","src":"6095:53:9"},"variableNames":[{"name":"converted","nativeSrc":"6082:9:9","nodeType":"YulIdentifier","src":"6082:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6012:142:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6052:5:9","nodeType":"YulTypedName","src":"6052:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6062:9:9","nodeType":"YulTypedName","src":"6062:9:9","type":""}],"src":"6012:142:9"},{"body":{"nativeSrc":"6207:28:9","nodeType":"YulBlock","src":"6207:28:9","statements":[{"nativeSrc":"6217:12:9","nodeType":"YulAssignment","src":"6217:12:9","value":{"name":"value","nativeSrc":"6224:5:9","nodeType":"YulIdentifier","src":"6224:5:9"},"variableNames":[{"name":"ret","nativeSrc":"6217:3:9","nodeType":"YulIdentifier","src":"6217:3:9"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"6160:75:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6193:5:9","nodeType":"YulTypedName","src":"6193:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6203:3:9","nodeType":"YulTypedName","src":"6203:3:9","type":""}],"src":"6160:75:9"},{"body":{"nativeSrc":"6317:193:9","nodeType":"YulBlock","src":"6317:193:9","statements":[{"nativeSrc":"6327:63:9","nodeType":"YulVariableDeclaration","src":"6327:63:9","value":{"arguments":[{"name":"value_0","nativeSrc":"6382:7:9","nodeType":"YulIdentifier","src":"6382:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6351:30:9","nodeType":"YulIdentifier","src":"6351:30:9"},"nativeSrc":"6351:39:9","nodeType":"YulFunctionCall","src":"6351:39:9"},"variables":[{"name":"convertedValue_0","nativeSrc":"6331:16:9","nodeType":"YulTypedName","src":"6331:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6406:4:9","nodeType":"YulIdentifier","src":"6406:4:9"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"6446:4:9","nodeType":"YulIdentifier","src":"6446:4:9"}],"functionName":{"name":"sload","nativeSrc":"6440:5:9","nodeType":"YulIdentifier","src":"6440:5:9"},"nativeSrc":"6440:11:9","nodeType":"YulFunctionCall","src":"6440:11:9"},{"name":"offset","nativeSrc":"6453:6:9","nodeType":"YulIdentifier","src":"6453:6:9"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"6485:16:9","nodeType":"YulIdentifier","src":"6485:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"6461:23:9","nodeType":"YulIdentifier","src":"6461:23:9"},"nativeSrc":"6461:41:9","nodeType":"YulFunctionCall","src":"6461:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"6412:27:9","nodeType":"YulIdentifier","src":"6412:27:9"},"nativeSrc":"6412:91:9","nodeType":"YulFunctionCall","src":"6412:91:9"}],"functionName":{"name":"sstore","nativeSrc":"6399:6:9","nodeType":"YulIdentifier","src":"6399:6:9"},"nativeSrc":"6399:105:9","nodeType":"YulFunctionCall","src":"6399:105:9"},"nativeSrc":"6399:105:9","nodeType":"YulExpressionStatement","src":"6399:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6241:269:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6294:4:9","nodeType":"YulTypedName","src":"6294:4:9","type":""},{"name":"offset","nativeSrc":"6300:6:9","nodeType":"YulTypedName","src":"6300:6:9","type":""},{"name":"value_0","nativeSrc":"6308:7:9","nodeType":"YulTypedName","src":"6308:7:9","type":""}],"src":"6241:269:9"},{"body":{"nativeSrc":"6565:24:9","nodeType":"YulBlock","src":"6565:24:9","statements":[{"nativeSrc":"6575:8:9","nodeType":"YulAssignment","src":"6575:8:9","value":{"kind":"number","nativeSrc":"6582:1:9","nodeType":"YulLiteral","src":"6582:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"6575:3:9","nodeType":"YulIdentifier","src":"6575:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"6516:73:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"6561:3:9","nodeType":"YulTypedName","src":"6561:3:9","type":""}],"src":"6516:73:9"},{"body":{"nativeSrc":"6648:136:9","nodeType":"YulBlock","src":"6648:136:9","statements":[{"nativeSrc":"6658:46:9","nodeType":"YulVariableDeclaration","src":"6658:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"6672:30:9","nodeType":"YulIdentifier","src":"6672:30:9"},"nativeSrc":"6672:32:9","nodeType":"YulFunctionCall","src":"6672:32:9"},"variables":[{"name":"zero_0","nativeSrc":"6662:6:9","nodeType":"YulTypedName","src":"6662:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6757:4:9","nodeType":"YulIdentifier","src":"6757:4:9"},{"name":"offset","nativeSrc":"6763:6:9","nodeType":"YulIdentifier","src":"6763:6:9"},{"name":"zero_0","nativeSrc":"6771:6:9","nodeType":"YulIdentifier","src":"6771:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6713:43:9","nodeType":"YulIdentifier","src":"6713:43:9"},"nativeSrc":"6713:65:9","nodeType":"YulFunctionCall","src":"6713:65:9"},"nativeSrc":"6713:65:9","nodeType":"YulExpressionStatement","src":"6713:65:9"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"6595:189:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6634:4:9","nodeType":"YulTypedName","src":"6634:4:9","type":""},{"name":"offset","nativeSrc":"6640:6:9","nodeType":"YulTypedName","src":"6640:6:9","type":""}],"src":"6595:189:9"},{"body":{"nativeSrc":"6840:136:9","nodeType":"YulBlock","src":"6840:136:9","statements":[{"body":{"nativeSrc":"6907:63:9","nodeType":"YulBlock","src":"6907:63:9","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6951:5:9","nodeType":"YulIdentifier","src":"6951:5:9"},{"kind":"number","nativeSrc":"6958:1:9","nodeType":"YulLiteral","src":"6958:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6921:29:9","nodeType":"YulIdentifier","src":"6921:29:9"},"nativeSrc":"6921:39:9","nodeType":"YulFunctionCall","src":"6921:39:9"},"nativeSrc":"6921:39:9","nodeType":"YulExpressionStatement","src":"6921:39:9"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6860:5:9","nodeType":"YulIdentifier","src":"6860:5:9"},{"name":"end","nativeSrc":"6867:3:9","nodeType":"YulIdentifier","src":"6867:3:9"}],"functionName":{"name":"lt","nativeSrc":"6857:2:9","nodeType":"YulIdentifier","src":"6857:2:9"},"nativeSrc":"6857:14:9","nodeType":"YulFunctionCall","src":"6857:14:9"},"nativeSrc":"6850:120:9","nodeType":"YulForLoop","post":{"nativeSrc":"6872:26:9","nodeType":"YulBlock","src":"6872:26:9","statements":[{"nativeSrc":"6874:22:9","nodeType":"YulAssignment","src":"6874:22:9","value":{"arguments":[{"name":"start","nativeSrc":"6887:5:9","nodeType":"YulIdentifier","src":"6887:5:9"},{"kind":"number","nativeSrc":"6894:1:9","nodeType":"YulLiteral","src":"6894:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6883:3:9","nodeType":"YulIdentifier","src":"6883:3:9"},"nativeSrc":"6883:13:9","nodeType":"YulFunctionCall","src":"6883:13:9"},"variableNames":[{"name":"start","nativeSrc":"6874:5:9","nodeType":"YulIdentifier","src":"6874:5:9"}]}]},"pre":{"nativeSrc":"6854:2:9","nodeType":"YulBlock","src":"6854:2:9","statements":[]},"src":"6850:120:9"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"6790:186:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"6828:5:9","nodeType":"YulTypedName","src":"6828:5:9","type":""},{"name":"end","nativeSrc":"6835:3:9","nodeType":"YulTypedName","src":"6835:3:9","type":""}],"src":"6790:186:9"},{"body":{"nativeSrc":"7061:464:9","nodeType":"YulBlock","src":"7061:464:9","statements":[{"body":{"nativeSrc":"7087:431:9","nodeType":"YulBlock","src":"7087:431:9","statements":[{"nativeSrc":"7101:54:9","nodeType":"YulVariableDeclaration","src":"7101:54:9","value":{"arguments":[{"name":"array","nativeSrc":"7149:5:9","nodeType":"YulIdentifier","src":"7149:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7117:31:9","nodeType":"YulIdentifier","src":"7117:31:9"},"nativeSrc":"7117:38:9","nodeType":"YulFunctionCall","src":"7117:38:9"},"variables":[{"name":"dataArea","nativeSrc":"7105:8:9","nodeType":"YulTypedName","src":"7105:8:9","type":""}]},{"nativeSrc":"7168:63:9","nodeType":"YulVariableDeclaration","src":"7168:63:9","value":{"arguments":[{"name":"dataArea","nativeSrc":"7191:8:9","nodeType":"YulIdentifier","src":"7191:8:9"},{"arguments":[{"name":"startIndex","nativeSrc":"7219:10:9","nodeType":"YulIdentifier","src":"7219:10:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7201:17:9","nodeType":"YulIdentifier","src":"7201:17:9"},"nativeSrc":"7201:29:9","nodeType":"YulFunctionCall","src":"7201:29:9"}],"functionName":{"name":"add","nativeSrc":"7187:3:9","nodeType":"YulIdentifier","src":"7187:3:9"},"nativeSrc":"7187:44:9","nodeType":"YulFunctionCall","src":"7187:44:9"},"variables":[{"name":"deleteStart","nativeSrc":"7172:11:9","nodeType":"YulTypedName","src":"7172:11:9","type":""}]},{"body":{"nativeSrc":"7388:27:9","nodeType":"YulBlock","src":"7388:27:9","statements":[{"nativeSrc":"7390:23:9","nodeType":"YulAssignment","src":"7390:23:9","value":{"name":"dataArea","nativeSrc":"7405:8:9","nodeType":"YulIdentifier","src":"7405:8:9"},"variableNames":[{"name":"deleteStart","nativeSrc":"7390:11:9","nodeType":"YulIdentifier","src":"7390:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7372:10:9","nodeType":"YulIdentifier","src":"7372:10:9"},{"kind":"number","nativeSrc":"7384:2:9","nodeType":"YulLiteral","src":"7384:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7369:2:9","nodeType":"YulIdentifier","src":"7369:2:9"},"nativeSrc":"7369:18:9","nodeType":"YulFunctionCall","src":"7369:18:9"},"nativeSrc":"7366:49:9","nodeType":"YulIf","src":"7366:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"7457:11:9","nodeType":"YulIdentifier","src":"7457:11:9"},{"arguments":[{"name":"dataArea","nativeSrc":"7474:8:9","nodeType":"YulIdentifier","src":"7474:8:9"},{"arguments":[{"name":"len","nativeSrc":"7502:3:9","nodeType":"YulIdentifier","src":"7502:3:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7484:17:9","nodeType":"YulIdentifier","src":"7484:17:9"},"nativeSrc":"7484:22:9","nodeType":"YulFunctionCall","src":"7484:22:9"}],"functionName":{"name":"add","nativeSrc":"7470:3:9","nodeType":"YulIdentifier","src":"7470:3:9"},"nativeSrc":"7470:37:9","nodeType":"YulFunctionCall","src":"7470:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"7428:28:9","nodeType":"YulIdentifier","src":"7428:28:9"},"nativeSrc":"7428:80:9","nodeType":"YulFunctionCall","src":"7428:80:9"},"nativeSrc":"7428:80:9","nodeType":"YulExpressionStatement","src":"7428:80:9"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7078:3:9","nodeType":"YulIdentifier","src":"7078:3:9"},{"kind":"number","nativeSrc":"7083:2:9","nodeType":"YulLiteral","src":"7083:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7075:2:9","nodeType":"YulIdentifier","src":"7075:2:9"},"nativeSrc":"7075:11:9","nodeType":"YulFunctionCall","src":"7075:11:9"},"nativeSrc":"7072:446:9","nodeType":"YulIf","src":"7072:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6982:543:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7037:5:9","nodeType":"YulTypedName","src":"7037:5:9","type":""},{"name":"len","nativeSrc":"7044:3:9","nodeType":"YulTypedName","src":"7044:3:9","type":""},{"name":"startIndex","nativeSrc":"7049:10:9","nodeType":"YulTypedName","src":"7049:10:9","type":""}],"src":"6982:543:9"},{"body":{"nativeSrc":"7594:54:9","nodeType":"YulBlock","src":"7594:54:9","statements":[{"nativeSrc":"7604:37:9","nodeType":"YulAssignment","src":"7604:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"7629:4:9","nodeType":"YulIdentifier","src":"7629:4:9"},{"name":"value","nativeSrc":"7635:5:9","nodeType":"YulIdentifier","src":"7635:5:9"}],"functionName":{"name":"shr","nativeSrc":"7625:3:9","nodeType":"YulIdentifier","src":"7625:3:9"},"nativeSrc":"7625:16:9","nodeType":"YulFunctionCall","src":"7625:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"7604:8:9","nodeType":"YulIdentifier","src":"7604:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"7531:117:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7569:4:9","nodeType":"YulTypedName","src":"7569:4:9","type":""},{"name":"value","nativeSrc":"7575:5:9","nodeType":"YulTypedName","src":"7575:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7585:8:9","nodeType":"YulTypedName","src":"7585:8:9","type":""}],"src":"7531:117:9"},{"body":{"nativeSrc":"7705:118:9","nodeType":"YulBlock","src":"7705:118:9","statements":[{"nativeSrc":"7715:68:9","nodeType":"YulVariableDeclaration","src":"7715:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7764:1:9","nodeType":"YulLiteral","src":"7764:1:9","type":"","value":"8"},{"name":"bytes","nativeSrc":"7767:5:9","nodeType":"YulIdentifier","src":"7767:5:9"}],"functionName":{"name":"mul","nativeSrc":"7760:3:9","nodeType":"YulIdentifier","src":"7760:3:9"},"nativeSrc":"7760:13:9","nodeType":"YulFunctionCall","src":"7760:13:9"},{"arguments":[{"kind":"number","nativeSrc":"7779:1:9","nodeType":"YulLiteral","src":"7779:1:9","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7775:3:9","nodeType":"YulIdentifier","src":"7775:3:9"},"nativeSrc":"7775:6:9","nodeType":"YulFunctionCall","src":"7775:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"7731:28:9","nodeType":"YulIdentifier","src":"7731:28:9"},"nativeSrc":"7731:51:9","nodeType":"YulFunctionCall","src":"7731:51:9"}],"functionName":{"name":"not","nativeSrc":"7727:3:9","nodeType":"YulIdentifier","src":"7727:3:9"},"nativeSrc":"7727:56:9","nodeType":"YulFunctionCall","src":"7727:56:9"},"variables":[{"name":"mask","nativeSrc":"7719:4:9","nodeType":"YulTypedName","src":"7719:4:9","type":""}]},{"nativeSrc":"7792:25:9","nodeType":"YulAssignment","src":"7792:25:9","value":{"arguments":[{"name":"data","nativeSrc":"7806:4:9","nodeType":"YulIdentifier","src":"7806:4:9"},{"name":"mask","nativeSrc":"7812:4:9","nodeType":"YulIdentifier","src":"7812:4:9"}],"functionName":{"name":"and","nativeSrc":"7802:3:9","nodeType":"YulIdentifier","src":"7802:3:9"},"nativeSrc":"7802:15:9","nodeType":"YulFunctionCall","src":"7802:15:9"},"variableNames":[{"name":"result","nativeSrc":"7792:6:9","nodeType":"YulIdentifier","src":"7792:6:9"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"7654:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7682:4:9","nodeType":"YulTypedName","src":"7682:4:9","type":""},{"name":"bytes","nativeSrc":"7688:5:9","nodeType":"YulTypedName","src":"7688:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7698:6:9","nodeType":"YulTypedName","src":"7698:6:9","type":""}],"src":"7654:169:9"},{"body":{"nativeSrc":"7909:214:9","nodeType":"YulBlock","src":"7909:214:9","statements":[{"nativeSrc":"8042:37:9","nodeType":"YulAssignment","src":"8042:37:9","value":{"arguments":[{"name":"data","nativeSrc":"8069:4:9","nodeType":"YulIdentifier","src":"8069:4:9"},{"name":"len","nativeSrc":"8075:3:9","nodeType":"YulIdentifier","src":"8075:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8050:18:9","nodeType":"YulIdentifier","src":"8050:18:9"},"nativeSrc":"8050:29:9","nodeType":"YulFunctionCall","src":"8050:29:9"},"variableNames":[{"name":"data","nativeSrc":"8042:4:9","nodeType":"YulIdentifier","src":"8042:4:9"}]},{"nativeSrc":"8088:29:9","nodeType":"YulAssignment","src":"8088:29:9","value":{"arguments":[{"name":"data","nativeSrc":"8099:4:9","nodeType":"YulIdentifier","src":"8099:4:9"},{"arguments":[{"kind":"number","nativeSrc":"8109:1:9","nodeType":"YulLiteral","src":"8109:1:9","type":"","value":"2"},{"name":"len","nativeSrc":"8112:3:9","nodeType":"YulIdentifier","src":"8112:3:9"}],"functionName":{"name":"mul","nativeSrc":"8105:3:9","nodeType":"YulIdentifier","src":"8105:3:9"},"nativeSrc":"8105:11:9","nodeType":"YulFunctionCall","src":"8105:11:9"}],"functionName":{"name":"or","nativeSrc":"8096:2:9","nodeType":"YulIdentifier","src":"8096:2:9"},"nativeSrc":"8096:21:9","nodeType":"YulFunctionCall","src":"8096:21:9"},"variableNames":[{"name":"used","nativeSrc":"8088:4:9","nodeType":"YulIdentifier","src":"8088:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7828:295:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7890:4:9","nodeType":"YulTypedName","src":"7890:4:9","type":""},{"name":"len","nativeSrc":"7896:3:9","nodeType":"YulTypedName","src":"7896:3:9","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7904:4:9","nodeType":"YulTypedName","src":"7904:4:9","type":""}],"src":"7828:295:9"},{"body":{"nativeSrc":"8220:1303:9","nodeType":"YulBlock","src":"8220:1303:9","statements":[{"nativeSrc":"8231:51:9","nodeType":"YulVariableDeclaration","src":"8231:51:9","value":{"arguments":[{"name":"src","nativeSrc":"8278:3:9","nodeType":"YulIdentifier","src":"8278:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"8245:32:9","nodeType":"YulIdentifier","src":"8245:32:9"},"nativeSrc":"8245:37:9","nodeType":"YulFunctionCall","src":"8245:37:9"},"variables":[{"name":"newLen","nativeSrc":"8235:6:9","nodeType":"YulTypedName","src":"8235:6:9","type":""}]},{"body":{"nativeSrc":"8367:22:9","nodeType":"YulBlock","src":"8367:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8369:16:9","nodeType":"YulIdentifier","src":"8369:16:9"},"nativeSrc":"8369:18:9","nodeType":"YulFunctionCall","src":"8369:18:9"},"nativeSrc":"8369:18:9","nodeType":"YulExpressionStatement","src":"8369:18:9"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"8339:6:9","nodeType":"YulIdentifier","src":"8339:6:9"},{"kind":"number","nativeSrc":"8347:18:9","nodeType":"YulLiteral","src":"8347:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8336:2:9","nodeType":"YulIdentifier","src":"8336:2:9"},"nativeSrc":"8336:30:9","nodeType":"YulFunctionCall","src":"8336:30:9"},"nativeSrc":"8333:56:9","nodeType":"YulIf","src":"8333:56:9"},{"nativeSrc":"8399:52:9","nodeType":"YulVariableDeclaration","src":"8399:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8445:4:9","nodeType":"YulIdentifier","src":"8445:4:9"}],"functionName":{"name":"sload","nativeSrc":"8439:5:9","nodeType":"YulIdentifier","src":"8439:5:9"},"nativeSrc":"8439:11:9","nodeType":"YulFunctionCall","src":"8439:11:9"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"8413:25:9","nodeType":"YulIdentifier","src":"8413:25:9"},"nativeSrc":"8413:38:9","nodeType":"YulFunctionCall","src":"8413:38:9"},"variables":[{"name":"oldLen","nativeSrc":"8403:6:9","nodeType":"YulTypedName","src":"8403:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8544:4:9","nodeType":"YulIdentifier","src":"8544:4:9"},{"name":"oldLen","nativeSrc":"8550:6:9","nodeType":"YulIdentifier","src":"8550:6:9"},{"name":"newLen","nativeSrc":"8558:6:9","nodeType":"YulIdentifier","src":"8558:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"8498:45:9","nodeType":"YulIdentifier","src":"8498:45:9"},"nativeSrc":"8498:67:9","nodeType":"YulFunctionCall","src":"8498:67:9"},"nativeSrc":"8498:67:9","nodeType":"YulExpressionStatement","src":"8498:67:9"},{"nativeSrc":"8575:18:9","nodeType":"YulVariableDeclaration","src":"8575:18:9","value":{"kind":"number","nativeSrc":"8592:1:9","nodeType":"YulLiteral","src":"8592:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8579:9:9","nodeType":"YulTypedName","src":"8579:9:9","type":""}]},{"nativeSrc":"8603:17:9","nodeType":"YulAssignment","src":"8603:17:9","value":{"kind":"number","nativeSrc":"8616:4:9","nodeType":"YulLiteral","src":"8616:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8603:9:9","nodeType":"YulIdentifier","src":"8603:9:9"}]},{"cases":[{"body":{"nativeSrc":"8667:611:9","nodeType":"YulBlock","src":"8667:611:9","statements":[{"nativeSrc":"8681:37:9","nodeType":"YulVariableDeclaration","src":"8681:37:9","value":{"arguments":[{"name":"newLen","nativeSrc":"8700:6:9","nodeType":"YulIdentifier","src":"8700:6:9"},{"arguments":[{"kind":"number","nativeSrc":"8712:4:9","nodeType":"YulLiteral","src":"8712:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"8708:3:9","nodeType":"YulIdentifier","src":"8708:3:9"},"nativeSrc":"8708:9:9","nodeType":"YulFunctionCall","src":"8708:9:9"}],"functionName":{"name":"and","nativeSrc":"8696:3:9","nodeType":"YulIdentifier","src":"8696:3:9"},"nativeSrc":"8696:22:9","nodeType":"YulFunctionCall","src":"8696:22:9"},"variables":[{"name":"loopEnd","nativeSrc":"8685:7:9","nodeType":"YulTypedName","src":"8685:7:9","type":""}]},{"nativeSrc":"8732:51:9","nodeType":"YulVariableDeclaration","src":"8732:51:9","value":{"arguments":[{"name":"slot","nativeSrc":"8778:4:9","nodeType":"YulIdentifier","src":"8778:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"8746:31:9","nodeType":"YulIdentifier","src":"8746:31:9"},"nativeSrc":"8746:37:9","nodeType":"YulFunctionCall","src":"8746:37:9"},"variables":[{"name":"dstPtr","nativeSrc":"8736:6:9","nodeType":"YulTypedName","src":"8736:6:9","type":""}]},{"nativeSrc":"8796:10:9","nodeType":"YulVariableDeclaration","src":"8796:10:9","value":{"kind":"number","nativeSrc":"8805:1:9","nodeType":"YulLiteral","src":"8805:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8800:1:9","nodeType":"YulTypedName","src":"8800:1:9","type":""}]},{"body":{"nativeSrc":"8864:163:9","nodeType":"YulBlock","src":"8864:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8889:6:9","nodeType":"YulIdentifier","src":"8889:6:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8907:3:9","nodeType":"YulIdentifier","src":"8907:3:9"},{"name":"srcOffset","nativeSrc":"8912:9:9","nodeType":"YulIdentifier","src":"8912:9:9"}],"functionName":{"name":"add","nativeSrc":"8903:3:9","nodeType":"YulIdentifier","src":"8903:3:9"},"nativeSrc":"8903:19:9","nodeType":"YulFunctionCall","src":"8903:19:9"}],"functionName":{"name":"mload","nativeSrc":"8897:5:9","nodeType":"YulIdentifier","src":"8897:5:9"},"nativeSrc":"8897:26:9","nodeType":"YulFunctionCall","src":"8897:26:9"}],"functionName":{"name":"sstore","nativeSrc":"8882:6:9","nodeType":"YulIdentifier","src":"8882:6:9"},"nativeSrc":"8882:42:9","nodeType":"YulFunctionCall","src":"8882:42:9"},"nativeSrc":"8882:42:9","nodeType":"YulExpressionStatement","src":"8882:42:9"},{"nativeSrc":"8941:24:9","nodeType":"YulAssignment","src":"8941:24:9","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8955:6:9","nodeType":"YulIdentifier","src":"8955:6:9"},{"kind":"number","nativeSrc":"8963:1:9","nodeType":"YulLiteral","src":"8963:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8951:3:9","nodeType":"YulIdentifier","src":"8951:3:9"},"nativeSrc":"8951:14:9","nodeType":"YulFunctionCall","src":"8951:14:9"},"variableNames":[{"name":"dstPtr","nativeSrc":"8941:6:9","nodeType":"YulIdentifier","src":"8941:6:9"}]},{"nativeSrc":"8982:31:9","nodeType":"YulAssignment","src":"8982:31:9","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8999:9:9","nodeType":"YulIdentifier","src":"8999:9:9"},{"kind":"number","nativeSrc":"9010:2:9","nodeType":"YulLiteral","src":"9010:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8995:3:9","nodeType":"YulIdentifier","src":"8995:3:9"},"nativeSrc":"8995:18:9","nodeType":"YulFunctionCall","src":"8995:18:9"},"variableNames":[{"name":"srcOffset","nativeSrc":"8982:9:9","nodeType":"YulIdentifier","src":"8982:9:9"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8830:1:9","nodeType":"YulIdentifier","src":"8830:1:9"},{"name":"loopEnd","nativeSrc":"8833:7:9","nodeType":"YulIdentifier","src":"8833:7:9"}],"functionName":{"name":"lt","nativeSrc":"8827:2:9","nodeType":"YulIdentifier","src":"8827:2:9"},"nativeSrc":"8827:14:9","nodeType":"YulFunctionCall","src":"8827:14:9"},"nativeSrc":"8819:208:9","nodeType":"YulForLoop","post":{"nativeSrc":"8842:21:9","nodeType":"YulBlock","src":"8842:21:9","statements":[{"nativeSrc":"8844:17:9","nodeType":"YulAssignment","src":"8844:17:9","value":{"arguments":[{"name":"i","nativeSrc":"8853:1:9","nodeType":"YulIdentifier","src":"8853:1:9"},{"kind":"number","nativeSrc":"8856:4:9","nodeType":"YulLiteral","src":"8856:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8849:3:9","nodeType":"YulIdentifier","src":"8849:3:9"},"nativeSrc":"8849:12:9","nodeType":"YulFunctionCall","src":"8849:12:9"},"variableNames":[{"name":"i","nativeSrc":"8844:1:9","nodeType":"YulIdentifier","src":"8844:1:9"}]}]},"pre":{"nativeSrc":"8823:3:9","nodeType":"YulBlock","src":"8823:3:9","statements":[]},"src":"8819:208:9"},{"body":{"nativeSrc":"9063:156:9","nodeType":"YulBlock","src":"9063:156:9","statements":[{"nativeSrc":"9081:43:9","nodeType":"YulVariableDeclaration","src":"9081:43:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9108:3:9","nodeType":"YulIdentifier","src":"9108:3:9"},{"name":"srcOffset","nativeSrc":"9113:9:9","nodeType":"YulIdentifier","src":"9113:9:9"}],"functionName":{"name":"add","nativeSrc":"9104:3:9","nodeType":"YulIdentifier","src":"9104:3:9"},"nativeSrc":"9104:19:9","nodeType":"YulFunctionCall","src":"9104:19:9"}],"functionName":{"name":"mload","nativeSrc":"9098:5:9","nodeType":"YulIdentifier","src":"9098:5:9"},"nativeSrc":"9098:26:9","nodeType":"YulFunctionCall","src":"9098:26:9"},"variables":[{"name":"lastValue","nativeSrc":"9085:9:9","nodeType":"YulTypedName","src":"9085:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9148:6:9","nodeType":"YulIdentifier","src":"9148:6:9"},{"arguments":[{"name":"lastValue","nativeSrc":"9175:9:9","nodeType":"YulIdentifier","src":"9175:9:9"},{"arguments":[{"name":"newLen","nativeSrc":"9190:6:9","nodeType":"YulIdentifier","src":"9190:6:9"},{"kind":"number","nativeSrc":"9198:4:9","nodeType":"YulLiteral","src":"9198:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"9186:3:9","nodeType":"YulIdentifier","src":"9186:3:9"},"nativeSrc":"9186:17:9","nodeType":"YulFunctionCall","src":"9186:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"9156:18:9","nodeType":"YulIdentifier","src":"9156:18:9"},"nativeSrc":"9156:48:9","nodeType":"YulFunctionCall","src":"9156:48:9"}],"functionName":{"name":"sstore","nativeSrc":"9141:6:9","nodeType":"YulIdentifier","src":"9141:6:9"},"nativeSrc":"9141:64:9","nodeType":"YulFunctionCall","src":"9141:64:9"},"nativeSrc":"9141:64:9","nodeType":"YulExpressionStatement","src":"9141:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"9046:7:9","nodeType":"YulIdentifier","src":"9046:7:9"},{"name":"newLen","nativeSrc":"9055:6:9","nodeType":"YulIdentifier","src":"9055:6:9"}],"functionName":{"name":"lt","nativeSrc":"9043:2:9","nodeType":"YulIdentifier","src":"9043:2:9"},"nativeSrc":"9043:19:9","nodeType":"YulFunctionCall","src":"9043:19:9"},"nativeSrc":"9040:179:9","nodeType":"YulIf","src":"9040:179:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9239:4:9","nodeType":"YulIdentifier","src":"9239:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"9253:6:9","nodeType":"YulIdentifier","src":"9253:6:9"},{"kind":"number","nativeSrc":"9261:1:9","nodeType":"YulLiteral","src":"9261:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"9249:3:9","nodeType":"YulIdentifier","src":"9249:3:9"},"nativeSrc":"9249:14:9","nodeType":"YulFunctionCall","src":"9249:14:9"},{"kind":"number","nativeSrc":"9265:1:9","nodeType":"YulLiteral","src":"9265:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9245:3:9","nodeType":"YulIdentifier","src":"9245:3:9"},"nativeSrc":"9245:22:9","nodeType":"YulFunctionCall","src":"9245:22:9"}],"functionName":{"name":"sstore","nativeSrc":"9232:6:9","nodeType":"YulIdentifier","src":"9232:6:9"},"nativeSrc":"9232:36:9","nodeType":"YulFunctionCall","src":"9232:36:9"},"nativeSrc":"9232:36:9","nodeType":"YulExpressionStatement","src":"9232:36:9"}]},"nativeSrc":"8660:618:9","nodeType":"YulCase","src":"8660:618:9","value":{"kind":"number","nativeSrc":"8665:1:9","nodeType":"YulLiteral","src":"8665:1:9","type":"","value":"1"}},{"body":{"nativeSrc":"9295:222:9","nodeType":"YulBlock","src":"9295:222:9","statements":[{"nativeSrc":"9309:14:9","nodeType":"YulVariableDeclaration","src":"9309:14:9","value":{"kind":"number","nativeSrc":"9322:1:9","nodeType":"YulLiteral","src":"9322:1:9","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9313:5:9","nodeType":"YulTypedName","src":"9313:5:9","type":""}]},{"body":{"nativeSrc":"9346:67:9","nodeType":"YulBlock","src":"9346:67:9","statements":[{"nativeSrc":"9364:35:9","nodeType":"YulAssignment","src":"9364:35:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9383:3:9","nodeType":"YulIdentifier","src":"9383:3:9"},{"name":"srcOffset","nativeSrc":"9388:9:9","nodeType":"YulIdentifier","src":"9388:9:9"}],"functionName":{"name":"add","nativeSrc":"9379:3:9","nodeType":"YulIdentifier","src":"9379:3:9"},"nativeSrc":"9379:19:9","nodeType":"YulFunctionCall","src":"9379:19:9"}],"functionName":{"name":"mload","nativeSrc":"9373:5:9","nodeType":"YulIdentifier","src":"9373:5:9"},"nativeSrc":"9373:26:9","nodeType":"YulFunctionCall","src":"9373:26:9"},"variableNames":[{"name":"value","nativeSrc":"9364:5:9","nodeType":"YulIdentifier","src":"9364:5:9"}]}]},"condition":{"name":"newLen","nativeSrc":"9339:6:9","nodeType":"YulIdentifier","src":"9339:6:9"},"nativeSrc":"9336:77:9","nodeType":"YulIf","src":"9336:77:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9433:4:9","nodeType":"YulIdentifier","src":"9433:4:9"},{"arguments":[{"name":"value","nativeSrc":"9492:5:9","nodeType":"YulIdentifier","src":"9492:5:9"},{"name":"newLen","nativeSrc":"9499:6:9","nodeType":"YulIdentifier","src":"9499:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9439:52:9","nodeType":"YulIdentifier","src":"9439:52:9"},"nativeSrc":"9439:67:9","nodeType":"YulFunctionCall","src":"9439:67:9"}],"functionName":{"name":"sstore","nativeSrc":"9426:6:9","nodeType":"YulIdentifier","src":"9426:6:9"},"nativeSrc":"9426:81:9","nodeType":"YulFunctionCall","src":"9426:81:9"},"nativeSrc":"9426:81:9","nodeType":"YulExpressionStatement","src":"9426:81:9"}]},"nativeSrc":"9287:230:9","nodeType":"YulCase","src":"9287:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8640:6:9","nodeType":"YulIdentifier","src":"8640:6:9"},{"kind":"number","nativeSrc":"8648:2:9","nodeType":"YulLiteral","src":"8648:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8637:2:9","nodeType":"YulIdentifier","src":"8637:2:9"},"nativeSrc":"8637:14:9","nodeType":"YulFunctionCall","src":"8637:14:9"},"nativeSrc":"8630:887:9","nodeType":"YulSwitch","src":"8630:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"8128:1395:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8209:4:9","nodeType":"YulTypedName","src":"8209:4:9","type":""},{"name":"src","nativeSrc":"8215:3:9","nodeType":"YulTypedName","src":"8215:3:9","type":""}],"src":"8128:1395:9"},{"body":{"nativeSrc":"9625:73:9","nodeType":"YulBlock","src":"9625:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9642:3:9","nodeType":"YulIdentifier","src":"9642:3:9"},{"name":"length","nativeSrc":"9647:6:9","nodeType":"YulIdentifier","src":"9647:6:9"}],"functionName":{"name":"mstore","nativeSrc":"9635:6:9","nodeType":"YulIdentifier","src":"9635:6:9"},"nativeSrc":"9635:19:9","nodeType":"YulFunctionCall","src":"9635:19:9"},"nativeSrc":"9635:19:9","nodeType":"YulExpressionStatement","src":"9635:19:9"},{"nativeSrc":"9663:29:9","nodeType":"YulAssignment","src":"9663:29:9","value":{"arguments":[{"name":"pos","nativeSrc":"9682:3:9","nodeType":"YulIdentifier","src":"9682:3:9"},{"kind":"number","nativeSrc":"9687:4:9","nodeType":"YulLiteral","src":"9687:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9678:3:9","nodeType":"YulIdentifier","src":"9678:3:9"},"nativeSrc":"9678:14:9","nodeType":"YulFunctionCall","src":"9678:14:9"},"variableNames":[{"name":"updated_pos","nativeSrc":"9663:11:9","nodeType":"YulIdentifier","src":"9663:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9529:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9597:3:9","nodeType":"YulTypedName","src":"9597:3:9","type":""},{"name":"length","nativeSrc":"9602:6:9","nodeType":"YulTypedName","src":"9602:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9613:11:9","nodeType":"YulTypedName","src":"9613:11:9","type":""}],"src":"9529:169:9"},{"body":{"nativeSrc":"9817:742:9","nodeType":"YulBlock","src":"9817:742:9","statements":[{"nativeSrc":"9827:29:9","nodeType":"YulVariableDeclaration","src":"9827:29:9","value":{"arguments":[{"name":"value","nativeSrc":"9850:5:9","nodeType":"YulIdentifier","src":"9850:5:9"}],"functionName":{"name":"sload","nativeSrc":"9844:5:9","nodeType":"YulIdentifier","src":"9844:5:9"},"nativeSrc":"9844:12:9","nodeType":"YulFunctionCall","src":"9844:12:9"},"variables":[{"name":"slotValue","nativeSrc":"9831:9:9","nodeType":"YulTypedName","src":"9831:9:9","type":""}]},{"nativeSrc":"9865:50:9","nodeType":"YulVariableDeclaration","src":"9865:50:9","value":{"arguments":[{"name":"slotValue","nativeSrc":"9905:9:9","nodeType":"YulIdentifier","src":"9905:9:9"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"9879:25:9","nodeType":"YulIdentifier","src":"9879:25:9"},"nativeSrc":"9879:36:9","nodeType":"YulFunctionCall","src":"9879:36:9"},"variables":[{"name":"length","nativeSrc":"9869:6:9","nodeType":"YulTypedName","src":"9869:6:9","type":""}]},{"nativeSrc":"9924:78:9","nodeType":"YulAssignment","src":"9924:78:9","value":{"arguments":[{"name":"pos","nativeSrc":"9990:3:9","nodeType":"YulIdentifier","src":"9990:3:9"},{"name":"length","nativeSrc":"9995:6:9","nodeType":"YulIdentifier","src":"9995:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9931:58:9","nodeType":"YulIdentifier","src":"9931:58:9"},"nativeSrc":"9931:71:9","nodeType":"YulFunctionCall","src":"9931:71:9"},"variableNames":[{"name":"pos","nativeSrc":"9924:3:9","nodeType":"YulIdentifier","src":"9924:3:9"}]},{"cases":[{"body":{"nativeSrc":"10051:157:9","nodeType":"YulBlock","src":"10051:157:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10104:3:9","nodeType":"YulIdentifier","src":"10104:3:9"},{"arguments":[{"name":"slotValue","nativeSrc":"10113:9:9","nodeType":"YulIdentifier","src":"10113:9:9"},{"arguments":[{"kind":"number","nativeSrc":"10128:4:9","nodeType":"YulLiteral","src":"10128:4:9","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"10124:3:9","nodeType":"YulIdentifier","src":"10124:3:9"},"nativeSrc":"10124:9:9","nodeType":"YulFunctionCall","src":"10124:9:9"}],"functionName":{"name":"and","nativeSrc":"10109:3:9","nodeType":"YulIdentifier","src":"10109:3:9"},"nativeSrc":"10109:25:9","nodeType":"YulFunctionCall","src":"10109:25:9"}],"functionName":{"name":"mstore","nativeSrc":"10097:6:9","nodeType":"YulIdentifier","src":"10097:6:9"},"nativeSrc":"10097:38:9","nodeType":"YulFunctionCall","src":"10097:38:9"},"nativeSrc":"10097:38:9","nodeType":"YulExpressionStatement","src":"10097:38:9"},{"nativeSrc":"10148:50:9","nodeType":"YulAssignment","src":"10148:50:9","value":{"arguments":[{"name":"pos","nativeSrc":"10159:3:9","nodeType":"YulIdentifier","src":"10159:3:9"},{"arguments":[{"kind":"number","nativeSrc":"10168:4:9","nodeType":"YulLiteral","src":"10168:4:9","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"10188:6:9","nodeType":"YulIdentifier","src":"10188:6:9"}],"functionName":{"name":"iszero","nativeSrc":"10181:6:9","nodeType":"YulIdentifier","src":"10181:6:9"},"nativeSrc":"10181:14:9","nodeType":"YulFunctionCall","src":"10181:14:9"}],"functionName":{"name":"iszero","nativeSrc":"10174:6:9","nodeType":"YulIdentifier","src":"10174:6:9"},"nativeSrc":"10174:22:9","nodeType":"YulFunctionCall","src":"10174:22:9"}],"functionName":{"name":"mul","nativeSrc":"10164:3:9","nodeType":"YulIdentifier","src":"10164:3:9"},"nativeSrc":"10164:33:9","nodeType":"YulFunctionCall","src":"10164:33:9"}],"functionName":{"name":"add","nativeSrc":"10155:3:9","nodeType":"YulIdentifier","src":"10155:3:9"},"nativeSrc":"10155:43:9","nodeType":"YulFunctionCall","src":"10155:43:9"},"variableNames":[{"name":"ret","nativeSrc":"10148:3:9","nodeType":"YulIdentifier","src":"10148:3:9"}]}]},"nativeSrc":"10044:164:9","nodeType":"YulCase","src":"10044:164:9","value":{"kind":"number","nativeSrc":"10049:1:9","nodeType":"YulLiteral","src":"10049:1:9","type":"","value":"0"}},{"body":{"nativeSrc":"10224:329:9","nodeType":"YulBlock","src":"10224:329:9","statements":[{"nativeSrc":"10269:53:9","nodeType":"YulVariableDeclaration","src":"10269:53:9","value":{"arguments":[{"name":"value","nativeSrc":"10316:5:9","nodeType":"YulIdentifier","src":"10316:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"10284:31:9","nodeType":"YulIdentifier","src":"10284:31:9"},"nativeSrc":"10284:38:9","nodeType":"YulFunctionCall","src":"10284:38:9"},"variables":[{"name":"dataPos","nativeSrc":"10273:7:9","nodeType":"YulTypedName","src":"10273:7:9","type":""}]},{"nativeSrc":"10335:10:9","nodeType":"YulVariableDeclaration","src":"10335:10:9","value":{"kind":"number","nativeSrc":"10344:1:9","nodeType":"YulLiteral","src":"10344:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10339:1:9","nodeType":"YulTypedName","src":"10339:1:9","type":""}]},{"body":{"nativeSrc":"10402:110:9","nodeType":"YulBlock","src":"10402:110:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"10431:3:9","nodeType":"YulIdentifier","src":"10431:3:9"},{"name":"i","nativeSrc":"10436:1:9","nodeType":"YulIdentifier","src":"10436:1:9"}],"functionName":{"name":"add","nativeSrc":"10427:3:9","nodeType":"YulIdentifier","src":"10427:3:9"},"nativeSrc":"10427:11:9","nodeType":"YulFunctionCall","src":"10427:11:9"},{"arguments":[{"name":"dataPos","nativeSrc":"10446:7:9","nodeType":"YulIdentifier","src":"10446:7:9"}],"functionName":{"name":"sload","nativeSrc":"10440:5:9","nodeType":"YulIdentifier","src":"10440:5:9"},"nativeSrc":"10440:14:9","nodeType":"YulFunctionCall","src":"10440:14:9"}],"functionName":{"name":"mstore","nativeSrc":"10420:6:9","nodeType":"YulIdentifier","src":"10420:6:9"},"nativeSrc":"10420:35:9","nodeType":"YulFunctionCall","src":"10420:35:9"},"nativeSrc":"10420:35:9","nodeType":"YulExpressionStatement","src":"10420:35:9"},{"nativeSrc":"10472:26:9","nodeType":"YulAssignment","src":"10472:26:9","value":{"arguments":[{"name":"dataPos","nativeSrc":"10487:7:9","nodeType":"YulIdentifier","src":"10487:7:9"},{"kind":"number","nativeSrc":"10496:1:9","nodeType":"YulLiteral","src":"10496:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10483:3:9","nodeType":"YulIdentifier","src":"10483:3:9"},"nativeSrc":"10483:15:9","nodeType":"YulFunctionCall","src":"10483:15:9"},"variableNames":[{"name":"dataPos","nativeSrc":"10472:7:9","nodeType":"YulIdentifier","src":"10472:7:9"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10369:1:9","nodeType":"YulIdentifier","src":"10369:1:9"},{"name":"length","nativeSrc":"10372:6:9","nodeType":"YulIdentifier","src":"10372:6:9"}],"functionName":{"name":"lt","nativeSrc":"10366:2:9","nodeType":"YulIdentifier","src":"10366:2:9"},"nativeSrc":"10366:13:9","nodeType":"YulFunctionCall","src":"10366:13:9"},"nativeSrc":"10358:154:9","nodeType":"YulForLoop","post":{"nativeSrc":"10380:21:9","nodeType":"YulBlock","src":"10380:21:9","statements":[{"nativeSrc":"10382:17:9","nodeType":"YulAssignment","src":"10382:17:9","value":{"arguments":[{"name":"i","nativeSrc":"10391:1:9","nodeType":"YulIdentifier","src":"10391:1:9"},{"kind":"number","nativeSrc":"10394:4:9","nodeType":"YulLiteral","src":"10394:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10387:3:9","nodeType":"YulIdentifier","src":"10387:3:9"},"nativeSrc":"10387:12:9","nodeType":"YulFunctionCall","src":"10387:12:9"},"variableNames":[{"name":"i","nativeSrc":"10382:1:9","nodeType":"YulIdentifier","src":"10382:1:9"}]}]},"pre":{"nativeSrc":"10362:3:9","nodeType":"YulBlock","src":"10362:3:9","statements":[]},"src":"10358:154:9"},{"nativeSrc":"10525:18:9","nodeType":"YulAssignment","src":"10525:18:9","value":{"arguments":[{"name":"pos","nativeSrc":"10536:3:9","nodeType":"YulIdentifier","src":"10536:3:9"},{"name":"i","nativeSrc":"10541:1:9","nodeType":"YulIdentifier","src":"10541:1:9"}],"functionName":{"name":"add","nativeSrc":"10532:3:9","nodeType":"YulIdentifier","src":"10532:3:9"},"nativeSrc":"10532:11:9","nodeType":"YulFunctionCall","src":"10532:11:9"},"variableNames":[{"name":"ret","nativeSrc":"10525:3:9","nodeType":"YulIdentifier","src":"10525:3:9"}]}]},"nativeSrc":"10217:336:9","nodeType":"YulCase","src":"10217:336:9","value":{"kind":"number","nativeSrc":"10222:1:9","nodeType":"YulLiteral","src":"10222:1:9","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"10022:9:9","nodeType":"YulIdentifier","src":"10022:9:9"},{"kind":"number","nativeSrc":"10033:1:9","nodeType":"YulLiteral","src":"10033:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"10018:3:9","nodeType":"YulIdentifier","src":"10018:3:9"},"nativeSrc":"10018:17:9","nodeType":"YulFunctionCall","src":"10018:17:9"},"nativeSrc":"10011:542:9","nodeType":"YulSwitch","src":"10011:542:9"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"9728:831:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9798:5:9","nodeType":"YulTypedName","src":"9798:5:9","type":""},{"name":"pos","nativeSrc":"9805:3:9","nodeType":"YulTypedName","src":"9805:3:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"9813:3:9","nodeType":"YulTypedName","src":"9813:3:9","type":""}],"src":"9728:831:9"},{"body":{"nativeSrc":"10630:53:9","nodeType":"YulBlock","src":"10630:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10647:3:9","nodeType":"YulIdentifier","src":"10647:3:9"},{"arguments":[{"name":"value","nativeSrc":"10670:5:9","nodeType":"YulIdentifier","src":"10670:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10652:17:9","nodeType":"YulIdentifier","src":"10652:17:9"},"nativeSrc":"10652:24:9","nodeType":"YulFunctionCall","src":"10652:24:9"}],"functionName":{"name":"mstore","nativeSrc":"10640:6:9","nodeType":"YulIdentifier","src":"10640:6:9"},"nativeSrc":"10640:37:9","nodeType":"YulFunctionCall","src":"10640:37:9"},"nativeSrc":"10640:37:9","nodeType":"YulExpressionStatement","src":"10640:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10565:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10618:5:9","nodeType":"YulTypedName","src":"10618:5:9","type":""},{"name":"pos","nativeSrc":"10625:3:9","nodeType":"YulTypedName","src":"10625:3:9","type":""}],"src":"10565:118:9"},{"body":{"nativeSrc":"10877:424:9","nodeType":"YulBlock","src":"10877:424:9","statements":[{"nativeSrc":"10887:26:9","nodeType":"YulAssignment","src":"10887:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"10899:9:9","nodeType":"YulIdentifier","src":"10899:9:9"},{"kind":"number","nativeSrc":"10910:2:9","nodeType":"YulLiteral","src":"10910:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10895:3:9","nodeType":"YulIdentifier","src":"10895:3:9"},"nativeSrc":"10895:18:9","nodeType":"YulFunctionCall","src":"10895:18:9"},"variableNames":[{"name":"tail","nativeSrc":"10887:4:9","nodeType":"YulIdentifier","src":"10887:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10934:9:9","nodeType":"YulIdentifier","src":"10934:9:9"},{"kind":"number","nativeSrc":"10945:1:9","nodeType":"YulLiteral","src":"10945:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10930:3:9","nodeType":"YulIdentifier","src":"10930:3:9"},"nativeSrc":"10930:17:9","nodeType":"YulFunctionCall","src":"10930:17:9"},{"arguments":[{"name":"tail","nativeSrc":"10953:4:9","nodeType":"YulIdentifier","src":"10953:4:9"},{"name":"headStart","nativeSrc":"10959:9:9","nodeType":"YulIdentifier","src":"10959:9:9"}],"functionName":{"name":"sub","nativeSrc":"10949:3:9","nodeType":"YulIdentifier","src":"10949:3:9"},"nativeSrc":"10949:20:9","nodeType":"YulFunctionCall","src":"10949:20:9"}],"functionName":{"name":"mstore","nativeSrc":"10923:6:9","nodeType":"YulIdentifier","src":"10923:6:9"},"nativeSrc":"10923:47:9","nodeType":"YulFunctionCall","src":"10923:47:9"},"nativeSrc":"10923:47:9","nodeType":"YulExpressionStatement","src":"10923:47:9"},{"nativeSrc":"10979:83:9","nodeType":"YulAssignment","src":"10979:83:9","value":{"arguments":[{"name":"value0","nativeSrc":"11048:6:9","nodeType":"YulIdentifier","src":"11048:6:9"},{"name":"tail","nativeSrc":"11057:4:9","nodeType":"YulIdentifier","src":"11057:4:9"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"10987:60:9","nodeType":"YulIdentifier","src":"10987:60:9"},"nativeSrc":"10987:75:9","nodeType":"YulFunctionCall","src":"10987:75:9"},"variableNames":[{"name":"tail","nativeSrc":"10979:4:9","nodeType":"YulIdentifier","src":"10979:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11083:9:9","nodeType":"YulIdentifier","src":"11083:9:9"},{"kind":"number","nativeSrc":"11094:2:9","nodeType":"YulLiteral","src":"11094:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11079:3:9","nodeType":"YulIdentifier","src":"11079:3:9"},"nativeSrc":"11079:18:9","nodeType":"YulFunctionCall","src":"11079:18:9"},{"arguments":[{"name":"tail","nativeSrc":"11103:4:9","nodeType":"YulIdentifier","src":"11103:4:9"},{"name":"headStart","nativeSrc":"11109:9:9","nodeType":"YulIdentifier","src":"11109:9:9"}],"functionName":{"name":"sub","nativeSrc":"11099:3:9","nodeType":"YulIdentifier","src":"11099:3:9"},"nativeSrc":"11099:20:9","nodeType":"YulFunctionCall","src":"11099:20:9"}],"functionName":{"name":"mstore","nativeSrc":"11072:6:9","nodeType":"YulIdentifier","src":"11072:6:9"},"nativeSrc":"11072:48:9","nodeType":"YulFunctionCall","src":"11072:48:9"},"nativeSrc":"11072:48:9","nodeType":"YulExpressionStatement","src":"11072:48:9"},{"nativeSrc":"11129:83:9","nodeType":"YulAssignment","src":"11129:83:9","value":{"arguments":[{"name":"value1","nativeSrc":"11198:6:9","nodeType":"YulIdentifier","src":"11198:6:9"},{"name":"tail","nativeSrc":"11207:4:9","nodeType":"YulIdentifier","src":"11207:4:9"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"11137:60:9","nodeType":"YulIdentifier","src":"11137:60:9"},"nativeSrc":"11137:75:9","nodeType":"YulFunctionCall","src":"11137:75:9"},"variableNames":[{"name":"tail","nativeSrc":"11129:4:9","nodeType":"YulIdentifier","src":"11129:4:9"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11266:6:9","nodeType":"YulIdentifier","src":"11266:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"11279:9:9","nodeType":"YulIdentifier","src":"11279:9:9"},{"kind":"number","nativeSrc":"11290:2:9","nodeType":"YulLiteral","src":"11290:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11275:3:9","nodeType":"YulIdentifier","src":"11275:3:9"},"nativeSrc":"11275:18:9","nodeType":"YulFunctionCall","src":"11275:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11222:43:9","nodeType":"YulIdentifier","src":"11222:43:9"},"nativeSrc":"11222:72:9","nodeType":"YulFunctionCall","src":"11222:72:9"},"nativeSrc":"11222:72:9","nodeType":"YulExpressionStatement","src":"11222:72:9"}]},"name":"abi_encode_tuple_t_string_storage_t_string_storage_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"10689:612:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10833:9:9","nodeType":"YulTypedName","src":"10833:9:9","type":""},{"name":"value2","nativeSrc":"10845:6:9","nodeType":"YulTypedName","src":"10845:6:9","type":""},{"name":"value1","nativeSrc":"10853:6:9","nodeType":"YulTypedName","src":"10853:6:9","type":""},{"name":"value0","nativeSrc":"10861:6:9","nodeType":"YulTypedName","src":"10861:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10872:4:9","nodeType":"YulTypedName","src":"10872:4:9","type":""}],"src":"10689:612:9"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_storage_t_string_storage_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051612e9c380380612e9c833981810160405281019061003291906102d2565b82600190816100419190610588565b5081600290816100519190610588565b50806003819055506001600260035460405161006c906100e4565b610078939291906106fe565b604051809103906000f080158015610094573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360048190555050505050610743565b6119c6806114d683390190565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61011881610105565b811461012357600080fd5b50565b6000815190506101358161010f565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61018e82610145565b810181811067ffffffffffffffff821117156101ad576101ac610156565b5b80604052505050565b60006101c06100f1565b90506101cc8282610185565b919050565b600067ffffffffffffffff8211156101ec576101eb610156565b5b6101f582610145565b9050602081019050919050565b60005b83811015610220578082015181840152602081019050610205565b60008484015250505050565b600061023f61023a846101d1565b6101b6565b90508281526020810184848401111561025b5761025a610140565b5b610266848285610202565b509392505050565b600082601f8301126102835761028261013b565b5b815161029384826020860161022c565b91505092915050565b6000819050919050565b6102af8161029c565b81146102ba57600080fd5b50565b6000815190506102cc816102a6565b92915050565b600080600080608085870312156102ec576102eb6100fb565b5b60006102fa87828801610126565b945050602085015167ffffffffffffffff81111561031b5761031a610100565b5b6103278782880161026e565b935050604085015167ffffffffffffffff81111561034857610347610100565b5b6103548782880161026e565b9250506060610365878288016102bd565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103c357607f821691505b6020821081036103d6576103d561037c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261043e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610401565b6104488683610401565b95508019841693508086168417925050509392505050565b6000819050919050565b600061048561048061047b8461029c565b610460565b61029c565b9050919050565b6000819050919050565b61049f8361046a565b6104b36104ab8261048c565b84845461040e565b825550505050565b600090565b6104c86104bb565b6104d3818484610496565b505050565b5b818110156104f7576104ec6000826104c0565b6001810190506104d9565b5050565b601f82111561053c5761050d816103dc565b610516846103f1565b81016020851015610525578190505b610539610531856103f1565b8301826104d8565b50505b505050565b600082821c905092915050565b600061055f60001984600802610541565b1980831691505092915050565b6000610578838361054e565b9150826002028217905092915050565b61059182610371565b67ffffffffffffffff8111156105aa576105a9610156565b5b6105b482546103ab565b6105bf8282856104fb565b600060209050601f8311600181146105f257600084156105e0578287015190505b6105ea858261056c565b865550610652565b601f198416610600866103dc565b60005b8281101561062857848901518255600182019150602085019450602081019050610603565b868310156106455784890151610641601f89168261054e565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b60008154610678816103ab565b610682818661065a565b9450600182166000811461069d57600181146106b3576106e6565b60ff1983168652811515602002860193506106e6565b6106bc856103dc565b60005b838110156106de578154818901526001820191506020810190506106bf565b808801955050505b50505092915050565b6106f88161029c565b82525050565b60006060820190508181036000830152610718818661066b565b9050818103602083015261072c818561066b565b905061073b60408301846106ef565b949350505050565b610d84806107526000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806389ded4841161005b57806389ded4841461010357806395d89b4114610121578063c884ef831461013f578063fc0c546a1461016f57610088565b806306fdde031461008d5780632eb4a7ab146100ab5780632f52ebb7146100c9578063378dc3dc146100e5575b600080fd5b61009561018d565b6040516100a291906107a4565b60405180910390f35b6100b361021b565b6040516100c091906107df565b60405180910390f35b6100e360048036038101906100de919061089f565b610221565b005b6100ed6104f1565b6040516100fa919061090e565b60405180910390f35b61010b6104f7565b604051610118919061090e565b60405180910390f35b610129610599565b60405161013691906107a4565b60405180910390f35b61015960048036038101906101549190610987565b610627565b60405161016691906109cf565b60405180910390f35b610177610647565b6040516101849190610a49565b60405180910390f35b6001805461019a90610a93565b80601f01602080910402602001604051908101604052809291908181526020018280546101c690610a93565b80156102135780601f106101e857610100808354040283529160200191610213565b820191906000526020600020905b8154815290600101906020018083116101f657829003601f168201915b505050505081565b60045481565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a590610b10565b60405180910390fd5b600033846040516020016102c3929190610b99565b604051602081830303815290604052805190602001209050610329838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506004548361066b565b610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f90610c11565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016103c3929190610c40565b6020604051808303816000875af11580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104069190610c95565b610445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043c90610c11565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a856040516104e3919061090e565b60405180910390a250505050565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105539190610cc2565b602060405180830381865afa158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610cf2565b905090565b600280546105a690610a93565b80601f01602080910402602001604051908101604052809291908181526020018280546105d290610a93565b801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b505050505081565b60056020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000826106788584610682565b1490509392505050565b60008082905060005b84518110156106c7576106b8828683815181106106ab576106aa610d1f565b5b60200260200101516106d2565b9150808060010191505061068b565b508091505092915050565b60008183106106ea576106e582846106fd565b6106f5565b6106f483836106fd565b5b905092915050565b600082600052816020526040600020905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561074e578082015181840152602081019050610733565b60008484015250505050565b6000601f19601f8301169050919050565b600061077682610714565b610780818561071f565b9350610790818560208601610730565b6107998161075a565b840191505092915050565b600060208201905081810360008301526107be818461076b565b905092915050565b6000819050919050565b6107d9816107c6565b82525050565b60006020820190506107f460008301846107d0565b92915050565b600080fd5b600080fd5b6000819050919050565b61081781610804565b811461082257600080fd5b50565b6000813590506108348161080e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261085f5761085e61083a565b5b8235905067ffffffffffffffff81111561087c5761087b61083f565b5b60208301915083602082028301111561089857610897610844565b5b9250929050565b6000806000604084860312156108b8576108b76107fa565b5b60006108c686828701610825565b935050602084013567ffffffffffffffff8111156108e7576108e66107ff565b5b6108f386828701610849565b92509250509250925092565b61090881610804565b82525050565b600060208201905061092360008301846108ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095482610929565b9050919050565b61096481610949565b811461096f57600080fd5b50565b6000813590506109818161095b565b92915050565b60006020828403121561099d5761099c6107fa565b5b60006109ab84828501610972565b91505092915050565b60008115159050919050565b6109c9816109b4565b82525050565b60006020820190506109e460008301846109c0565b92915050565b6000819050919050565b6000610a0f610a0a610a0584610929565b6109ea565b610929565b9050919050565b6000610a21826109f4565b9050919050565b6000610a3382610a16565b9050919050565b610a4381610a28565b82525050565b6000602082019050610a5e6000830184610a3a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610aab57607f821691505b602082108103610abe57610abd610a64565b5b50919050565b7f414c52454144595f434c41494d45440000000000000000000000000000000000600082015250565b6000610afa600f8361071f565b9150610b0582610ac4565b602082019050919050565b60006020820190508181036000830152610b2981610aed565b9050919050565b60008160601b9050919050565b6000610b4882610b30565b9050919050565b6000610b5a82610b3d565b9050919050565b610b72610b6d82610949565b610b4f565b82525050565b6000819050919050565b610b93610b8e82610804565b610b78565b82525050565b6000610ba58285610b61565b601482019150610bb58284610b82565b6020820191508190509392505050565b7f494e56414c49442050524f4f4600000000000000000000000000000000000000600082015250565b6000610bfb600d8361071f565b9150610c0682610bc5565b602082019050919050565b60006020820190508181036000830152610c2a81610bee565b9050919050565b610c3a81610949565b82525050565b6000604082019050610c556000830185610c31565b610c6260208301846108ff565b9392505050565b610c72816109b4565b8114610c7d57600080fd5b50565b600081519050610c8f81610c69565b92915050565b600060208284031215610cab57610caa6107fa565b5b6000610cb984828501610c80565b91505092915050565b6000602082019050610cd76000830184610c31565b92915050565b600081519050610cec8161080e565b92915050565b600060208284031215610d0857610d076107fa565b5b6000610d1684828501610cdd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220df65e9c5fd4853fee96b671f7db946a4b0dc495f4ca91e87b877b24c5d4f7ed064736f6c634300081c0033608060405234801561001057600080fd5b506040516119c63803806119c683398181016040528101906100329190610529565b8282816003908161004391906107cb565b50806004908161005391906107cb565b50505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100c9600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826100d160201b60201c565b5050506109bd565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101435760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161013a91906108de565b60405180910390fd5b6101556000838361015960201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101ab57806002600082825461019f9190610928565b9250508190555061027e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610237578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161022e9392919061096b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102c75780600260008282540392505081905550610314565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161037191906109a2565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103e58261039c565b810181811067ffffffffffffffff82111715610404576104036103ad565b5b80604052505050565b600061041761037e565b905061042382826103dc565b919050565b600067ffffffffffffffff821115610443576104426103ad565b5b61044c8261039c565b9050602081019050919050565b60005b8381101561047757808201518184015260208101905061045c565b60008484015250505050565b600061049661049184610428565b61040d565b9050828152602081018484840111156104b2576104b1610397565b5b6104bd848285610459565b509392505050565b600082601f8301126104da576104d9610392565b5b81516104ea848260208601610483565b91505092915050565b6000819050919050565b610506816104f3565b811461051157600080fd5b50565b600081519050610523816104fd565b92915050565b60008060006060848603121561054257610541610388565b5b600084015167ffffffffffffffff8111156105605761055f61038d565b5b61056c868287016104c5565b935050602084015167ffffffffffffffff81111561058d5761058c61038d565b5b610599868287016104c5565b92505060406105aa86828701610514565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061060657607f821691505b602082108103610619576106186105bf565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610644565b61068b8683610644565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106c86106c36106be846104f3565b6106a3565b6104f3565b9050919050565b6000819050919050565b6106e2836106ad565b6106f66106ee826106cf565b848454610651565b825550505050565b600090565b61070b6106fe565b6107168184846106d9565b505050565b5b8181101561073a5761072f600082610703565b60018101905061071c565b5050565b601f82111561077f576107508161061f565b61075984610634565b81016020851015610768578190505b61077c61077485610634565b83018261071b565b50505b505050565b600082821c905092915050565b60006107a260001984600802610784565b1980831691505092915050565b60006107bb8383610791565b9150826002028217905092915050565b6107d4826105b4565b67ffffffffffffffff8111156107ed576107ec6103ad565b5b6107f782546105ee565b61080282828561073e565b600060209050601f8311600181146108355760008415610823578287015190505b61082d85826107af565b865550610895565b601f1984166108438661061f565b60005b8281101561086b57848901518255600182019150602085019450602081019050610846565b868310156108885784890151610884601f891682610791565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c88261089d565b9050919050565b6108d8816108bd565b82525050565b60006020820190506108f360008301846108cf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610933826104f3565b915061093e836104f3565b9250828201905080821115610956576109556108f9565b5b92915050565b610965816104f3565b82525050565b600060608201905061098060008301866108cf565b61098d602083018561095c565b61099a604083018461095c565b949350505050565b60006020820190506109b7600083018461095c565b92915050565b610ffa806109cc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461016857806370a08231146101845780638da5cb5b146101b457806395d89b41146101d2578063a9059cbb146101f0578063dd62ed3e14610220576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610250565b6040516100c39190610be2565b60405180910390f35b6100e660048036038101906100e19190610c9d565b6102e2565b6040516100f39190610cf8565b60405180910390f35b610104610305565b6040516101119190610d22565b60405180910390f35b610134600480360381019061012f9190610d3d565b61030f565b6040516101419190610cf8565b60405180910390f35b61015261033e565b60405161015f9190610dac565b60405180910390f35b610182600480360381019061017d9190610c9d565b610347565b005b61019e60048036038101906101999190610dc7565b610409565b6040516101ab9190610d22565b60405180910390f35b6101bc610451565b6040516101c99190610e03565b60405180910390f35b6101da610477565b6040516101e79190610be2565b60405180910390f35b61020a60048036038101906102059190610c9d565b610509565b6040516102179190610cf8565b60405180910390f35b61023a60048036038101906102359190610e1e565b61052c565b6040516102479190610d22565b60405180910390f35b60606003805461025f90610e8d565b80601f016020809104026020016040519081016040528092919081815260200182805461028b90610e8d565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b5050505050905090565b6000806102ed6105b3565b90506102fa8185856105bb565b600191505092915050565b6000600254905090565b60008061031a6105b3565b90506103278582856105cd565b610332858585610662565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90610f0a565b60405180910390fd5b610404600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838361030f565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461048690610e8d565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290610e8d565b80156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b6000806105146105b3565b9050610521818585610662565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6105c88383836001610756565b505050565b60006105d9848461052c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561065c578181101561064c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161064393929190610f2a565b60405180910390fd5b61065b84848484036000610756565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106d45760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106cb9190610e03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107465760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161073d9190610e03565b60405180910390fd5b61075183838361092d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107c85760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107bf9190610e03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361083a5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108319190610e03565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610927578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161091e9190610d22565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361097f5780600260008282546109739190610f90565b92505081905550610a52565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a0b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0293929190610f2a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9b5780600260008282540392505081905550610ae8565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b459190610d22565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b8c578082015181840152602081019050610b71565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bb482610b52565b610bbe8185610b5d565b9350610bce818560208601610b6e565b610bd781610b98565b840191505092915050565b60006020820190508181036000830152610bfc8184610ba9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3482610c09565b9050919050565b610c4481610c29565b8114610c4f57600080fd5b50565b600081359050610c6181610c3b565b92915050565b6000819050919050565b610c7a81610c67565b8114610c8557600080fd5b50565b600081359050610c9781610c71565b92915050565b60008060408385031215610cb457610cb3610c04565b5b6000610cc285828601610c52565b9250506020610cd385828601610c88565b9150509250929050565b60008115159050919050565b610cf281610cdd565b82525050565b6000602082019050610d0d6000830184610ce9565b92915050565b610d1c81610c67565b82525050565b6000602082019050610d376000830184610d13565b92915050565b600080600060608486031215610d5657610d55610c04565b5b6000610d6486828701610c52565b9350506020610d7586828701610c52565b9250506040610d8686828701610c88565b9150509250925092565b600060ff82169050919050565b610da681610d90565b82525050565b6000602082019050610dc16000830184610d9d565b92915050565b600060208284031215610ddd57610ddc610c04565b5b6000610deb84828501610c52565b91505092915050565b610dfd81610c29565b82525050565b6000602082019050610e186000830184610df4565b92915050565b60008060408385031215610e3557610e34610c04565b5b6000610e4385828601610c52565b9250506020610e5485828601610c52565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ea557607f821691505b602082108103610eb857610eb7610e5e565b5b50919050565b7f4f6e6c79206f776e65722063616e206d696e7400000000000000000000000000600082015250565b6000610ef4601383610b5d565b9150610eff82610ebe565b602082019050919050565b60006020820190508181036000830152610f2381610ee7565b9050919050565b6000606082019050610f3f6000830186610df4565b610f4c6020830185610d13565b610f596040830184610d13565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f9b82610c67565b9150610fa683610c67565b9250828201905080821115610fbe57610fbd610f61565b5b9291505056fea2646970667358221220f8d7cb2434c48574613be26bead682dcc7cbdc71916e734550db03758c8ba28f64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E9C CODESIZE SUB DUP1 PUSH2 0x2E9C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2D2 JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x41 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x6C SWAP1 PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x743 JUMP JUMPDEST PUSH2 0x19C6 DUP1 PUSH2 0x14D6 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118 DUP2 PUSH2 0x105 JUMP JUMPDEST DUP2 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x10F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18E DUP3 PUSH2 0x145 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AD JUMPI PUSH2 0x1AC PUSH2 0x156 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 PUSH2 0xF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC DUP3 DUP3 PUSH2 0x185 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EC JUMPI PUSH2 0x1EB PUSH2 0x156 JUMP JUMPDEST JUMPDEST PUSH2 0x1F5 DUP3 PUSH2 0x145 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x220 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x205 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F PUSH2 0x23A DUP5 PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x25B JUMPI PUSH2 0x25A PUSH2 0x140 JUMP JUMPDEST JUMPDEST PUSH2 0x266 DUP5 DUP3 DUP6 PUSH2 0x202 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x13B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x293 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF DUP2 PUSH2 0x29C JUMP JUMPDEST DUP2 EQ PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CC DUP2 PUSH2 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2EC JUMPI PUSH2 0x2EB PUSH2 0xFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FA DUP8 DUP3 DUP9 ADD PUSH2 0x126 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31B JUMPI PUSH2 0x31A PUSH2 0x100 JUMP JUMPDEST JUMPDEST PUSH2 0x327 DUP8 DUP3 DUP9 ADD PUSH2 0x26E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0x100 JUMP JUMPDEST JUMPDEST PUSH2 0x354 DUP8 DUP3 DUP9 ADD PUSH2 0x26E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x365 DUP8 DUP3 DUP9 ADD PUSH2 0x2BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3D6 JUMPI PUSH2 0x3D5 PUSH2 0x37C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x43E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x401 JUMP JUMPDEST PUSH2 0x448 DUP7 DUP4 PUSH2 0x401 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x485 PUSH2 0x480 PUSH2 0x47B DUP5 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49F DUP4 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x4AB DUP3 PUSH2 0x48C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x40E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4C8 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x4D3 DUP2 DUP5 DUP5 PUSH2 0x496 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4EC PUSH1 0x0 DUP3 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x53C JUMPI PUSH2 0x50D DUP2 PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x516 DUP5 PUSH2 0x3F1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x525 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x539 PUSH2 0x531 DUP6 PUSH2 0x3F1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4D8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x541 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x578 DUP4 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x591 DUP3 PUSH2 0x371 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x156 JUMP JUMPDEST JUMPDEST PUSH2 0x5B4 DUP3 SLOAD PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x5BF DUP3 DUP3 DUP6 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5E0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5EA DUP6 DUP3 PUSH2 0x56C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x652 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x600 DUP7 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x628 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x603 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x645 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x641 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x54E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x678 DUP2 PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x682 DUP2 DUP7 PUSH2 0x65A JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x69D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x6B3 JUMPI PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x6BC DUP6 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6DE JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6BF JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F8 DUP2 PUSH2 0x29C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x718 DUP2 DUP7 PUSH2 0x66B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x72C DUP2 DUP6 PUSH2 0x66B JUMP JUMPDEST SWAP1 POP PUSH2 0x73B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xD84 DUP1 PUSH2 0x752 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89DED484 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x89DED484 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x16F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2F52EBB7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x19A SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C6 SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x213 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x213 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2C3 SWAP3 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x329 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x4 SLOAD DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP3 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP6 PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x570 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x5A6 SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x61F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x602 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x678 DUP6 DUP5 PUSH2 0x682 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6B8 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0xD1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6D2 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x68B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x6EA JUMPI PUSH2 0x6E5 DUP3 DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x6F4 DUP4 DUP4 PUSH2 0x6FD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x74E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x733 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x776 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x780 DUP2 DUP6 PUSH2 0x71F JUMP JUMPDEST SWAP4 POP PUSH2 0x790 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x730 JUMP JUMPDEST PUSH2 0x799 DUP2 PUSH2 0x75A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BE DUP2 DUP5 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D9 DUP2 PUSH2 0x7C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x817 DUP2 PUSH2 0x804 JUMP JUMPDEST DUP2 EQ PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x834 DUP2 PUSH2 0x80E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x83A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x83F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0x844 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B8 JUMPI PUSH2 0x8B7 PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C6 DUP7 DUP3 DUP8 ADD PUSH2 0x825 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E6 PUSH2 0x7FF JUMP JUMPDEST JUMPDEST PUSH2 0x8F3 DUP7 DUP3 DUP8 ADD PUSH2 0x849 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x908 DUP2 PUSH2 0x804 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x923 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x954 DUP3 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x964 DUP2 PUSH2 0x949 JUMP JUMPDEST DUP2 EQ PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x981 DUP2 PUSH2 0x95B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99D JUMPI PUSH2 0x99C PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9AB DUP5 DUP3 DUP6 ADD PUSH2 0x972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C9 DUP2 PUSH2 0x9B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0F PUSH2 0xA0A PUSH2 0xA05 DUP5 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xAAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xABE JUMPI PUSH2 0xABD PUSH2 0xA64 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414C52454144595F434C41494D45440000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFA PUSH1 0xF DUP4 PUSH2 0x71F JUMP JUMPDEST SWAP2 POP PUSH2 0xB05 DUP3 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB29 DUP2 PUSH2 0xAED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB48 DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5A DUP3 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB72 PUSH2 0xB6D DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB93 PUSH2 0xB8E DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA5 DUP3 DUP6 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49442050524F4F4600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFB PUSH1 0xD DUP4 PUSH2 0x71F JUMP JUMPDEST SWAP2 POP PUSH2 0xC06 DUP3 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2A DUP2 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3A DUP2 PUSH2 0x949 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0xC62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0x9B4 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8F DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB9 DUP5 DUP3 DUP6 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCEC DUP2 PUSH2 0x80E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD08 JUMPI PUSH2 0xD07 PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP5 DUP3 DUP6 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH6 0xE9C5FD4853FE 0xE9 PUSH12 0x671F7DB946A4B0DC495F4CA9 0x1E DUP8 0xB8 PUSH24 0xB24C5D4F7ED064736F6C634300081C003360806040523480 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x19C6 CODESIZE SUB DUP1 PUSH2 0x19C6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x529 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x7CB JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x7CB JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xC9 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0xD1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x0 DUP4 DUP4 PUSH2 0x159 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x237 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x314 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3E5 DUP3 PUSH2 0x39C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x404 JUMPI PUSH2 0x403 PUSH2 0x3AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 PUSH2 0x37E JUMP JUMPDEST SWAP1 POP PUSH2 0x423 DUP3 DUP3 PUSH2 0x3DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x443 JUMPI PUSH2 0x442 PUSH2 0x3AD JUMP JUMPDEST JUMPDEST PUSH2 0x44C DUP3 PUSH2 0x39C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x477 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496 PUSH2 0x491 DUP5 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B1 PUSH2 0x397 JUMP JUMPDEST JUMPDEST PUSH2 0x4BD DUP5 DUP3 DUP6 PUSH2 0x459 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DA JUMPI PUSH2 0x4D9 PUSH2 0x392 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x483 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x506 DUP2 PUSH2 0x4F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x523 DUP2 PUSH2 0x4FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x388 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x560 JUMPI PUSH2 0x55F PUSH2 0x38D JUMP JUMPDEST JUMPDEST PUSH2 0x56C DUP7 DUP3 DUP8 ADD PUSH2 0x4C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58D JUMPI PUSH2 0x58C PUSH2 0x38D JUMP JUMPDEST JUMPDEST PUSH2 0x599 DUP7 DUP3 DUP8 ADD PUSH2 0x4C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5AA DUP7 DUP3 DUP8 ADD PUSH2 0x514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x606 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x5BF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x681 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x68B DUP7 DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 PUSH2 0x6C3 PUSH2 0x6BE DUP5 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E2 DUP4 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0x6EE DUP3 PUSH2 0x6CF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x651 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x716 DUP2 DUP5 DUP5 PUSH2 0x6D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73A JUMPI PUSH2 0x72F PUSH1 0x0 DUP3 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x71C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x750 DUP2 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x759 DUP5 PUSH2 0x634 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x768 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x77C PUSH2 0x774 DUP6 PUSH2 0x634 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x71B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x784 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BB DUP4 DUP4 PUSH2 0x791 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D4 DUP3 PUSH2 0x5B4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x3AD JUMP JUMPDEST JUMPDEST PUSH2 0x7F7 DUP3 SLOAD PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x802 DUP3 DUP3 DUP6 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x823 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x82D DUP6 DUP3 PUSH2 0x7AF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x843 DUP7 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x86B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x846 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x888 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x884 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x791 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP3 PUSH2 0x89D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0x8BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x93E DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x956 JUMPI PUSH2 0x955 PUSH2 0x8F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x965 DUP2 PUSH2 0x4F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x980 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x98D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x99A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFA DUP1 PUSH2 0x9CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2ED PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FA DUP2 DUP6 DUP6 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31A PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x327 DUP6 DUP3 DUP6 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x332 DUP6 DUP6 DUP6 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x404 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x30F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x514 PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x521 DUP2 DUP6 DUP6 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x756 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D9 DUP5 DUP5 PUSH2 0x52C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x64C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x643 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x756 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x746 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x751 DUP4 DUP4 DUP4 PUSH2 0x92D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x927 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x973 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA0B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB4 DUP3 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xBBE DUP2 DUP6 PUSH2 0xB5D JUMP JUMPDEST SWAP4 POP PUSH2 0xBCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST PUSH2 0xBD7 DUP2 PUSH2 0xB98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBFC DUP2 DUP5 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC34 DUP3 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC44 DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP2 EQ PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC61 DUP2 PUSH2 0xC3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0xC67 JUMP JUMPDEST DUP2 EQ PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC97 DUP2 PUSH2 0xC71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCD3 DUP6 DUP3 DUP7 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF2 DUP2 PUSH2 0xCDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1C DUP2 PUSH2 0xC67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD64 DUP7 DUP3 DUP8 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD75 DUP7 DUP3 DUP8 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD86 DUP7 DUP3 DUP8 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 DUP2 PUSH2 0xD90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDD JUMPI PUSH2 0xDDC PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDEB DUP5 DUP3 DUP6 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH2 0xE34 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE54 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xE5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206D696E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF4 PUSH1 0x13 DUP4 PUSH2 0xB5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEFF DUP3 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF23 DUP2 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF3F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xF4C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xF59 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9B DUP3 PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA6 DUP4 PUSH2 0xC67 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xF61 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xD7 0xCB 0x24 CALLVALUE 0xC4 DUP6 PUSH21 0x613BE26BEAD682DCC7CBDC71916E734550DB03758C DUP12 LOG2 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"156:1132:7:-:0;;;433:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;544:5;537:4;:12;;;;;;:::i;:::-;;568:7;559:6;:16;;;;;;:::i;:::-;;601:14;585:13;:30;;;;648:4;654:6;662:13;;633:44;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;625:5;;:52;;;;;;;;;;;;;;;;;;700:4;687:10;:17;;;;433:278;;;;156:1132;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:248::-;2052:1;2062:113;2076:6;2073:1;2070:13;2062:113;;;2161:1;2156:3;2152:11;2146:18;2142:1;2137:3;2133:11;2126:39;2098:2;2095:1;2091:10;2086:15;;2062:113;;;2209:1;2200:6;2195:3;2191:16;2184:27;2032:186;1970:248;;;:::o;2224:434::-;2313:5;2338:66;2354:49;2396:6;2354:49;:::i;:::-;2338:66;:::i;:::-;2329:75;;2427:6;2420:5;2413:21;2465:4;2458:5;2454:16;2503:3;2494:6;2489:3;2485:16;2482:25;2479:112;;;2510:79;;:::i;:::-;2479:112;2600:52;2645:6;2640:3;2635;2600:52;:::i;:::-;2319:339;2224:434;;;;;:::o;2678:355::-;2745:5;2794:3;2787:4;2779:6;2775:17;2771:27;2761:122;;2802:79;;:::i;:::-;2761:122;2912:6;2906:13;2937:90;3023:3;3015:6;3008:4;3000:6;2996:17;2937:90;:::i;:::-;2928:99;;2751:282;2678:355;;;;:::o;3039:77::-;3076:7;3105:5;3094:16;;3039:77;;;:::o;3122:122::-;3195:24;3213:5;3195:24;:::i;:::-;3188:5;3185:35;3175:63;;3234:1;3231;3224:12;3175:63;3122:122;:::o;3250:143::-;3307:5;3338:6;3332:13;3323:22;;3354:33;3381:5;3354:33;:::i;:::-;3250:143;;;;:::o;3399:1166::-;3516:6;3524;3532;3540;3589:3;3577:9;3568:7;3564:23;3560:33;3557:120;;;3596:79;;:::i;:::-;3557:120;3716:1;3741:64;3797:7;3788:6;3777:9;3773:22;3741:64;:::i;:::-;3731:74;;3687:128;3875:2;3864:9;3860:18;3854:25;3906:18;3898:6;3895:30;3892:117;;;3928:79;;:::i;:::-;3892:117;4033:74;4099:7;4090:6;4079:9;4075:22;4033:74;:::i;:::-;4023:84;;3825:292;4177:2;4166:9;4162:18;4156:25;4208:18;4200:6;4197:30;4194:117;;;4230:79;;:::i;:::-;4194:117;4335:74;4401:7;4392:6;4381:9;4377:22;4335:74;:::i;:::-;4325:84;;4127:292;4458:2;4484:64;4540:7;4531:6;4520:9;4516:22;4484:64;:::i;:::-;4474:74;;4429:129;3399:1166;;;;;;;:::o;4571:99::-;4623:6;4657:5;4651:12;4641:22;;4571:99;;;:::o;4676:180::-;4724:77;4721:1;4714:88;4821:4;4818:1;4811:15;4845:4;4842:1;4835:15;4862:320;4906:6;4943:1;4937:4;4933:12;4923:22;;4990:1;4984:4;4980:12;5011:18;5001:81;;5067:4;5059:6;5055:17;5045:27;;5001:81;5129:2;5121:6;5118:14;5098:18;5095:38;5092:84;;5148:18;;:::i;:::-;5092:84;4913:269;4862:320;;;:::o;5188:141::-;5237:4;5260:3;5252:11;;5283:3;5280:1;5273:14;5317:4;5314:1;5304:18;5296:26;;5188:141;;;:::o;5335:93::-;5372:6;5419:2;5414;5407:5;5403:14;5399:23;5389:33;;5335:93;;;:::o;5434:107::-;5478:8;5528:5;5522:4;5518:16;5497:37;;5434:107;;;;:::o;5547:393::-;5616:6;5666:1;5654:10;5650:18;5689:97;5719:66;5708:9;5689:97;:::i;:::-;5807:39;5837:8;5826:9;5807:39;:::i;:::-;5795:51;;5879:4;5875:9;5868:5;5864:21;5855:30;;5928:4;5918:8;5914:19;5907:5;5904:30;5894:40;;5623:317;;5547:393;;;;;:::o;5946:60::-;5974:3;5995:5;5988:12;;5946:60;;;:::o;6012:142::-;6062:9;6095:53;6113:34;6122:24;6140:5;6122:24;:::i;:::-;6113:34;:::i;:::-;6095:53;:::i;:::-;6082:66;;6012:142;;;:::o;6160:75::-;6203:3;6224:5;6217:12;;6160:75;;;:::o;6241:269::-;6351:39;6382:7;6351:39;:::i;:::-;6412:91;6461:41;6485:16;6461:41;:::i;:::-;6453:6;6446:4;6440:11;6412:91;:::i;:::-;6406:4;6399:105;6317:193;6241:269;;;:::o;6516:73::-;6561:3;6516:73;:::o;6595:189::-;6672:32;;:::i;:::-;6713:65;6771:6;6763;6757:4;6713:65;:::i;:::-;6648:136;6595:189;;:::o;6790:186::-;6850:120;6867:3;6860:5;6857:14;6850:120;;;6921:39;6958:1;6951:5;6921:39;:::i;:::-;6894:1;6887:5;6883:13;6874:22;;6850:120;;;6790:186;;:::o;6982:543::-;7083:2;7078:3;7075:11;7072:446;;;7117:38;7149:5;7117:38;:::i;:::-;7201:29;7219:10;7201:29;:::i;:::-;7191:8;7187:44;7384:2;7372:10;7369:18;7366:49;;;7405:8;7390:23;;7366:49;7428:80;7484:22;7502:3;7484:22;:::i;:::-;7474:8;7470:37;7457:11;7428:80;:::i;:::-;7087:431;;7072:446;6982:543;;;:::o;7531:117::-;7585:8;7635:5;7629:4;7625:16;7604:37;;7531:117;;;;:::o;7654:169::-;7698:6;7731:51;7779:1;7775:6;7767:5;7764:1;7760:13;7731:51;:::i;:::-;7727:56;7812:4;7806;7802:15;7792:25;;7705:118;7654:169;;;;:::o;7828:295::-;7904:4;8050:29;8075:3;8069:4;8050:29;:::i;:::-;8042:37;;8112:3;8109:1;8105:11;8099:4;8096:21;8088:29;;7828:295;;;;:::o;8128:1395::-;8245:37;8278:3;8245:37;:::i;:::-;8347:18;8339:6;8336:30;8333:56;;;8369:18;;:::i;:::-;8333:56;8413:38;8445:4;8439:11;8413:38;:::i;:::-;8498:67;8558:6;8550;8544:4;8498:67;:::i;:::-;8592:1;8616:4;8603:17;;8648:2;8640:6;8637:14;8665:1;8660:618;;;;9322:1;9339:6;9336:77;;;9388:9;9383:3;9379:19;9373:26;9364:35;;9336:77;9439:67;9499:6;9492:5;9439:67;:::i;:::-;9433:4;9426:81;9295:222;8630:887;;8660:618;8712:4;8708:9;8700:6;8696:22;8746:37;8778:4;8746:37;:::i;:::-;8805:1;8819:208;8833:7;8830:1;8827:14;8819:208;;;8912:9;8907:3;8903:19;8897:26;8889:6;8882:42;8963:1;8955:6;8951:14;8941:24;;9010:2;8999:9;8995:18;8982:31;;8856:4;8853:1;8849:12;8844:17;;8819:208;;;9055:6;9046:7;9043:19;9040:179;;;9113:9;9108:3;9104:19;9098:26;9156:48;9198:4;9190:6;9186:17;9175:9;9156:48;:::i;:::-;9148:6;9141:64;9063:156;9040:179;9265:1;9261;9253:6;9249:14;9245:22;9239:4;9232:36;8667:611;;;8630:887;;8220:1303;;;8128:1395;;:::o;9529:169::-;9613:11;9647:6;9642:3;9635:19;9687:4;9682:3;9678:14;9663:29;;9529:169;;;;:::o;9728:831::-;9813:3;9850:5;9844:12;9879:36;9905:9;9879:36;:::i;:::-;9931:71;9995:6;9990:3;9931:71;:::i;:::-;9924:78;;10033:1;10022:9;10018:17;10049:1;10044:164;;;;10222:1;10217:336;;;;10011:542;;10044:164;10128:4;10124:9;10113;10109:25;10104:3;10097:38;10188:6;10181:14;10174:22;10168:4;10164:33;10159:3;10155:43;10148:50;;10044:164;;10217:336;10284:38;10316:5;10284:38;:::i;:::-;10344:1;10358:154;10372:6;10369:1;10366:13;10358:154;;;10446:7;10440:14;10436:1;10431:3;10427:11;10420:35;10496:1;10487:7;10483:15;10472:26;;10394:4;10391:1;10387:12;10382:17;;10358:154;;;10541:1;10536:3;10532:11;10525:18;;10224:329;;10011:542;;9817:742;;9728:831;;;;:::o;10565:118::-;10652:24;10670:5;10652:24;:::i;:::-;10647:3;10640:37;10565:118;;:::o;10689:612::-;10872:4;10910:2;10899:9;10895:18;10887:26;;10959:9;10953:4;10949:20;10945:1;10934:9;10930:17;10923:47;10987:75;11057:4;11048:6;10987:75;:::i;:::-;10979:83;;11109:9;11103:4;11099:20;11094:2;11083:9;11079:18;11072:48;11137:75;11207:4;11198:6;11137:75;:::i;:::-;11129:83;;11222:72;11290:2;11279:9;11275:18;11266:6;11222:72;:::i;:::-;10689:612;;;;;;:::o;156:1132:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_balanceOf_2035":{"entryPoint":1271,"id":2035,"parameterSlots":0,"returnSlots":1},"@_efficientKeccak256_824":{"entryPoint":1789,"id":824,"parameterSlots":2,"returnSlots":1},"@claim_2023":{"entryPoint":545,"id":2023,"parameterSlots":3,"returnSlots":0},"@claimed_1917":{"entryPoint":1575,"id":1917,"parameterSlots":0,"returnSlots":0},"@commutativeKeccak256_812":{"entryPoint":1746,"id":812,"parameterSlots":2,"returnSlots":1},"@initialSupply_1911":{"entryPoint":1265,"id":1911,"parameterSlots":0,"returnSlots":0},"@merkleRoot_1913":{"entryPoint":539,"id":1913,"parameterSlots":0,"returnSlots":0},"@name_1907":{"entryPoint":397,"id":1907,"parameterSlots":0,"returnSlots":0},"@processProof_895":{"entryPoint":1666,"id":895,"parameterSlots":2,"returnSlots":1},"@symbol_1909":{"entryPoint":1433,"id":1909,"parameterSlots":0,"returnSlots":0},"@token_1905":{"entryPoint":1607,"id":1905,"parameterSlots":0,"returnSlots":0},"@verify_854":{"entryPoint":1643,"id":854,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2121,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":3200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":2207,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3121,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":2913,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2496,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2000,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ERC20Token_$2093_to_t_address_fromStack":{"entryPoint":2618,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a_to_t_string_memory_ptr_fromStack":{"entryPoint":3054,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861_to_t_string_memory_ptr_fromStack":{"entryPoint":2797,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2303,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":2946,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":2969,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3136,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20Token_$2093__to_t_address__fromStack_reversed":{"entryPoint":2633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2832,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2318,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1812,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1823,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2377,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2484,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1990,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2345,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2052,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ERC20Token_$2093_to_t_address":{"entryPoint":2600,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2582,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2548,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1840,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2707,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":2538,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":2895,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":2877,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":2936,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":2660,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3359,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2111,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2106,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2116,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2047,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2042,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1882,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":2864,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a":{"entryPoint":3013,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861":{"entryPoint":2756,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2395,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3177,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2062,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12259:9","nodeType":"YulBlock","src":"0:12259:9","statements":[{"body":{"nativeSrc":"66:40:9","nodeType":"YulBlock","src":"66:40:9","statements":[{"nativeSrc":"77:22:9","nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nativeSrc":"93:5:9","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nativeSrc":"87:5:9","nodeType":"YulIdentifier","src":"87:5:9"},"nativeSrc":"87:12:9","nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nativeSrc":"77:6:9","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:9","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:9","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nativeSrc":"208:73:9","nodeType":"YulBlock","src":"208:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:9","nodeType":"YulIdentifier","src":"225:3:9"},{"name":"length","nativeSrc":"230:6:9","nodeType":"YulIdentifier","src":"230:6:9"}],"functionName":{"name":"mstore","nativeSrc":"218:6:9","nodeType":"YulIdentifier","src":"218:6:9"},"nativeSrc":"218:19:9","nodeType":"YulFunctionCall","src":"218:19:9"},"nativeSrc":"218:19:9","nodeType":"YulExpressionStatement","src":"218:19:9"},{"nativeSrc":"246:29:9","nodeType":"YulAssignment","src":"246:29:9","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:9","nodeType":"YulIdentifier","src":"265:3:9"},{"kind":"number","nativeSrc":"270:4:9","nodeType":"YulLiteral","src":"270:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:9","nodeType":"YulIdentifier","src":"261:3:9"},"nativeSrc":"261:14:9","nodeType":"YulFunctionCall","src":"261:14:9"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:9","nodeType":"YulIdentifier","src":"246:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:9","nodeType":"YulTypedName","src":"180:3:9","type":""},{"name":"length","nativeSrc":"185:6:9","nodeType":"YulTypedName","src":"185:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:9","nodeType":"YulTypedName","src":"196:11:9","type":""}],"src":"112:169:9"},{"body":{"nativeSrc":"349:186:9","nodeType":"YulBlock","src":"349:186:9","statements":[{"nativeSrc":"360:10:9","nodeType":"YulVariableDeclaration","src":"360:10:9","value":{"kind":"number","nativeSrc":"369:1:9","nodeType":"YulLiteral","src":"369:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:9","nodeType":"YulTypedName","src":"364:1:9","type":""}]},{"body":{"nativeSrc":"429:63:9","nodeType":"YulBlock","src":"429:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:9","nodeType":"YulIdentifier","src":"454:3:9"},{"name":"i","nativeSrc":"459:1:9","nodeType":"YulIdentifier","src":"459:1:9"}],"functionName":{"name":"add","nativeSrc":"450:3:9","nodeType":"YulIdentifier","src":"450:3:9"},"nativeSrc":"450:11:9","nodeType":"YulFunctionCall","src":"450:11:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:9","nodeType":"YulIdentifier","src":"473:3:9"},{"name":"i","nativeSrc":"478:1:9","nodeType":"YulIdentifier","src":"478:1:9"}],"functionName":{"name":"add","nativeSrc":"469:3:9","nodeType":"YulIdentifier","src":"469:3:9"},"nativeSrc":"469:11:9","nodeType":"YulFunctionCall","src":"469:11:9"}],"functionName":{"name":"mload","nativeSrc":"463:5:9","nodeType":"YulIdentifier","src":"463:5:9"},"nativeSrc":"463:18:9","nodeType":"YulFunctionCall","src":"463:18:9"}],"functionName":{"name":"mstore","nativeSrc":"443:6:9","nodeType":"YulIdentifier","src":"443:6:9"},"nativeSrc":"443:39:9","nodeType":"YulFunctionCall","src":"443:39:9"},"nativeSrc":"443:39:9","nodeType":"YulExpressionStatement","src":"443:39:9"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:9","nodeType":"YulIdentifier","src":"390:1:9"},{"name":"length","nativeSrc":"393:6:9","nodeType":"YulIdentifier","src":"393:6:9"}],"functionName":{"name":"lt","nativeSrc":"387:2:9","nodeType":"YulIdentifier","src":"387:2:9"},"nativeSrc":"387:13:9","nodeType":"YulFunctionCall","src":"387:13:9"},"nativeSrc":"379:113:9","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:9","nodeType":"YulBlock","src":"401:19:9","statements":[{"nativeSrc":"403:15:9","nodeType":"YulAssignment","src":"403:15:9","value":{"arguments":[{"name":"i","nativeSrc":"412:1:9","nodeType":"YulIdentifier","src":"412:1:9"},{"kind":"number","nativeSrc":"415:2:9","nodeType":"YulLiteral","src":"415:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:9","nodeType":"YulIdentifier","src":"408:3:9"},"nativeSrc":"408:10:9","nodeType":"YulFunctionCall","src":"408:10:9"},"variableNames":[{"name":"i","nativeSrc":"403:1:9","nodeType":"YulIdentifier","src":"403:1:9"}]}]},"pre":{"nativeSrc":"383:3:9","nodeType":"YulBlock","src":"383:3:9","statements":[]},"src":"379:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:9","nodeType":"YulIdentifier","src":"512:3:9"},{"name":"length","nativeSrc":"517:6:9","nodeType":"YulIdentifier","src":"517:6:9"}],"functionName":{"name":"add","nativeSrc":"508:3:9","nodeType":"YulIdentifier","src":"508:3:9"},"nativeSrc":"508:16:9","nodeType":"YulFunctionCall","src":"508:16:9"},{"kind":"number","nativeSrc":"526:1:9","nodeType":"YulLiteral","src":"526:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:9","nodeType":"YulIdentifier","src":"501:6:9"},"nativeSrc":"501:27:9","nodeType":"YulFunctionCall","src":"501:27:9"},"nativeSrc":"501:27:9","nodeType":"YulExpressionStatement","src":"501:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:9","nodeType":"YulTypedName","src":"331:3:9","type":""},{"name":"dst","nativeSrc":"336:3:9","nodeType":"YulTypedName","src":"336:3:9","type":""},{"name":"length","nativeSrc":"341:6:9","nodeType":"YulTypedName","src":"341:6:9","type":""}],"src":"287:248:9"},{"body":{"nativeSrc":"589:54:9","nodeType":"YulBlock","src":"589:54:9","statements":[{"nativeSrc":"599:38:9","nodeType":"YulAssignment","src":"599:38:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:9","nodeType":"YulIdentifier","src":"617:5:9"},{"kind":"number","nativeSrc":"624:2:9","nodeType":"YulLiteral","src":"624:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:9","nodeType":"YulIdentifier","src":"613:3:9"},"nativeSrc":"613:14:9","nodeType":"YulFunctionCall","src":"613:14:9"},{"arguments":[{"kind":"number","nativeSrc":"633:2:9","nodeType":"YulLiteral","src":"633:2:9","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:9","nodeType":"YulIdentifier","src":"629:3:9"},"nativeSrc":"629:7:9","nodeType":"YulFunctionCall","src":"629:7:9"}],"functionName":{"name":"and","nativeSrc":"609:3:9","nodeType":"YulIdentifier","src":"609:3:9"},"nativeSrc":"609:28:9","nodeType":"YulFunctionCall","src":"609:28:9"},"variableNames":[{"name":"result","nativeSrc":"599:6:9","nodeType":"YulIdentifier","src":"599:6:9"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:9","nodeType":"YulTypedName","src":"572:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:9","nodeType":"YulTypedName","src":"582:6:9","type":""}],"src":"541:102:9"},{"body":{"nativeSrc":"741:285:9","nodeType":"YulBlock","src":"741:285:9","statements":[{"nativeSrc":"751:53:9","nodeType":"YulVariableDeclaration","src":"751:53:9","value":{"arguments":[{"name":"value","nativeSrc":"798:5:9","nodeType":"YulIdentifier","src":"798:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:9","nodeType":"YulIdentifier","src":"765:32:9"},"nativeSrc":"765:39:9","nodeType":"YulFunctionCall","src":"765:39:9"},"variables":[{"name":"length","nativeSrc":"755:6:9","nodeType":"YulTypedName","src":"755:6:9","type":""}]},{"nativeSrc":"813:78:9","nodeType":"YulAssignment","src":"813:78:9","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:9","nodeType":"YulIdentifier","src":"879:3:9"},{"name":"length","nativeSrc":"884:6:9","nodeType":"YulIdentifier","src":"884:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:9","nodeType":"YulIdentifier","src":"820:58:9"},"nativeSrc":"820:71:9","nodeType":"YulFunctionCall","src":"820:71:9"},"variableNames":[{"name":"pos","nativeSrc":"813:3:9","nodeType":"YulIdentifier","src":"813:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:9","nodeType":"YulIdentifier","src":"939:5:9"},{"kind":"number","nativeSrc":"946:4:9","nodeType":"YulLiteral","src":"946:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:9","nodeType":"YulIdentifier","src":"935:3:9"},"nativeSrc":"935:16:9","nodeType":"YulFunctionCall","src":"935:16:9"},{"name":"pos","nativeSrc":"953:3:9","nodeType":"YulIdentifier","src":"953:3:9"},{"name":"length","nativeSrc":"958:6:9","nodeType":"YulIdentifier","src":"958:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:9","nodeType":"YulIdentifier","src":"900:34:9"},"nativeSrc":"900:65:9","nodeType":"YulFunctionCall","src":"900:65:9"},"nativeSrc":"900:65:9","nodeType":"YulExpressionStatement","src":"900:65:9"},{"nativeSrc":"974:46:9","nodeType":"YulAssignment","src":"974:46:9","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:9","nodeType":"YulIdentifier","src":"985:3:9"},{"arguments":[{"name":"length","nativeSrc":"1012:6:9","nodeType":"YulIdentifier","src":"1012:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:9","nodeType":"YulIdentifier","src":"990:21:9"},"nativeSrc":"990:29:9","nodeType":"YulFunctionCall","src":"990:29:9"}],"functionName":{"name":"add","nativeSrc":"981:3:9","nodeType":"YulIdentifier","src":"981:3:9"},"nativeSrc":"981:39:9","nodeType":"YulFunctionCall","src":"981:39:9"},"variableNames":[{"name":"end","nativeSrc":"974:3:9","nodeType":"YulIdentifier","src":"974:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:9","nodeType":"YulTypedName","src":"722:5:9","type":""},{"name":"pos","nativeSrc":"729:3:9","nodeType":"YulTypedName","src":"729:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:9","nodeType":"YulTypedName","src":"737:3:9","type":""}],"src":"649:377:9"},{"body":{"nativeSrc":"1150:195:9","nodeType":"YulBlock","src":"1150:195:9","statements":[{"nativeSrc":"1160:26:9","nodeType":"YulAssignment","src":"1160:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:9","nodeType":"YulIdentifier","src":"1172:9:9"},{"kind":"number","nativeSrc":"1183:2:9","nodeType":"YulLiteral","src":"1183:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:9","nodeType":"YulIdentifier","src":"1168:3:9"},"nativeSrc":"1168:18:9","nodeType":"YulFunctionCall","src":"1168:18:9"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:9","nodeType":"YulIdentifier","src":"1160:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:9","nodeType":"YulIdentifier","src":"1207:9:9"},{"kind":"number","nativeSrc":"1218:1:9","nodeType":"YulLiteral","src":"1218:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:9","nodeType":"YulIdentifier","src":"1203:3:9"},"nativeSrc":"1203:17:9","nodeType":"YulFunctionCall","src":"1203:17:9"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:9","nodeType":"YulIdentifier","src":"1226:4:9"},{"name":"headStart","nativeSrc":"1232:9:9","nodeType":"YulIdentifier","src":"1232:9:9"}],"functionName":{"name":"sub","nativeSrc":"1222:3:9","nodeType":"YulIdentifier","src":"1222:3:9"},"nativeSrc":"1222:20:9","nodeType":"YulFunctionCall","src":"1222:20:9"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:9","nodeType":"YulIdentifier","src":"1196:6:9"},"nativeSrc":"1196:47:9","nodeType":"YulFunctionCall","src":"1196:47:9"},"nativeSrc":"1196:47:9","nodeType":"YulExpressionStatement","src":"1196:47:9"},{"nativeSrc":"1252:86:9","nodeType":"YulAssignment","src":"1252:86:9","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:9","nodeType":"YulIdentifier","src":"1324:6:9"},{"name":"tail","nativeSrc":"1333:4:9","nodeType":"YulIdentifier","src":"1333:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:9","nodeType":"YulIdentifier","src":"1260:63:9"},"nativeSrc":"1260:78:9","nodeType":"YulFunctionCall","src":"1260:78:9"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:9","nodeType":"YulIdentifier","src":"1252:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:9","nodeType":"YulTypedName","src":"1122:9:9","type":""},{"name":"value0","nativeSrc":"1134:6:9","nodeType":"YulTypedName","src":"1134:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:9","nodeType":"YulTypedName","src":"1145:4:9","type":""}],"src":"1032:313:9"},{"body":{"nativeSrc":"1396:32:9","nodeType":"YulBlock","src":"1396:32:9","statements":[{"nativeSrc":"1406:16:9","nodeType":"YulAssignment","src":"1406:16:9","value":{"name":"value","nativeSrc":"1417:5:9","nodeType":"YulIdentifier","src":"1417:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1406:7:9","nodeType":"YulIdentifier","src":"1406:7:9"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"1351:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1378:5:9","nodeType":"YulTypedName","src":"1378:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1388:7:9","nodeType":"YulTypedName","src":"1388:7:9","type":""}],"src":"1351:77:9"},{"body":{"nativeSrc":"1499:53:9","nodeType":"YulBlock","src":"1499:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1516:3:9","nodeType":"YulIdentifier","src":"1516:3:9"},{"arguments":[{"name":"value","nativeSrc":"1539:5:9","nodeType":"YulIdentifier","src":"1539:5:9"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1521:17:9","nodeType":"YulIdentifier","src":"1521:17:9"},"nativeSrc":"1521:24:9","nodeType":"YulFunctionCall","src":"1521:24:9"}],"functionName":{"name":"mstore","nativeSrc":"1509:6:9","nodeType":"YulIdentifier","src":"1509:6:9"},"nativeSrc":"1509:37:9","nodeType":"YulFunctionCall","src":"1509:37:9"},"nativeSrc":"1509:37:9","nodeType":"YulExpressionStatement","src":"1509:37:9"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"1434:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1487:5:9","nodeType":"YulTypedName","src":"1487:5:9","type":""},{"name":"pos","nativeSrc":"1494:3:9","nodeType":"YulTypedName","src":"1494:3:9","type":""}],"src":"1434:118:9"},{"body":{"nativeSrc":"1656:124:9","nodeType":"YulBlock","src":"1656:124:9","statements":[{"nativeSrc":"1666:26:9","nodeType":"YulAssignment","src":"1666:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"1678:9:9","nodeType":"YulIdentifier","src":"1678:9:9"},{"kind":"number","nativeSrc":"1689:2:9","nodeType":"YulLiteral","src":"1689:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1674:3:9","nodeType":"YulIdentifier","src":"1674:3:9"},"nativeSrc":"1674:18:9","nodeType":"YulFunctionCall","src":"1674:18:9"},"variableNames":[{"name":"tail","nativeSrc":"1666:4:9","nodeType":"YulIdentifier","src":"1666:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1746:6:9","nodeType":"YulIdentifier","src":"1746:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"1759:9:9","nodeType":"YulIdentifier","src":"1759:9:9"},{"kind":"number","nativeSrc":"1770:1:9","nodeType":"YulLiteral","src":"1770:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1755:3:9","nodeType":"YulIdentifier","src":"1755:3:9"},"nativeSrc":"1755:17:9","nodeType":"YulFunctionCall","src":"1755:17:9"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"1702:43:9","nodeType":"YulIdentifier","src":"1702:43:9"},"nativeSrc":"1702:71:9","nodeType":"YulFunctionCall","src":"1702:71:9"},"nativeSrc":"1702:71:9","nodeType":"YulExpressionStatement","src":"1702:71:9"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"1558:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1628:9:9","nodeType":"YulTypedName","src":"1628:9:9","type":""},{"name":"value0","nativeSrc":"1640:6:9","nodeType":"YulTypedName","src":"1640:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1651:4:9","nodeType":"YulTypedName","src":"1651:4:9","type":""}],"src":"1558:222:9"},{"body":{"nativeSrc":"1826:35:9","nodeType":"YulBlock","src":"1826:35:9","statements":[{"nativeSrc":"1836:19:9","nodeType":"YulAssignment","src":"1836:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"1852:2:9","nodeType":"YulLiteral","src":"1852:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1846:5:9","nodeType":"YulIdentifier","src":"1846:5:9"},"nativeSrc":"1846:9:9","nodeType":"YulFunctionCall","src":"1846:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"1836:6:9","nodeType":"YulIdentifier","src":"1836:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"1786:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1819:6:9","nodeType":"YulTypedName","src":"1819:6:9","type":""}],"src":"1786:75:9"},{"body":{"nativeSrc":"1956:28:9","nodeType":"YulBlock","src":"1956:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1973:1:9","nodeType":"YulLiteral","src":"1973:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1976:1:9","nodeType":"YulLiteral","src":"1976:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1966:6:9","nodeType":"YulIdentifier","src":"1966:6:9"},"nativeSrc":"1966:12:9","nodeType":"YulFunctionCall","src":"1966:12:9"},"nativeSrc":"1966:12:9","nodeType":"YulExpressionStatement","src":"1966:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1867:117:9","nodeType":"YulFunctionDefinition","src":"1867:117:9"},{"body":{"nativeSrc":"2079:28:9","nodeType":"YulBlock","src":"2079:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2096:1:9","nodeType":"YulLiteral","src":"2096:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2099:1:9","nodeType":"YulLiteral","src":"2099:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2089:6:9","nodeType":"YulIdentifier","src":"2089:6:9"},"nativeSrc":"2089:12:9","nodeType":"YulFunctionCall","src":"2089:12:9"},"nativeSrc":"2089:12:9","nodeType":"YulExpressionStatement","src":"2089:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1990:117:9","nodeType":"YulFunctionDefinition","src":"1990:117:9"},{"body":{"nativeSrc":"2158:32:9","nodeType":"YulBlock","src":"2158:32:9","statements":[{"nativeSrc":"2168:16:9","nodeType":"YulAssignment","src":"2168:16:9","value":{"name":"value","nativeSrc":"2179:5:9","nodeType":"YulIdentifier","src":"2179:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"2168:7:9","nodeType":"YulIdentifier","src":"2168:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2113:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2140:5:9","nodeType":"YulTypedName","src":"2140:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2150:7:9","nodeType":"YulTypedName","src":"2150:7:9","type":""}],"src":"2113:77:9"},{"body":{"nativeSrc":"2239:79:9","nodeType":"YulBlock","src":"2239:79:9","statements":[{"body":{"nativeSrc":"2296:16:9","nodeType":"YulBlock","src":"2296:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2305:1:9","nodeType":"YulLiteral","src":"2305:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2308:1:9","nodeType":"YulLiteral","src":"2308:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2298:6:9","nodeType":"YulIdentifier","src":"2298:6:9"},"nativeSrc":"2298:12:9","nodeType":"YulFunctionCall","src":"2298:12:9"},"nativeSrc":"2298:12:9","nodeType":"YulExpressionStatement","src":"2298:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2262:5:9","nodeType":"YulIdentifier","src":"2262:5:9"},{"arguments":[{"name":"value","nativeSrc":"2287:5:9","nodeType":"YulIdentifier","src":"2287:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2269:17:9","nodeType":"YulIdentifier","src":"2269:17:9"},"nativeSrc":"2269:24:9","nodeType":"YulFunctionCall","src":"2269:24:9"}],"functionName":{"name":"eq","nativeSrc":"2259:2:9","nodeType":"YulIdentifier","src":"2259:2:9"},"nativeSrc":"2259:35:9","nodeType":"YulFunctionCall","src":"2259:35:9"}],"functionName":{"name":"iszero","nativeSrc":"2252:6:9","nodeType":"YulIdentifier","src":"2252:6:9"},"nativeSrc":"2252:43:9","nodeType":"YulFunctionCall","src":"2252:43:9"},"nativeSrc":"2249:63:9","nodeType":"YulIf","src":"2249:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"2196:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2232:5:9","nodeType":"YulTypedName","src":"2232:5:9","type":""}],"src":"2196:122:9"},{"body":{"nativeSrc":"2376:87:9","nodeType":"YulBlock","src":"2376:87:9","statements":[{"nativeSrc":"2386:29:9","nodeType":"YulAssignment","src":"2386:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2408:6:9","nodeType":"YulIdentifier","src":"2408:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2395:12:9","nodeType":"YulIdentifier","src":"2395:12:9"},"nativeSrc":"2395:20:9","nodeType":"YulFunctionCall","src":"2395:20:9"},"variableNames":[{"name":"value","nativeSrc":"2386:5:9","nodeType":"YulIdentifier","src":"2386:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2451:5:9","nodeType":"YulIdentifier","src":"2451:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2424:26:9","nodeType":"YulIdentifier","src":"2424:26:9"},"nativeSrc":"2424:33:9","nodeType":"YulFunctionCall","src":"2424:33:9"},"nativeSrc":"2424:33:9","nodeType":"YulExpressionStatement","src":"2424:33:9"}]},"name":"abi_decode_t_uint256","nativeSrc":"2324:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2354:6:9","nodeType":"YulTypedName","src":"2354:6:9","type":""},{"name":"end","nativeSrc":"2362:3:9","nodeType":"YulTypedName","src":"2362:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2370:5:9","nodeType":"YulTypedName","src":"2370:5:9","type":""}],"src":"2324:139:9"},{"body":{"nativeSrc":"2558:28:9","nodeType":"YulBlock","src":"2558:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2575:1:9","nodeType":"YulLiteral","src":"2575:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2578:1:9","nodeType":"YulLiteral","src":"2578:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2568:6:9","nodeType":"YulIdentifier","src":"2568:6:9"},"nativeSrc":"2568:12:9","nodeType":"YulFunctionCall","src":"2568:12:9"},"nativeSrc":"2568:12:9","nodeType":"YulExpressionStatement","src":"2568:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2469:117:9","nodeType":"YulFunctionDefinition","src":"2469:117:9"},{"body":{"nativeSrc":"2681:28:9","nodeType":"YulBlock","src":"2681:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2698:1:9","nodeType":"YulLiteral","src":"2698:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2701:1:9","nodeType":"YulLiteral","src":"2701:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2691:6:9","nodeType":"YulIdentifier","src":"2691:6:9"},"nativeSrc":"2691:12:9","nodeType":"YulFunctionCall","src":"2691:12:9"},"nativeSrc":"2691:12:9","nodeType":"YulExpressionStatement","src":"2691:12:9"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"2592:117:9","nodeType":"YulFunctionDefinition","src":"2592:117:9"},{"body":{"nativeSrc":"2804:28:9","nodeType":"YulBlock","src":"2804:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2821:1:9","nodeType":"YulLiteral","src":"2821:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2824:1:9","nodeType":"YulLiteral","src":"2824:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2814:6:9","nodeType":"YulIdentifier","src":"2814:6:9"},"nativeSrc":"2814:12:9","nodeType":"YulFunctionCall","src":"2814:12:9"},"nativeSrc":"2814:12:9","nodeType":"YulExpressionStatement","src":"2814:12:9"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2715:117:9","nodeType":"YulFunctionDefinition","src":"2715:117:9"},{"body":{"nativeSrc":"2945:478:9","nodeType":"YulBlock","src":"2945:478:9","statements":[{"body":{"nativeSrc":"2994:83:9","nodeType":"YulBlock","src":"2994:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2996:77:9","nodeType":"YulIdentifier","src":"2996:77:9"},"nativeSrc":"2996:79:9","nodeType":"YulFunctionCall","src":"2996:79:9"},"nativeSrc":"2996:79:9","nodeType":"YulExpressionStatement","src":"2996:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2973:6:9","nodeType":"YulIdentifier","src":"2973:6:9"},{"kind":"number","nativeSrc":"2981:4:9","nodeType":"YulLiteral","src":"2981:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2969:3:9","nodeType":"YulIdentifier","src":"2969:3:9"},"nativeSrc":"2969:17:9","nodeType":"YulFunctionCall","src":"2969:17:9"},{"name":"end","nativeSrc":"2988:3:9","nodeType":"YulIdentifier","src":"2988:3:9"}],"functionName":{"name":"slt","nativeSrc":"2965:3:9","nodeType":"YulIdentifier","src":"2965:3:9"},"nativeSrc":"2965:27:9","nodeType":"YulFunctionCall","src":"2965:27:9"}],"functionName":{"name":"iszero","nativeSrc":"2958:6:9","nodeType":"YulIdentifier","src":"2958:6:9"},"nativeSrc":"2958:35:9","nodeType":"YulFunctionCall","src":"2958:35:9"},"nativeSrc":"2955:122:9","nodeType":"YulIf","src":"2955:122:9"},{"nativeSrc":"3086:30:9","nodeType":"YulAssignment","src":"3086:30:9","value":{"arguments":[{"name":"offset","nativeSrc":"3109:6:9","nodeType":"YulIdentifier","src":"3109:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"3096:12:9","nodeType":"YulIdentifier","src":"3096:12:9"},"nativeSrc":"3096:20:9","nodeType":"YulFunctionCall","src":"3096:20:9"},"variableNames":[{"name":"length","nativeSrc":"3086:6:9","nodeType":"YulIdentifier","src":"3086:6:9"}]},{"body":{"nativeSrc":"3159:83:9","nodeType":"YulBlock","src":"3159:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"3161:77:9","nodeType":"YulIdentifier","src":"3161:77:9"},"nativeSrc":"3161:79:9","nodeType":"YulFunctionCall","src":"3161:79:9"},"nativeSrc":"3161:79:9","nodeType":"YulExpressionStatement","src":"3161:79:9"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3131:6:9","nodeType":"YulIdentifier","src":"3131:6:9"},{"kind":"number","nativeSrc":"3139:18:9","nodeType":"YulLiteral","src":"3139:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3128:2:9","nodeType":"YulIdentifier","src":"3128:2:9"},"nativeSrc":"3128:30:9","nodeType":"YulFunctionCall","src":"3128:30:9"},"nativeSrc":"3125:117:9","nodeType":"YulIf","src":"3125:117:9"},{"nativeSrc":"3251:29:9","nodeType":"YulAssignment","src":"3251:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"3267:6:9","nodeType":"YulIdentifier","src":"3267:6:9"},{"kind":"number","nativeSrc":"3275:4:9","nodeType":"YulLiteral","src":"3275:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3263:3:9","nodeType":"YulIdentifier","src":"3263:3:9"},"nativeSrc":"3263:17:9","nodeType":"YulFunctionCall","src":"3263:17:9"},"variableNames":[{"name":"arrayPos","nativeSrc":"3251:8:9","nodeType":"YulIdentifier","src":"3251:8:9"}]},{"body":{"nativeSrc":"3334:83:9","nodeType":"YulBlock","src":"3334:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"3336:77:9","nodeType":"YulIdentifier","src":"3336:77:9"},"nativeSrc":"3336:79:9","nodeType":"YulFunctionCall","src":"3336:79:9"},"nativeSrc":"3336:79:9","nodeType":"YulExpressionStatement","src":"3336:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"3299:8:9","nodeType":"YulIdentifier","src":"3299:8:9"},{"arguments":[{"name":"length","nativeSrc":"3313:6:9","nodeType":"YulIdentifier","src":"3313:6:9"},{"kind":"number","nativeSrc":"3321:4:9","nodeType":"YulLiteral","src":"3321:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"3309:3:9","nodeType":"YulIdentifier","src":"3309:3:9"},"nativeSrc":"3309:17:9","nodeType":"YulFunctionCall","src":"3309:17:9"}],"functionName":{"name":"add","nativeSrc":"3295:3:9","nodeType":"YulIdentifier","src":"3295:3:9"},"nativeSrc":"3295:32:9","nodeType":"YulFunctionCall","src":"3295:32:9"},{"name":"end","nativeSrc":"3329:3:9","nodeType":"YulIdentifier","src":"3329:3:9"}],"functionName":{"name":"gt","nativeSrc":"3292:2:9","nodeType":"YulIdentifier","src":"3292:2:9"},"nativeSrc":"3292:41:9","nodeType":"YulFunctionCall","src":"3292:41:9"},"nativeSrc":"3289:128:9","nodeType":"YulIf","src":"3289:128:9"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"2855:568:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2912:6:9","nodeType":"YulTypedName","src":"2912:6:9","type":""},{"name":"end","nativeSrc":"2920:3:9","nodeType":"YulTypedName","src":"2920:3:9","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"2928:8:9","nodeType":"YulTypedName","src":"2928:8:9","type":""},{"name":"length","nativeSrc":"2938:6:9","nodeType":"YulTypedName","src":"2938:6:9","type":""}],"src":"2855:568:9"},{"body":{"nativeSrc":"3547:586:9","nodeType":"YulBlock","src":"3547:586:9","statements":[{"body":{"nativeSrc":"3593:83:9","nodeType":"YulBlock","src":"3593:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3595:77:9","nodeType":"YulIdentifier","src":"3595:77:9"},"nativeSrc":"3595:79:9","nodeType":"YulFunctionCall","src":"3595:79:9"},"nativeSrc":"3595:79:9","nodeType":"YulExpressionStatement","src":"3595:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3568:7:9","nodeType":"YulIdentifier","src":"3568:7:9"},{"name":"headStart","nativeSrc":"3577:9:9","nodeType":"YulIdentifier","src":"3577:9:9"}],"functionName":{"name":"sub","nativeSrc":"3564:3:9","nodeType":"YulIdentifier","src":"3564:3:9"},"nativeSrc":"3564:23:9","nodeType":"YulFunctionCall","src":"3564:23:9"},{"kind":"number","nativeSrc":"3589:2:9","nodeType":"YulLiteral","src":"3589:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3560:3:9","nodeType":"YulIdentifier","src":"3560:3:9"},"nativeSrc":"3560:32:9","nodeType":"YulFunctionCall","src":"3560:32:9"},"nativeSrc":"3557:119:9","nodeType":"YulIf","src":"3557:119:9"},{"nativeSrc":"3686:117:9","nodeType":"YulBlock","src":"3686:117:9","statements":[{"nativeSrc":"3701:15:9","nodeType":"YulVariableDeclaration","src":"3701:15:9","value":{"kind":"number","nativeSrc":"3715:1:9","nodeType":"YulLiteral","src":"3715:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3705:6:9","nodeType":"YulTypedName","src":"3705:6:9","type":""}]},{"nativeSrc":"3730:63:9","nodeType":"YulAssignment","src":"3730:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3765:9:9","nodeType":"YulIdentifier","src":"3765:9:9"},{"name":"offset","nativeSrc":"3776:6:9","nodeType":"YulIdentifier","src":"3776:6:9"}],"functionName":{"name":"add","nativeSrc":"3761:3:9","nodeType":"YulIdentifier","src":"3761:3:9"},"nativeSrc":"3761:22:9","nodeType":"YulFunctionCall","src":"3761:22:9"},{"name":"dataEnd","nativeSrc":"3785:7:9","nodeType":"YulIdentifier","src":"3785:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3740:20:9","nodeType":"YulIdentifier","src":"3740:20:9"},"nativeSrc":"3740:53:9","nodeType":"YulFunctionCall","src":"3740:53:9"},"variableNames":[{"name":"value0","nativeSrc":"3730:6:9","nodeType":"YulIdentifier","src":"3730:6:9"}]}]},{"nativeSrc":"3813:313:9","nodeType":"YulBlock","src":"3813:313:9","statements":[{"nativeSrc":"3828:46:9","nodeType":"YulVariableDeclaration","src":"3828:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3859:9:9","nodeType":"YulIdentifier","src":"3859:9:9"},{"kind":"number","nativeSrc":"3870:2:9","nodeType":"YulLiteral","src":"3870:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3855:3:9","nodeType":"YulIdentifier","src":"3855:3:9"},"nativeSrc":"3855:18:9","nodeType":"YulFunctionCall","src":"3855:18:9"}],"functionName":{"name":"calldataload","nativeSrc":"3842:12:9","nodeType":"YulIdentifier","src":"3842:12:9"},"nativeSrc":"3842:32:9","nodeType":"YulFunctionCall","src":"3842:32:9"},"variables":[{"name":"offset","nativeSrc":"3832:6:9","nodeType":"YulTypedName","src":"3832:6:9","type":""}]},{"body":{"nativeSrc":"3921:83:9","nodeType":"YulBlock","src":"3921:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3923:77:9","nodeType":"YulIdentifier","src":"3923:77:9"},"nativeSrc":"3923:79:9","nodeType":"YulFunctionCall","src":"3923:79:9"},"nativeSrc":"3923:79:9","nodeType":"YulExpressionStatement","src":"3923:79:9"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3893:6:9","nodeType":"YulIdentifier","src":"3893:6:9"},{"kind":"number","nativeSrc":"3901:18:9","nodeType":"YulLiteral","src":"3901:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3890:2:9","nodeType":"YulIdentifier","src":"3890:2:9"},"nativeSrc":"3890:30:9","nodeType":"YulFunctionCall","src":"3890:30:9"},"nativeSrc":"3887:117:9","nodeType":"YulIf","src":"3887:117:9"},{"nativeSrc":"4018:98:9","nodeType":"YulAssignment","src":"4018:98:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4088:9:9","nodeType":"YulIdentifier","src":"4088:9:9"},{"name":"offset","nativeSrc":"4099:6:9","nodeType":"YulIdentifier","src":"4099:6:9"}],"functionName":{"name":"add","nativeSrc":"4084:3:9","nodeType":"YulIdentifier","src":"4084:3:9"},"nativeSrc":"4084:22:9","nodeType":"YulFunctionCall","src":"4084:22:9"},{"name":"dataEnd","nativeSrc":"4108:7:9","nodeType":"YulIdentifier","src":"4108:7:9"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"4036:47:9","nodeType":"YulIdentifier","src":"4036:47:9"},"nativeSrc":"4036:80:9","nodeType":"YulFunctionCall","src":"4036:80:9"},"variableNames":[{"name":"value1","nativeSrc":"4018:6:9","nodeType":"YulIdentifier","src":"4018:6:9"},{"name":"value2","nativeSrc":"4026:6:9","nodeType":"YulIdentifier","src":"4026:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"3429:704:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3501:9:9","nodeType":"YulTypedName","src":"3501:9:9","type":""},{"name":"dataEnd","nativeSrc":"3512:7:9","nodeType":"YulTypedName","src":"3512:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3524:6:9","nodeType":"YulTypedName","src":"3524:6:9","type":""},{"name":"value1","nativeSrc":"3532:6:9","nodeType":"YulTypedName","src":"3532:6:9","type":""},{"name":"value2","nativeSrc":"3540:6:9","nodeType":"YulTypedName","src":"3540:6:9","type":""}],"src":"3429:704:9"},{"body":{"nativeSrc":"4204:53:9","nodeType":"YulBlock","src":"4204:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4221:3:9","nodeType":"YulIdentifier","src":"4221:3:9"},{"arguments":[{"name":"value","nativeSrc":"4244:5:9","nodeType":"YulIdentifier","src":"4244:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4226:17:9","nodeType":"YulIdentifier","src":"4226:17:9"},"nativeSrc":"4226:24:9","nodeType":"YulFunctionCall","src":"4226:24:9"}],"functionName":{"name":"mstore","nativeSrc":"4214:6:9","nodeType":"YulIdentifier","src":"4214:6:9"},"nativeSrc":"4214:37:9","nodeType":"YulFunctionCall","src":"4214:37:9"},"nativeSrc":"4214:37:9","nodeType":"YulExpressionStatement","src":"4214:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4139:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4192:5:9","nodeType":"YulTypedName","src":"4192:5:9","type":""},{"name":"pos","nativeSrc":"4199:3:9","nodeType":"YulTypedName","src":"4199:3:9","type":""}],"src":"4139:118:9"},{"body":{"nativeSrc":"4361:124:9","nodeType":"YulBlock","src":"4361:124:9","statements":[{"nativeSrc":"4371:26:9","nodeType":"YulAssignment","src":"4371:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"4383:9:9","nodeType":"YulIdentifier","src":"4383:9:9"},{"kind":"number","nativeSrc":"4394:2:9","nodeType":"YulLiteral","src":"4394:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4379:3:9","nodeType":"YulIdentifier","src":"4379:3:9"},"nativeSrc":"4379:18:9","nodeType":"YulFunctionCall","src":"4379:18:9"},"variableNames":[{"name":"tail","nativeSrc":"4371:4:9","nodeType":"YulIdentifier","src":"4371:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4451:6:9","nodeType":"YulIdentifier","src":"4451:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"4464:9:9","nodeType":"YulIdentifier","src":"4464:9:9"},{"kind":"number","nativeSrc":"4475:1:9","nodeType":"YulLiteral","src":"4475:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4460:3:9","nodeType":"YulIdentifier","src":"4460:3:9"},"nativeSrc":"4460:17:9","nodeType":"YulFunctionCall","src":"4460:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4407:43:9","nodeType":"YulIdentifier","src":"4407:43:9"},"nativeSrc":"4407:71:9","nodeType":"YulFunctionCall","src":"4407:71:9"},"nativeSrc":"4407:71:9","nodeType":"YulExpressionStatement","src":"4407:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4263:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4333:9:9","nodeType":"YulTypedName","src":"4333:9:9","type":""},{"name":"value0","nativeSrc":"4345:6:9","nodeType":"YulTypedName","src":"4345:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4356:4:9","nodeType":"YulTypedName","src":"4356:4:9","type":""}],"src":"4263:222:9"},{"body":{"nativeSrc":"4536:81:9","nodeType":"YulBlock","src":"4536:81:9","statements":[{"nativeSrc":"4546:65:9","nodeType":"YulAssignment","src":"4546:65:9","value":{"arguments":[{"name":"value","nativeSrc":"4561:5:9","nodeType":"YulIdentifier","src":"4561:5:9"},{"kind":"number","nativeSrc":"4568:42:9","nodeType":"YulLiteral","src":"4568:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4557:3:9","nodeType":"YulIdentifier","src":"4557:3:9"},"nativeSrc":"4557:54:9","nodeType":"YulFunctionCall","src":"4557:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"4546:7:9","nodeType":"YulIdentifier","src":"4546:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"4491:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4518:5:9","nodeType":"YulTypedName","src":"4518:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4528:7:9","nodeType":"YulTypedName","src":"4528:7:9","type":""}],"src":"4491:126:9"},{"body":{"nativeSrc":"4668:51:9","nodeType":"YulBlock","src":"4668:51:9","statements":[{"nativeSrc":"4678:35:9","nodeType":"YulAssignment","src":"4678:35:9","value":{"arguments":[{"name":"value","nativeSrc":"4707:5:9","nodeType":"YulIdentifier","src":"4707:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"4689:17:9","nodeType":"YulIdentifier","src":"4689:17:9"},"nativeSrc":"4689:24:9","nodeType":"YulFunctionCall","src":"4689:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"4678:7:9","nodeType":"YulIdentifier","src":"4678:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"4623:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4650:5:9","nodeType":"YulTypedName","src":"4650:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4660:7:9","nodeType":"YulTypedName","src":"4660:7:9","type":""}],"src":"4623:96:9"},{"body":{"nativeSrc":"4768:79:9","nodeType":"YulBlock","src":"4768:79:9","statements":[{"body":{"nativeSrc":"4825:16:9","nodeType":"YulBlock","src":"4825:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4834:1:9","nodeType":"YulLiteral","src":"4834:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"4837:1:9","nodeType":"YulLiteral","src":"4837:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4827:6:9","nodeType":"YulIdentifier","src":"4827:6:9"},"nativeSrc":"4827:12:9","nodeType":"YulFunctionCall","src":"4827:12:9"},"nativeSrc":"4827:12:9","nodeType":"YulExpressionStatement","src":"4827:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4791:5:9","nodeType":"YulIdentifier","src":"4791:5:9"},{"arguments":[{"name":"value","nativeSrc":"4816:5:9","nodeType":"YulIdentifier","src":"4816:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4798:17:9","nodeType":"YulIdentifier","src":"4798:17:9"},"nativeSrc":"4798:24:9","nodeType":"YulFunctionCall","src":"4798:24:9"}],"functionName":{"name":"eq","nativeSrc":"4788:2:9","nodeType":"YulIdentifier","src":"4788:2:9"},"nativeSrc":"4788:35:9","nodeType":"YulFunctionCall","src":"4788:35:9"}],"functionName":{"name":"iszero","nativeSrc":"4781:6:9","nodeType":"YulIdentifier","src":"4781:6:9"},"nativeSrc":"4781:43:9","nodeType":"YulFunctionCall","src":"4781:43:9"},"nativeSrc":"4778:63:9","nodeType":"YulIf","src":"4778:63:9"}]},"name":"validator_revert_t_address","nativeSrc":"4725:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4761:5:9","nodeType":"YulTypedName","src":"4761:5:9","type":""}],"src":"4725:122:9"},{"body":{"nativeSrc":"4905:87:9","nodeType":"YulBlock","src":"4905:87:9","statements":[{"nativeSrc":"4915:29:9","nodeType":"YulAssignment","src":"4915:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"4937:6:9","nodeType":"YulIdentifier","src":"4937:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"4924:12:9","nodeType":"YulIdentifier","src":"4924:12:9"},"nativeSrc":"4924:20:9","nodeType":"YulFunctionCall","src":"4924:20:9"},"variableNames":[{"name":"value","nativeSrc":"4915:5:9","nodeType":"YulIdentifier","src":"4915:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4980:5:9","nodeType":"YulIdentifier","src":"4980:5:9"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4953:26:9","nodeType":"YulIdentifier","src":"4953:26:9"},"nativeSrc":"4953:33:9","nodeType":"YulFunctionCall","src":"4953:33:9"},"nativeSrc":"4953:33:9","nodeType":"YulExpressionStatement","src":"4953:33:9"}]},"name":"abi_decode_t_address","nativeSrc":"4853:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4883:6:9","nodeType":"YulTypedName","src":"4883:6:9","type":""},{"name":"end","nativeSrc":"4891:3:9","nodeType":"YulTypedName","src":"4891:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4899:5:9","nodeType":"YulTypedName","src":"4899:5:9","type":""}],"src":"4853:139:9"},{"body":{"nativeSrc":"5064:263:9","nodeType":"YulBlock","src":"5064:263:9","statements":[{"body":{"nativeSrc":"5110:83:9","nodeType":"YulBlock","src":"5110:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5112:77:9","nodeType":"YulIdentifier","src":"5112:77:9"},"nativeSrc":"5112:79:9","nodeType":"YulFunctionCall","src":"5112:79:9"},"nativeSrc":"5112:79:9","nodeType":"YulExpressionStatement","src":"5112:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5085:7:9","nodeType":"YulIdentifier","src":"5085:7:9"},{"name":"headStart","nativeSrc":"5094:9:9","nodeType":"YulIdentifier","src":"5094:9:9"}],"functionName":{"name":"sub","nativeSrc":"5081:3:9","nodeType":"YulIdentifier","src":"5081:3:9"},"nativeSrc":"5081:23:9","nodeType":"YulFunctionCall","src":"5081:23:9"},{"kind":"number","nativeSrc":"5106:2:9","nodeType":"YulLiteral","src":"5106:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5077:3:9","nodeType":"YulIdentifier","src":"5077:3:9"},"nativeSrc":"5077:32:9","nodeType":"YulFunctionCall","src":"5077:32:9"},"nativeSrc":"5074:119:9","nodeType":"YulIf","src":"5074:119:9"},{"nativeSrc":"5203:117:9","nodeType":"YulBlock","src":"5203:117:9","statements":[{"nativeSrc":"5218:15:9","nodeType":"YulVariableDeclaration","src":"5218:15:9","value":{"kind":"number","nativeSrc":"5232:1:9","nodeType":"YulLiteral","src":"5232:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5222:6:9","nodeType":"YulTypedName","src":"5222:6:9","type":""}]},{"nativeSrc":"5247:63:9","nodeType":"YulAssignment","src":"5247:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5282:9:9","nodeType":"YulIdentifier","src":"5282:9:9"},{"name":"offset","nativeSrc":"5293:6:9","nodeType":"YulIdentifier","src":"5293:6:9"}],"functionName":{"name":"add","nativeSrc":"5278:3:9","nodeType":"YulIdentifier","src":"5278:3:9"},"nativeSrc":"5278:22:9","nodeType":"YulFunctionCall","src":"5278:22:9"},{"name":"dataEnd","nativeSrc":"5302:7:9","nodeType":"YulIdentifier","src":"5302:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5257:20:9","nodeType":"YulIdentifier","src":"5257:20:9"},"nativeSrc":"5257:53:9","nodeType":"YulFunctionCall","src":"5257:53:9"},"variableNames":[{"name":"value0","nativeSrc":"5247:6:9","nodeType":"YulIdentifier","src":"5247:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4998:329:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5034:9:9","nodeType":"YulTypedName","src":"5034:9:9","type":""},{"name":"dataEnd","nativeSrc":"5045:7:9","nodeType":"YulTypedName","src":"5045:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5057:6:9","nodeType":"YulTypedName","src":"5057:6:9","type":""}],"src":"4998:329:9"},{"body":{"nativeSrc":"5375:48:9","nodeType":"YulBlock","src":"5375:48:9","statements":[{"nativeSrc":"5385:32:9","nodeType":"YulAssignment","src":"5385:32:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5410:5:9","nodeType":"YulIdentifier","src":"5410:5:9"}],"functionName":{"name":"iszero","nativeSrc":"5403:6:9","nodeType":"YulIdentifier","src":"5403:6:9"},"nativeSrc":"5403:13:9","nodeType":"YulFunctionCall","src":"5403:13:9"}],"functionName":{"name":"iszero","nativeSrc":"5396:6:9","nodeType":"YulIdentifier","src":"5396:6:9"},"nativeSrc":"5396:21:9","nodeType":"YulFunctionCall","src":"5396:21:9"},"variableNames":[{"name":"cleaned","nativeSrc":"5385:7:9","nodeType":"YulIdentifier","src":"5385:7:9"}]}]},"name":"cleanup_t_bool","nativeSrc":"5333:90:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5357:5:9","nodeType":"YulTypedName","src":"5357:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5367:7:9","nodeType":"YulTypedName","src":"5367:7:9","type":""}],"src":"5333:90:9"},{"body":{"nativeSrc":"5488:50:9","nodeType":"YulBlock","src":"5488:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5505:3:9","nodeType":"YulIdentifier","src":"5505:3:9"},{"arguments":[{"name":"value","nativeSrc":"5525:5:9","nodeType":"YulIdentifier","src":"5525:5:9"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"5510:14:9","nodeType":"YulIdentifier","src":"5510:14:9"},"nativeSrc":"5510:21:9","nodeType":"YulFunctionCall","src":"5510:21:9"}],"functionName":{"name":"mstore","nativeSrc":"5498:6:9","nodeType":"YulIdentifier","src":"5498:6:9"},"nativeSrc":"5498:34:9","nodeType":"YulFunctionCall","src":"5498:34:9"},"nativeSrc":"5498:34:9","nodeType":"YulExpressionStatement","src":"5498:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"5429:109:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5476:5:9","nodeType":"YulTypedName","src":"5476:5:9","type":""},{"name":"pos","nativeSrc":"5483:3:9","nodeType":"YulTypedName","src":"5483:3:9","type":""}],"src":"5429:109:9"},{"body":{"nativeSrc":"5636:118:9","nodeType":"YulBlock","src":"5636:118:9","statements":[{"nativeSrc":"5646:26:9","nodeType":"YulAssignment","src":"5646:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"5658:9:9","nodeType":"YulIdentifier","src":"5658:9:9"},{"kind":"number","nativeSrc":"5669:2:9","nodeType":"YulLiteral","src":"5669:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5654:3:9","nodeType":"YulIdentifier","src":"5654:3:9"},"nativeSrc":"5654:18:9","nodeType":"YulFunctionCall","src":"5654:18:9"},"variableNames":[{"name":"tail","nativeSrc":"5646:4:9","nodeType":"YulIdentifier","src":"5646:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5720:6:9","nodeType":"YulIdentifier","src":"5720:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"5733:9:9","nodeType":"YulIdentifier","src":"5733:9:9"},{"kind":"number","nativeSrc":"5744:1:9","nodeType":"YulLiteral","src":"5744:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5729:3:9","nodeType":"YulIdentifier","src":"5729:3:9"},"nativeSrc":"5729:17:9","nodeType":"YulFunctionCall","src":"5729:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"5682:37:9","nodeType":"YulIdentifier","src":"5682:37:9"},"nativeSrc":"5682:65:9","nodeType":"YulFunctionCall","src":"5682:65:9"},"nativeSrc":"5682:65:9","nodeType":"YulExpressionStatement","src":"5682:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"5544:210:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5608:9:9","nodeType":"YulTypedName","src":"5608:9:9","type":""},{"name":"value0","nativeSrc":"5620:6:9","nodeType":"YulTypedName","src":"5620:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5631:4:9","nodeType":"YulTypedName","src":"5631:4:9","type":""}],"src":"5544:210:9"},{"body":{"nativeSrc":"5792:28:9","nodeType":"YulBlock","src":"5792:28:9","statements":[{"nativeSrc":"5802:12:9","nodeType":"YulAssignment","src":"5802:12:9","value":{"name":"value","nativeSrc":"5809:5:9","nodeType":"YulIdentifier","src":"5809:5:9"},"variableNames":[{"name":"ret","nativeSrc":"5802:3:9","nodeType":"YulIdentifier","src":"5802:3:9"}]}]},"name":"identity","nativeSrc":"5760:60:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5778:5:9","nodeType":"YulTypedName","src":"5778:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5788:3:9","nodeType":"YulTypedName","src":"5788:3:9","type":""}],"src":"5760:60:9"},{"body":{"nativeSrc":"5886:82:9","nodeType":"YulBlock","src":"5886:82:9","statements":[{"nativeSrc":"5896:66:9","nodeType":"YulAssignment","src":"5896:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5954:5:9","nodeType":"YulIdentifier","src":"5954:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5936:17:9","nodeType":"YulIdentifier","src":"5936:17:9"},"nativeSrc":"5936:24:9","nodeType":"YulFunctionCall","src":"5936:24:9"}],"functionName":{"name":"identity","nativeSrc":"5927:8:9","nodeType":"YulIdentifier","src":"5927:8:9"},"nativeSrc":"5927:34:9","nodeType":"YulFunctionCall","src":"5927:34:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5909:17:9","nodeType":"YulIdentifier","src":"5909:17:9"},"nativeSrc":"5909:53:9","nodeType":"YulFunctionCall","src":"5909:53:9"},"variableNames":[{"name":"converted","nativeSrc":"5896:9:9","nodeType":"YulIdentifier","src":"5896:9:9"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"5826:142:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5866:5:9","nodeType":"YulTypedName","src":"5866:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5876:9:9","nodeType":"YulTypedName","src":"5876:9:9","type":""}],"src":"5826:142:9"},{"body":{"nativeSrc":"6034:66:9","nodeType":"YulBlock","src":"6034:66:9","statements":[{"nativeSrc":"6044:50:9","nodeType":"YulAssignment","src":"6044:50:9","value":{"arguments":[{"name":"value","nativeSrc":"6088:5:9","nodeType":"YulIdentifier","src":"6088:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"6057:30:9","nodeType":"YulIdentifier","src":"6057:30:9"},"nativeSrc":"6057:37:9","nodeType":"YulFunctionCall","src":"6057:37:9"},"variableNames":[{"name":"converted","nativeSrc":"6044:9:9","nodeType":"YulIdentifier","src":"6044:9:9"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"5974:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6014:5:9","nodeType":"YulTypedName","src":"6014:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6024:9:9","nodeType":"YulTypedName","src":"6024:9:9","type":""}],"src":"5974:126:9"},{"body":{"nativeSrc":"6185:66:9","nodeType":"YulBlock","src":"6185:66:9","statements":[{"nativeSrc":"6195:50:9","nodeType":"YulAssignment","src":"6195:50:9","value":{"arguments":[{"name":"value","nativeSrc":"6239:5:9","nodeType":"YulIdentifier","src":"6239:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"6208:30:9","nodeType":"YulIdentifier","src":"6208:30:9"},"nativeSrc":"6208:37:9","nodeType":"YulFunctionCall","src":"6208:37:9"},"variableNames":[{"name":"converted","nativeSrc":"6195:9:9","nodeType":"YulIdentifier","src":"6195:9:9"}]}]},"name":"convert_t_contract$_ERC20Token_$2093_to_t_address","nativeSrc":"6106:145:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6165:5:9","nodeType":"YulTypedName","src":"6165:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6175:9:9","nodeType":"YulTypedName","src":"6175:9:9","type":""}],"src":"6106:145:9"},{"body":{"nativeSrc":"6341:85:9","nodeType":"YulBlock","src":"6341:85:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6358:3:9","nodeType":"YulIdentifier","src":"6358:3:9"},{"arguments":[{"name":"value","nativeSrc":"6413:5:9","nodeType":"YulIdentifier","src":"6413:5:9"}],"functionName":{"name":"convert_t_contract$_ERC20Token_$2093_to_t_address","nativeSrc":"6363:49:9","nodeType":"YulIdentifier","src":"6363:49:9"},"nativeSrc":"6363:56:9","nodeType":"YulFunctionCall","src":"6363:56:9"}],"functionName":{"name":"mstore","nativeSrc":"6351:6:9","nodeType":"YulIdentifier","src":"6351:6:9"},"nativeSrc":"6351:69:9","nodeType":"YulFunctionCall","src":"6351:69:9"},"nativeSrc":"6351:69:9","nodeType":"YulExpressionStatement","src":"6351:69:9"}]},"name":"abi_encode_t_contract$_ERC20Token_$2093_to_t_address_fromStack","nativeSrc":"6257:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6329:5:9","nodeType":"YulTypedName","src":"6329:5:9","type":""},{"name":"pos","nativeSrc":"6336:3:9","nodeType":"YulTypedName","src":"6336:3:9","type":""}],"src":"6257:169:9"},{"body":{"nativeSrc":"6549:143:9","nodeType":"YulBlock","src":"6549:143:9","statements":[{"nativeSrc":"6559:26:9","nodeType":"YulAssignment","src":"6559:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"6571:9:9","nodeType":"YulIdentifier","src":"6571:9:9"},{"kind":"number","nativeSrc":"6582:2:9","nodeType":"YulLiteral","src":"6582:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6567:3:9","nodeType":"YulIdentifier","src":"6567:3:9"},"nativeSrc":"6567:18:9","nodeType":"YulFunctionCall","src":"6567:18:9"},"variableNames":[{"name":"tail","nativeSrc":"6559:4:9","nodeType":"YulIdentifier","src":"6559:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6658:6:9","nodeType":"YulIdentifier","src":"6658:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6671:9:9","nodeType":"YulIdentifier","src":"6671:9:9"},{"kind":"number","nativeSrc":"6682:1:9","nodeType":"YulLiteral","src":"6682:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6667:3:9","nodeType":"YulIdentifier","src":"6667:3:9"},"nativeSrc":"6667:17:9","nodeType":"YulFunctionCall","src":"6667:17:9"}],"functionName":{"name":"abi_encode_t_contract$_ERC20Token_$2093_to_t_address_fromStack","nativeSrc":"6595:62:9","nodeType":"YulIdentifier","src":"6595:62:9"},"nativeSrc":"6595:90:9","nodeType":"YulFunctionCall","src":"6595:90:9"},"nativeSrc":"6595:90:9","nodeType":"YulExpressionStatement","src":"6595:90:9"}]},"name":"abi_encode_tuple_t_contract$_ERC20Token_$2093__to_t_address__fromStack_reversed","nativeSrc":"6432:260:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6521:9:9","nodeType":"YulTypedName","src":"6521:9:9","type":""},{"name":"value0","nativeSrc":"6533:6:9","nodeType":"YulTypedName","src":"6533:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6544:4:9","nodeType":"YulTypedName","src":"6544:4:9","type":""}],"src":"6432:260:9"},{"body":{"nativeSrc":"6726:152:9","nodeType":"YulBlock","src":"6726:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6743:1:9","nodeType":"YulLiteral","src":"6743:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6746:77:9","nodeType":"YulLiteral","src":"6746:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6736:6:9","nodeType":"YulIdentifier","src":"6736:6:9"},"nativeSrc":"6736:88:9","nodeType":"YulFunctionCall","src":"6736:88:9"},"nativeSrc":"6736:88:9","nodeType":"YulExpressionStatement","src":"6736:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6840:1:9","nodeType":"YulLiteral","src":"6840:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"6843:4:9","nodeType":"YulLiteral","src":"6843:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6833:6:9","nodeType":"YulIdentifier","src":"6833:6:9"},"nativeSrc":"6833:15:9","nodeType":"YulFunctionCall","src":"6833:15:9"},"nativeSrc":"6833:15:9","nodeType":"YulExpressionStatement","src":"6833:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6864:1:9","nodeType":"YulLiteral","src":"6864:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6867:4:9","nodeType":"YulLiteral","src":"6867:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6857:6:9","nodeType":"YulIdentifier","src":"6857:6:9"},"nativeSrc":"6857:15:9","nodeType":"YulFunctionCall","src":"6857:15:9"},"nativeSrc":"6857:15:9","nodeType":"YulExpressionStatement","src":"6857:15:9"}]},"name":"panic_error_0x22","nativeSrc":"6698:180:9","nodeType":"YulFunctionDefinition","src":"6698:180:9"},{"body":{"nativeSrc":"6935:269:9","nodeType":"YulBlock","src":"6935:269:9","statements":[{"nativeSrc":"6945:22:9","nodeType":"YulAssignment","src":"6945:22:9","value":{"arguments":[{"name":"data","nativeSrc":"6959:4:9","nodeType":"YulIdentifier","src":"6959:4:9"},{"kind":"number","nativeSrc":"6965:1:9","nodeType":"YulLiteral","src":"6965:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6955:3:9","nodeType":"YulIdentifier","src":"6955:3:9"},"nativeSrc":"6955:12:9","nodeType":"YulFunctionCall","src":"6955:12:9"},"variableNames":[{"name":"length","nativeSrc":"6945:6:9","nodeType":"YulIdentifier","src":"6945:6:9"}]},{"nativeSrc":"6976:38:9","nodeType":"YulVariableDeclaration","src":"6976:38:9","value":{"arguments":[{"name":"data","nativeSrc":"7006:4:9","nodeType":"YulIdentifier","src":"7006:4:9"},{"kind":"number","nativeSrc":"7012:1:9","nodeType":"YulLiteral","src":"7012:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7002:3:9","nodeType":"YulIdentifier","src":"7002:3:9"},"nativeSrc":"7002:12:9","nodeType":"YulFunctionCall","src":"7002:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6980:18:9","nodeType":"YulTypedName","src":"6980:18:9","type":""}]},{"body":{"nativeSrc":"7053:51:9","nodeType":"YulBlock","src":"7053:51:9","statements":[{"nativeSrc":"7067:27:9","nodeType":"YulAssignment","src":"7067:27:9","value":{"arguments":[{"name":"length","nativeSrc":"7081:6:9","nodeType":"YulIdentifier","src":"7081:6:9"},{"kind":"number","nativeSrc":"7089:4:9","nodeType":"YulLiteral","src":"7089:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"7077:3:9","nodeType":"YulIdentifier","src":"7077:3:9"},"nativeSrc":"7077:17:9","nodeType":"YulFunctionCall","src":"7077:17:9"},"variableNames":[{"name":"length","nativeSrc":"7067:6:9","nodeType":"YulIdentifier","src":"7067:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7033:18:9","nodeType":"YulIdentifier","src":"7033:18:9"}],"functionName":{"name":"iszero","nativeSrc":"7026:6:9","nodeType":"YulIdentifier","src":"7026:6:9"},"nativeSrc":"7026:26:9","nodeType":"YulFunctionCall","src":"7026:26:9"},"nativeSrc":"7023:81:9","nodeType":"YulIf","src":"7023:81:9"},{"body":{"nativeSrc":"7156:42:9","nodeType":"YulBlock","src":"7156:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"7170:16:9","nodeType":"YulIdentifier","src":"7170:16:9"},"nativeSrc":"7170:18:9","nodeType":"YulFunctionCall","src":"7170:18:9"},"nativeSrc":"7170:18:9","nodeType":"YulExpressionStatement","src":"7170:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7120:18:9","nodeType":"YulIdentifier","src":"7120:18:9"},{"arguments":[{"name":"length","nativeSrc":"7143:6:9","nodeType":"YulIdentifier","src":"7143:6:9"},{"kind":"number","nativeSrc":"7151:2:9","nodeType":"YulLiteral","src":"7151:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7140:2:9","nodeType":"YulIdentifier","src":"7140:2:9"},"nativeSrc":"7140:14:9","nodeType":"YulFunctionCall","src":"7140:14:9"}],"functionName":{"name":"eq","nativeSrc":"7117:2:9","nodeType":"YulIdentifier","src":"7117:2:9"},"nativeSrc":"7117:38:9","nodeType":"YulFunctionCall","src":"7117:38:9"},"nativeSrc":"7114:84:9","nodeType":"YulIf","src":"7114:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"6884:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6919:4:9","nodeType":"YulTypedName","src":"6919:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6928:6:9","nodeType":"YulTypedName","src":"6928:6:9","type":""}],"src":"6884:320:9"},{"body":{"nativeSrc":"7316:59:9","nodeType":"YulBlock","src":"7316:59:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7338:6:9","nodeType":"YulIdentifier","src":"7338:6:9"},{"kind":"number","nativeSrc":"7346:1:9","nodeType":"YulLiteral","src":"7346:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7334:3:9","nodeType":"YulIdentifier","src":"7334:3:9"},"nativeSrc":"7334:14:9","nodeType":"YulFunctionCall","src":"7334:14:9"},{"hexValue":"414c52454144595f434c41494d4544","kind":"string","nativeSrc":"7350:17:9","nodeType":"YulLiteral","src":"7350:17:9","type":"","value":"ALREADY_CLAIMED"}],"functionName":{"name":"mstore","nativeSrc":"7327:6:9","nodeType":"YulIdentifier","src":"7327:6:9"},"nativeSrc":"7327:41:9","nodeType":"YulFunctionCall","src":"7327:41:9"},"nativeSrc":"7327:41:9","nodeType":"YulExpressionStatement","src":"7327:41:9"}]},"name":"store_literal_in_memory_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861","nativeSrc":"7210:165:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7308:6:9","nodeType":"YulTypedName","src":"7308:6:9","type":""}],"src":"7210:165:9"},{"body":{"nativeSrc":"7527:220:9","nodeType":"YulBlock","src":"7527:220:9","statements":[{"nativeSrc":"7537:74:9","nodeType":"YulAssignment","src":"7537:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"7603:3:9","nodeType":"YulIdentifier","src":"7603:3:9"},{"kind":"number","nativeSrc":"7608:2:9","nodeType":"YulLiteral","src":"7608:2:9","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7544:58:9","nodeType":"YulIdentifier","src":"7544:58:9"},"nativeSrc":"7544:67:9","nodeType":"YulFunctionCall","src":"7544:67:9"},"variableNames":[{"name":"pos","nativeSrc":"7537:3:9","nodeType":"YulIdentifier","src":"7537:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7709:3:9","nodeType":"YulIdentifier","src":"7709:3:9"}],"functionName":{"name":"store_literal_in_memory_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861","nativeSrc":"7620:88:9","nodeType":"YulIdentifier","src":"7620:88:9"},"nativeSrc":"7620:93:9","nodeType":"YulFunctionCall","src":"7620:93:9"},"nativeSrc":"7620:93:9","nodeType":"YulExpressionStatement","src":"7620:93:9"},{"nativeSrc":"7722:19:9","nodeType":"YulAssignment","src":"7722:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"7733:3:9","nodeType":"YulIdentifier","src":"7733:3:9"},{"kind":"number","nativeSrc":"7738:2:9","nodeType":"YulLiteral","src":"7738:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7729:3:9","nodeType":"YulIdentifier","src":"7729:3:9"},"nativeSrc":"7729:12:9","nodeType":"YulFunctionCall","src":"7729:12:9"},"variableNames":[{"name":"end","nativeSrc":"7722:3:9","nodeType":"YulIdentifier","src":"7722:3:9"}]}]},"name":"abi_encode_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861_to_t_string_memory_ptr_fromStack","nativeSrc":"7381:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7515:3:9","nodeType":"YulTypedName","src":"7515:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7523:3:9","nodeType":"YulTypedName","src":"7523:3:9","type":""}],"src":"7381:366:9"},{"body":{"nativeSrc":"7924:248:9","nodeType":"YulBlock","src":"7924:248:9","statements":[{"nativeSrc":"7934:26:9","nodeType":"YulAssignment","src":"7934:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7946:9:9","nodeType":"YulIdentifier","src":"7946:9:9"},{"kind":"number","nativeSrc":"7957:2:9","nodeType":"YulLiteral","src":"7957:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7942:3:9","nodeType":"YulIdentifier","src":"7942:3:9"},"nativeSrc":"7942:18:9","nodeType":"YulFunctionCall","src":"7942:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7934:4:9","nodeType":"YulIdentifier","src":"7934:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7981:9:9","nodeType":"YulIdentifier","src":"7981:9:9"},{"kind":"number","nativeSrc":"7992:1:9","nodeType":"YulLiteral","src":"7992:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7977:3:9","nodeType":"YulIdentifier","src":"7977:3:9"},"nativeSrc":"7977:17:9","nodeType":"YulFunctionCall","src":"7977:17:9"},{"arguments":[{"name":"tail","nativeSrc":"8000:4:9","nodeType":"YulIdentifier","src":"8000:4:9"},{"name":"headStart","nativeSrc":"8006:9:9","nodeType":"YulIdentifier","src":"8006:9:9"}],"functionName":{"name":"sub","nativeSrc":"7996:3:9","nodeType":"YulIdentifier","src":"7996:3:9"},"nativeSrc":"7996:20:9","nodeType":"YulFunctionCall","src":"7996:20:9"}],"functionName":{"name":"mstore","nativeSrc":"7970:6:9","nodeType":"YulIdentifier","src":"7970:6:9"},"nativeSrc":"7970:47:9","nodeType":"YulFunctionCall","src":"7970:47:9"},"nativeSrc":"7970:47:9","nodeType":"YulExpressionStatement","src":"7970:47:9"},{"nativeSrc":"8026:139:9","nodeType":"YulAssignment","src":"8026:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"8160:4:9","nodeType":"YulIdentifier","src":"8160:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861_to_t_string_memory_ptr_fromStack","nativeSrc":"8034:124:9","nodeType":"YulIdentifier","src":"8034:124:9"},"nativeSrc":"8034:131:9","nodeType":"YulFunctionCall","src":"8034:131:9"},"variableNames":[{"name":"tail","nativeSrc":"8026:4:9","nodeType":"YulIdentifier","src":"8026:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7753:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7904:9:9","nodeType":"YulTypedName","src":"7904:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7919:4:9","nodeType":"YulTypedName","src":"7919:4:9","type":""}],"src":"7753:419:9"},{"body":{"nativeSrc":"8220:52:9","nodeType":"YulBlock","src":"8220:52:9","statements":[{"nativeSrc":"8230:35:9","nodeType":"YulAssignment","src":"8230:35:9","value":{"arguments":[{"kind":"number","nativeSrc":"8255:2:9","nodeType":"YulLiteral","src":"8255:2:9","type":"","value":"96"},{"name":"value","nativeSrc":"8259:5:9","nodeType":"YulIdentifier","src":"8259:5:9"}],"functionName":{"name":"shl","nativeSrc":"8251:3:9","nodeType":"YulIdentifier","src":"8251:3:9"},"nativeSrc":"8251:14:9","nodeType":"YulFunctionCall","src":"8251:14:9"},"variableNames":[{"name":"newValue","nativeSrc":"8230:8:9","nodeType":"YulIdentifier","src":"8230:8:9"}]}]},"name":"shift_left_96","nativeSrc":"8178:94:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8201:5:9","nodeType":"YulTypedName","src":"8201:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"8211:8:9","nodeType":"YulTypedName","src":"8211:8:9","type":""}],"src":"8178:94:9"},{"body":{"nativeSrc":"8325:47:9","nodeType":"YulBlock","src":"8325:47:9","statements":[{"nativeSrc":"8335:31:9","nodeType":"YulAssignment","src":"8335:31:9","value":{"arguments":[{"name":"value","nativeSrc":"8360:5:9","nodeType":"YulIdentifier","src":"8360:5:9"}],"functionName":{"name":"shift_left_96","nativeSrc":"8346:13:9","nodeType":"YulIdentifier","src":"8346:13:9"},"nativeSrc":"8346:20:9","nodeType":"YulFunctionCall","src":"8346:20:9"},"variableNames":[{"name":"aligned","nativeSrc":"8335:7:9","nodeType":"YulIdentifier","src":"8335:7:9"}]}]},"name":"leftAlign_t_uint160","nativeSrc":"8278:94:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8307:5:9","nodeType":"YulTypedName","src":"8307:5:9","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"8317:7:9","nodeType":"YulTypedName","src":"8317:7:9","type":""}],"src":"8278:94:9"},{"body":{"nativeSrc":"8425:53:9","nodeType":"YulBlock","src":"8425:53:9","statements":[{"nativeSrc":"8435:37:9","nodeType":"YulAssignment","src":"8435:37:9","value":{"arguments":[{"name":"value","nativeSrc":"8466:5:9","nodeType":"YulIdentifier","src":"8466:5:9"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"8446:19:9","nodeType":"YulIdentifier","src":"8446:19:9"},"nativeSrc":"8446:26:9","nodeType":"YulFunctionCall","src":"8446:26:9"},"variableNames":[{"name":"aligned","nativeSrc":"8435:7:9","nodeType":"YulIdentifier","src":"8435:7:9"}]}]},"name":"leftAlign_t_address","nativeSrc":"8378:100:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8407:5:9","nodeType":"YulTypedName","src":"8407:5:9","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"8417:7:9","nodeType":"YulTypedName","src":"8417:7:9","type":""}],"src":"8378:100:9"},{"body":{"nativeSrc":"8567:74:9","nodeType":"YulBlock","src":"8567:74:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8584:3:9","nodeType":"YulIdentifier","src":"8584:3:9"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8627:5:9","nodeType":"YulIdentifier","src":"8627:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8609:17:9","nodeType":"YulIdentifier","src":"8609:17:9"},"nativeSrc":"8609:24:9","nodeType":"YulFunctionCall","src":"8609:24:9"}],"functionName":{"name":"leftAlign_t_address","nativeSrc":"8589:19:9","nodeType":"YulIdentifier","src":"8589:19:9"},"nativeSrc":"8589:45:9","nodeType":"YulFunctionCall","src":"8589:45:9"}],"functionName":{"name":"mstore","nativeSrc":"8577:6:9","nodeType":"YulIdentifier","src":"8577:6:9"},"nativeSrc":"8577:58:9","nodeType":"YulFunctionCall","src":"8577:58:9"},"nativeSrc":"8577:58:9","nodeType":"YulExpressionStatement","src":"8577:58:9"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"8484:157:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8555:5:9","nodeType":"YulTypedName","src":"8555:5:9","type":""},{"name":"pos","nativeSrc":"8562:3:9","nodeType":"YulTypedName","src":"8562:3:9","type":""}],"src":"8484:157:9"},{"body":{"nativeSrc":"8694:32:9","nodeType":"YulBlock","src":"8694:32:9","statements":[{"nativeSrc":"8704:16:9","nodeType":"YulAssignment","src":"8704:16:9","value":{"name":"value","nativeSrc":"8715:5:9","nodeType":"YulIdentifier","src":"8715:5:9"},"variableNames":[{"name":"aligned","nativeSrc":"8704:7:9","nodeType":"YulIdentifier","src":"8704:7:9"}]}]},"name":"leftAlign_t_uint256","nativeSrc":"8647:79:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8676:5:9","nodeType":"YulTypedName","src":"8676:5:9","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"8686:7:9","nodeType":"YulTypedName","src":"8686:7:9","type":""}],"src":"8647:79:9"},{"body":{"nativeSrc":"8815:74:9","nodeType":"YulBlock","src":"8815:74:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8832:3:9","nodeType":"YulIdentifier","src":"8832:3:9"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8875:5:9","nodeType":"YulIdentifier","src":"8875:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8857:17:9","nodeType":"YulIdentifier","src":"8857:17:9"},"nativeSrc":"8857:24:9","nodeType":"YulFunctionCall","src":"8857:24:9"}],"functionName":{"name":"leftAlign_t_uint256","nativeSrc":"8837:19:9","nodeType":"YulIdentifier","src":"8837:19:9"},"nativeSrc":"8837:45:9","nodeType":"YulFunctionCall","src":"8837:45:9"}],"functionName":{"name":"mstore","nativeSrc":"8825:6:9","nodeType":"YulIdentifier","src":"8825:6:9"},"nativeSrc":"8825:58:9","nodeType":"YulFunctionCall","src":"8825:58:9"},"nativeSrc":"8825:58:9","nodeType":"YulExpressionStatement","src":"8825:58:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"8732:157:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8803:5:9","nodeType":"YulTypedName","src":"8803:5:9","type":""},{"name":"pos","nativeSrc":"8810:3:9","nodeType":"YulTypedName","src":"8810:3:9","type":""}],"src":"8732:157:9"},{"body":{"nativeSrc":"9039:253:9","nodeType":"YulBlock","src":"9039:253:9","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"9112:6:9","nodeType":"YulIdentifier","src":"9112:6:9"},{"name":"pos","nativeSrc":"9121:3:9","nodeType":"YulIdentifier","src":"9121:3:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"9050:61:9","nodeType":"YulIdentifier","src":"9050:61:9"},"nativeSrc":"9050:75:9","nodeType":"YulFunctionCall","src":"9050:75:9"},"nativeSrc":"9050:75:9","nodeType":"YulExpressionStatement","src":"9050:75:9"},{"nativeSrc":"9134:19:9","nodeType":"YulAssignment","src":"9134:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"9145:3:9","nodeType":"YulIdentifier","src":"9145:3:9"},{"kind":"number","nativeSrc":"9150:2:9","nodeType":"YulLiteral","src":"9150:2:9","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"9141:3:9","nodeType":"YulIdentifier","src":"9141:3:9"},"nativeSrc":"9141:12:9","nodeType":"YulFunctionCall","src":"9141:12:9"},"variableNames":[{"name":"pos","nativeSrc":"9134:3:9","nodeType":"YulIdentifier","src":"9134:3:9"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9225:6:9","nodeType":"YulIdentifier","src":"9225:6:9"},{"name":"pos","nativeSrc":"9234:3:9","nodeType":"YulIdentifier","src":"9234:3:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"9163:61:9","nodeType":"YulIdentifier","src":"9163:61:9"},"nativeSrc":"9163:75:9","nodeType":"YulFunctionCall","src":"9163:75:9"},"nativeSrc":"9163:75:9","nodeType":"YulExpressionStatement","src":"9163:75:9"},{"nativeSrc":"9247:19:9","nodeType":"YulAssignment","src":"9247:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"9258:3:9","nodeType":"YulIdentifier","src":"9258:3:9"},{"kind":"number","nativeSrc":"9263:2:9","nodeType":"YulLiteral","src":"9263:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9254:3:9","nodeType":"YulIdentifier","src":"9254:3:9"},"nativeSrc":"9254:12:9","nodeType":"YulFunctionCall","src":"9254:12:9"},"variableNames":[{"name":"pos","nativeSrc":"9247:3:9","nodeType":"YulIdentifier","src":"9247:3:9"}]},{"nativeSrc":"9276:10:9","nodeType":"YulAssignment","src":"9276:10:9","value":{"name":"pos","nativeSrc":"9283:3:9","nodeType":"YulIdentifier","src":"9283:3:9"},"variableNames":[{"name":"end","nativeSrc":"9276:3:9","nodeType":"YulIdentifier","src":"9276:3:9"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"8895:397:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9010:3:9","nodeType":"YulTypedName","src":"9010:3:9","type":""},{"name":"value1","nativeSrc":"9016:6:9","nodeType":"YulTypedName","src":"9016:6:9","type":""},{"name":"value0","nativeSrc":"9024:6:9","nodeType":"YulTypedName","src":"9024:6:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9035:3:9","nodeType":"YulTypedName","src":"9035:3:9","type":""}],"src":"8895:397:9"},{"body":{"nativeSrc":"9404:57:9","nodeType":"YulBlock","src":"9404:57:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9426:6:9","nodeType":"YulIdentifier","src":"9426:6:9"},{"kind":"number","nativeSrc":"9434:1:9","nodeType":"YulLiteral","src":"9434:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9422:3:9","nodeType":"YulIdentifier","src":"9422:3:9"},"nativeSrc":"9422:14:9","nodeType":"YulFunctionCall","src":"9422:14:9"},{"hexValue":"494e56414c49442050524f4f46","kind":"string","nativeSrc":"9438:15:9","nodeType":"YulLiteral","src":"9438:15:9","type":"","value":"INVALID PROOF"}],"functionName":{"name":"mstore","nativeSrc":"9415:6:9","nodeType":"YulIdentifier","src":"9415:6:9"},"nativeSrc":"9415:39:9","nodeType":"YulFunctionCall","src":"9415:39:9"},"nativeSrc":"9415:39:9","nodeType":"YulExpressionStatement","src":"9415:39:9"}]},"name":"store_literal_in_memory_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a","nativeSrc":"9298:163:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9396:6:9","nodeType":"YulTypedName","src":"9396:6:9","type":""}],"src":"9298:163:9"},{"body":{"nativeSrc":"9613:220:9","nodeType":"YulBlock","src":"9613:220:9","statements":[{"nativeSrc":"9623:74:9","nodeType":"YulAssignment","src":"9623:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"9689:3:9","nodeType":"YulIdentifier","src":"9689:3:9"},{"kind":"number","nativeSrc":"9694:2:9","nodeType":"YulLiteral","src":"9694:2:9","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9630:58:9","nodeType":"YulIdentifier","src":"9630:58:9"},"nativeSrc":"9630:67:9","nodeType":"YulFunctionCall","src":"9630:67:9"},"variableNames":[{"name":"pos","nativeSrc":"9623:3:9","nodeType":"YulIdentifier","src":"9623:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9795:3:9","nodeType":"YulIdentifier","src":"9795:3:9"}],"functionName":{"name":"store_literal_in_memory_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a","nativeSrc":"9706:88:9","nodeType":"YulIdentifier","src":"9706:88:9"},"nativeSrc":"9706:93:9","nodeType":"YulFunctionCall","src":"9706:93:9"},"nativeSrc":"9706:93:9","nodeType":"YulExpressionStatement","src":"9706:93:9"},{"nativeSrc":"9808:19:9","nodeType":"YulAssignment","src":"9808:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"9819:3:9","nodeType":"YulIdentifier","src":"9819:3:9"},{"kind":"number","nativeSrc":"9824:2:9","nodeType":"YulLiteral","src":"9824:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9815:3:9","nodeType":"YulIdentifier","src":"9815:3:9"},"nativeSrc":"9815:12:9","nodeType":"YulFunctionCall","src":"9815:12:9"},"variableNames":[{"name":"end","nativeSrc":"9808:3:9","nodeType":"YulIdentifier","src":"9808:3:9"}]}]},"name":"abi_encode_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a_to_t_string_memory_ptr_fromStack","nativeSrc":"9467:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9601:3:9","nodeType":"YulTypedName","src":"9601:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9609:3:9","nodeType":"YulTypedName","src":"9609:3:9","type":""}],"src":"9467:366:9"},{"body":{"nativeSrc":"10010:248:9","nodeType":"YulBlock","src":"10010:248:9","statements":[{"nativeSrc":"10020:26:9","nodeType":"YulAssignment","src":"10020:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"10032:9:9","nodeType":"YulIdentifier","src":"10032:9:9"},{"kind":"number","nativeSrc":"10043:2:9","nodeType":"YulLiteral","src":"10043:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10028:3:9","nodeType":"YulIdentifier","src":"10028:3:9"},"nativeSrc":"10028:18:9","nodeType":"YulFunctionCall","src":"10028:18:9"},"variableNames":[{"name":"tail","nativeSrc":"10020:4:9","nodeType":"YulIdentifier","src":"10020:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10067:9:9","nodeType":"YulIdentifier","src":"10067:9:9"},{"kind":"number","nativeSrc":"10078:1:9","nodeType":"YulLiteral","src":"10078:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10063:3:9","nodeType":"YulIdentifier","src":"10063:3:9"},"nativeSrc":"10063:17:9","nodeType":"YulFunctionCall","src":"10063:17:9"},{"arguments":[{"name":"tail","nativeSrc":"10086:4:9","nodeType":"YulIdentifier","src":"10086:4:9"},{"name":"headStart","nativeSrc":"10092:9:9","nodeType":"YulIdentifier","src":"10092:9:9"}],"functionName":{"name":"sub","nativeSrc":"10082:3:9","nodeType":"YulIdentifier","src":"10082:3:9"},"nativeSrc":"10082:20:9","nodeType":"YulFunctionCall","src":"10082:20:9"}],"functionName":{"name":"mstore","nativeSrc":"10056:6:9","nodeType":"YulIdentifier","src":"10056:6:9"},"nativeSrc":"10056:47:9","nodeType":"YulFunctionCall","src":"10056:47:9"},"nativeSrc":"10056:47:9","nodeType":"YulExpressionStatement","src":"10056:47:9"},{"nativeSrc":"10112:139:9","nodeType":"YulAssignment","src":"10112:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"10246:4:9","nodeType":"YulIdentifier","src":"10246:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a_to_t_string_memory_ptr_fromStack","nativeSrc":"10120:124:9","nodeType":"YulIdentifier","src":"10120:124:9"},"nativeSrc":"10120:131:9","nodeType":"YulFunctionCall","src":"10120:131:9"},"variableNames":[{"name":"tail","nativeSrc":"10112:4:9","nodeType":"YulIdentifier","src":"10112:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9839:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9990:9:9","nodeType":"YulTypedName","src":"9990:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10005:4:9","nodeType":"YulTypedName","src":"10005:4:9","type":""}],"src":"9839:419:9"},{"body":{"nativeSrc":"10329:53:9","nodeType":"YulBlock","src":"10329:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10346:3:9","nodeType":"YulIdentifier","src":"10346:3:9"},{"arguments":[{"name":"value","nativeSrc":"10369:5:9","nodeType":"YulIdentifier","src":"10369:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10351:17:9","nodeType":"YulIdentifier","src":"10351:17:9"},"nativeSrc":"10351:24:9","nodeType":"YulFunctionCall","src":"10351:24:9"}],"functionName":{"name":"mstore","nativeSrc":"10339:6:9","nodeType":"YulIdentifier","src":"10339:6:9"},"nativeSrc":"10339:37:9","nodeType":"YulFunctionCall","src":"10339:37:9"},"nativeSrc":"10339:37:9","nodeType":"YulExpressionStatement","src":"10339:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10264:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10317:5:9","nodeType":"YulTypedName","src":"10317:5:9","type":""},{"name":"pos","nativeSrc":"10324:3:9","nodeType":"YulTypedName","src":"10324:3:9","type":""}],"src":"10264:118:9"},{"body":{"nativeSrc":"10514:206:9","nodeType":"YulBlock","src":"10514:206:9","statements":[{"nativeSrc":"10524:26:9","nodeType":"YulAssignment","src":"10524:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"10536:9:9","nodeType":"YulIdentifier","src":"10536:9:9"},{"kind":"number","nativeSrc":"10547:2:9","nodeType":"YulLiteral","src":"10547:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10532:3:9","nodeType":"YulIdentifier","src":"10532:3:9"},"nativeSrc":"10532:18:9","nodeType":"YulFunctionCall","src":"10532:18:9"},"variableNames":[{"name":"tail","nativeSrc":"10524:4:9","nodeType":"YulIdentifier","src":"10524:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10604:6:9","nodeType":"YulIdentifier","src":"10604:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10617:9:9","nodeType":"YulIdentifier","src":"10617:9:9"},{"kind":"number","nativeSrc":"10628:1:9","nodeType":"YulLiteral","src":"10628:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10613:3:9","nodeType":"YulIdentifier","src":"10613:3:9"},"nativeSrc":"10613:17:9","nodeType":"YulFunctionCall","src":"10613:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10560:43:9","nodeType":"YulIdentifier","src":"10560:43:9"},"nativeSrc":"10560:71:9","nodeType":"YulFunctionCall","src":"10560:71:9"},"nativeSrc":"10560:71:9","nodeType":"YulExpressionStatement","src":"10560:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10685:6:9","nodeType":"YulIdentifier","src":"10685:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10698:9:9","nodeType":"YulIdentifier","src":"10698:9:9"},{"kind":"number","nativeSrc":"10709:2:9","nodeType":"YulLiteral","src":"10709:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10694:3:9","nodeType":"YulIdentifier","src":"10694:3:9"},"nativeSrc":"10694:18:9","nodeType":"YulFunctionCall","src":"10694:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10641:43:9","nodeType":"YulIdentifier","src":"10641:43:9"},"nativeSrc":"10641:72:9","nodeType":"YulFunctionCall","src":"10641:72:9"},"nativeSrc":"10641:72:9","nodeType":"YulExpressionStatement","src":"10641:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"10388:332:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10478:9:9","nodeType":"YulTypedName","src":"10478:9:9","type":""},{"name":"value1","nativeSrc":"10490:6:9","nodeType":"YulTypedName","src":"10490:6:9","type":""},{"name":"value0","nativeSrc":"10498:6:9","nodeType":"YulTypedName","src":"10498:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10509:4:9","nodeType":"YulTypedName","src":"10509:4:9","type":""}],"src":"10388:332:9"},{"body":{"nativeSrc":"10766:76:9","nodeType":"YulBlock","src":"10766:76:9","statements":[{"body":{"nativeSrc":"10820:16:9","nodeType":"YulBlock","src":"10820:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10829:1:9","nodeType":"YulLiteral","src":"10829:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"10832:1:9","nodeType":"YulLiteral","src":"10832:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10822:6:9","nodeType":"YulIdentifier","src":"10822:6:9"},"nativeSrc":"10822:12:9","nodeType":"YulFunctionCall","src":"10822:12:9"},"nativeSrc":"10822:12:9","nodeType":"YulExpressionStatement","src":"10822:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10789:5:9","nodeType":"YulIdentifier","src":"10789:5:9"},{"arguments":[{"name":"value","nativeSrc":"10811:5:9","nodeType":"YulIdentifier","src":"10811:5:9"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"10796:14:9","nodeType":"YulIdentifier","src":"10796:14:9"},"nativeSrc":"10796:21:9","nodeType":"YulFunctionCall","src":"10796:21:9"}],"functionName":{"name":"eq","nativeSrc":"10786:2:9","nodeType":"YulIdentifier","src":"10786:2:9"},"nativeSrc":"10786:32:9","nodeType":"YulFunctionCall","src":"10786:32:9"}],"functionName":{"name":"iszero","nativeSrc":"10779:6:9","nodeType":"YulIdentifier","src":"10779:6:9"},"nativeSrc":"10779:40:9","nodeType":"YulFunctionCall","src":"10779:40:9"},"nativeSrc":"10776:60:9","nodeType":"YulIf","src":"10776:60:9"}]},"name":"validator_revert_t_bool","nativeSrc":"10726:116:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10759:5:9","nodeType":"YulTypedName","src":"10759:5:9","type":""}],"src":"10726:116:9"},{"body":{"nativeSrc":"10908:77:9","nodeType":"YulBlock","src":"10908:77:9","statements":[{"nativeSrc":"10918:22:9","nodeType":"YulAssignment","src":"10918:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"10933:6:9","nodeType":"YulIdentifier","src":"10933:6:9"}],"functionName":{"name":"mload","nativeSrc":"10927:5:9","nodeType":"YulIdentifier","src":"10927:5:9"},"nativeSrc":"10927:13:9","nodeType":"YulFunctionCall","src":"10927:13:9"},"variableNames":[{"name":"value","nativeSrc":"10918:5:9","nodeType":"YulIdentifier","src":"10918:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10973:5:9","nodeType":"YulIdentifier","src":"10973:5:9"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"10949:23:9","nodeType":"YulIdentifier","src":"10949:23:9"},"nativeSrc":"10949:30:9","nodeType":"YulFunctionCall","src":"10949:30:9"},"nativeSrc":"10949:30:9","nodeType":"YulExpressionStatement","src":"10949:30:9"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"10848:137:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10886:6:9","nodeType":"YulTypedName","src":"10886:6:9","type":""},{"name":"end","nativeSrc":"10894:3:9","nodeType":"YulTypedName","src":"10894:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10902:5:9","nodeType":"YulTypedName","src":"10902:5:9","type":""}],"src":"10848:137:9"},{"body":{"nativeSrc":"11065:271:9","nodeType":"YulBlock","src":"11065:271:9","statements":[{"body":{"nativeSrc":"11111:83:9","nodeType":"YulBlock","src":"11111:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11113:77:9","nodeType":"YulIdentifier","src":"11113:77:9"},"nativeSrc":"11113:79:9","nodeType":"YulFunctionCall","src":"11113:79:9"},"nativeSrc":"11113:79:9","nodeType":"YulExpressionStatement","src":"11113:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11086:7:9","nodeType":"YulIdentifier","src":"11086:7:9"},{"name":"headStart","nativeSrc":"11095:9:9","nodeType":"YulIdentifier","src":"11095:9:9"}],"functionName":{"name":"sub","nativeSrc":"11082:3:9","nodeType":"YulIdentifier","src":"11082:3:9"},"nativeSrc":"11082:23:9","nodeType":"YulFunctionCall","src":"11082:23:9"},{"kind":"number","nativeSrc":"11107:2:9","nodeType":"YulLiteral","src":"11107:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11078:3:9","nodeType":"YulIdentifier","src":"11078:3:9"},"nativeSrc":"11078:32:9","nodeType":"YulFunctionCall","src":"11078:32:9"},"nativeSrc":"11075:119:9","nodeType":"YulIf","src":"11075:119:9"},{"nativeSrc":"11204:125:9","nodeType":"YulBlock","src":"11204:125:9","statements":[{"nativeSrc":"11219:15:9","nodeType":"YulVariableDeclaration","src":"11219:15:9","value":{"kind":"number","nativeSrc":"11233:1:9","nodeType":"YulLiteral","src":"11233:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11223:6:9","nodeType":"YulTypedName","src":"11223:6:9","type":""}]},{"nativeSrc":"11248:71:9","nodeType":"YulAssignment","src":"11248:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11291:9:9","nodeType":"YulIdentifier","src":"11291:9:9"},{"name":"offset","nativeSrc":"11302:6:9","nodeType":"YulIdentifier","src":"11302:6:9"}],"functionName":{"name":"add","nativeSrc":"11287:3:9","nodeType":"YulIdentifier","src":"11287:3:9"},"nativeSrc":"11287:22:9","nodeType":"YulFunctionCall","src":"11287:22:9"},{"name":"dataEnd","nativeSrc":"11311:7:9","nodeType":"YulIdentifier","src":"11311:7:9"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"11258:28:9","nodeType":"YulIdentifier","src":"11258:28:9"},"nativeSrc":"11258:61:9","nodeType":"YulFunctionCall","src":"11258:61:9"},"variableNames":[{"name":"value0","nativeSrc":"11248:6:9","nodeType":"YulIdentifier","src":"11248:6:9"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"10991:345:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11035:9:9","nodeType":"YulTypedName","src":"11035:9:9","type":""},{"name":"dataEnd","nativeSrc":"11046:7:9","nodeType":"YulTypedName","src":"11046:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11058:6:9","nodeType":"YulTypedName","src":"11058:6:9","type":""}],"src":"10991:345:9"},{"body":{"nativeSrc":"11440:124:9","nodeType":"YulBlock","src":"11440:124:9","statements":[{"nativeSrc":"11450:26:9","nodeType":"YulAssignment","src":"11450:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"11462:9:9","nodeType":"YulIdentifier","src":"11462:9:9"},{"kind":"number","nativeSrc":"11473:2:9","nodeType":"YulLiteral","src":"11473:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11458:3:9","nodeType":"YulIdentifier","src":"11458:3:9"},"nativeSrc":"11458:18:9","nodeType":"YulFunctionCall","src":"11458:18:9"},"variableNames":[{"name":"tail","nativeSrc":"11450:4:9","nodeType":"YulIdentifier","src":"11450:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11530:6:9","nodeType":"YulIdentifier","src":"11530:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"11543:9:9","nodeType":"YulIdentifier","src":"11543:9:9"},{"kind":"number","nativeSrc":"11554:1:9","nodeType":"YulLiteral","src":"11554:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11539:3:9","nodeType":"YulIdentifier","src":"11539:3:9"},"nativeSrc":"11539:17:9","nodeType":"YulFunctionCall","src":"11539:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11486:43:9","nodeType":"YulIdentifier","src":"11486:43:9"},"nativeSrc":"11486:71:9","nodeType":"YulFunctionCall","src":"11486:71:9"},"nativeSrc":"11486:71:9","nodeType":"YulExpressionStatement","src":"11486:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"11342:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11412:9:9","nodeType":"YulTypedName","src":"11412:9:9","type":""},{"name":"value0","nativeSrc":"11424:6:9","nodeType":"YulTypedName","src":"11424:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11435:4:9","nodeType":"YulTypedName","src":"11435:4:9","type":""}],"src":"11342:222:9"},{"body":{"nativeSrc":"11633:80:9","nodeType":"YulBlock","src":"11633:80:9","statements":[{"nativeSrc":"11643:22:9","nodeType":"YulAssignment","src":"11643:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"11658:6:9","nodeType":"YulIdentifier","src":"11658:6:9"}],"functionName":{"name":"mload","nativeSrc":"11652:5:9","nodeType":"YulIdentifier","src":"11652:5:9"},"nativeSrc":"11652:13:9","nodeType":"YulFunctionCall","src":"11652:13:9"},"variableNames":[{"name":"value","nativeSrc":"11643:5:9","nodeType":"YulIdentifier","src":"11643:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11701:5:9","nodeType":"YulIdentifier","src":"11701:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"11674:26:9","nodeType":"YulIdentifier","src":"11674:26:9"},"nativeSrc":"11674:33:9","nodeType":"YulFunctionCall","src":"11674:33:9"},"nativeSrc":"11674:33:9","nodeType":"YulExpressionStatement","src":"11674:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"11570:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11611:6:9","nodeType":"YulTypedName","src":"11611:6:9","type":""},{"name":"end","nativeSrc":"11619:3:9","nodeType":"YulTypedName","src":"11619:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11627:5:9","nodeType":"YulTypedName","src":"11627:5:9","type":""}],"src":"11570:143:9"},{"body":{"nativeSrc":"11796:274:9","nodeType":"YulBlock","src":"11796:274:9","statements":[{"body":{"nativeSrc":"11842:83:9","nodeType":"YulBlock","src":"11842:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11844:77:9","nodeType":"YulIdentifier","src":"11844:77:9"},"nativeSrc":"11844:79:9","nodeType":"YulFunctionCall","src":"11844:79:9"},"nativeSrc":"11844:79:9","nodeType":"YulExpressionStatement","src":"11844:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11817:7:9","nodeType":"YulIdentifier","src":"11817:7:9"},{"name":"headStart","nativeSrc":"11826:9:9","nodeType":"YulIdentifier","src":"11826:9:9"}],"functionName":{"name":"sub","nativeSrc":"11813:3:9","nodeType":"YulIdentifier","src":"11813:3:9"},"nativeSrc":"11813:23:9","nodeType":"YulFunctionCall","src":"11813:23:9"},{"kind":"number","nativeSrc":"11838:2:9","nodeType":"YulLiteral","src":"11838:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11809:3:9","nodeType":"YulIdentifier","src":"11809:3:9"},"nativeSrc":"11809:32:9","nodeType":"YulFunctionCall","src":"11809:32:9"},"nativeSrc":"11806:119:9","nodeType":"YulIf","src":"11806:119:9"},{"nativeSrc":"11935:128:9","nodeType":"YulBlock","src":"11935:128:9","statements":[{"nativeSrc":"11950:15:9","nodeType":"YulVariableDeclaration","src":"11950:15:9","value":{"kind":"number","nativeSrc":"11964:1:9","nodeType":"YulLiteral","src":"11964:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11954:6:9","nodeType":"YulTypedName","src":"11954:6:9","type":""}]},{"nativeSrc":"11979:74:9","nodeType":"YulAssignment","src":"11979:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12025:9:9","nodeType":"YulIdentifier","src":"12025:9:9"},{"name":"offset","nativeSrc":"12036:6:9","nodeType":"YulIdentifier","src":"12036:6:9"}],"functionName":{"name":"add","nativeSrc":"12021:3:9","nodeType":"YulIdentifier","src":"12021:3:9"},"nativeSrc":"12021:22:9","nodeType":"YulFunctionCall","src":"12021:22:9"},{"name":"dataEnd","nativeSrc":"12045:7:9","nodeType":"YulIdentifier","src":"12045:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"11989:31:9","nodeType":"YulIdentifier","src":"11989:31:9"},"nativeSrc":"11989:64:9","nodeType":"YulFunctionCall","src":"11989:64:9"},"variableNames":[{"name":"value0","nativeSrc":"11979:6:9","nodeType":"YulIdentifier","src":"11979:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"11719:351:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11766:9:9","nodeType":"YulTypedName","src":"11766:9:9","type":""},{"name":"dataEnd","nativeSrc":"11777:7:9","nodeType":"YulTypedName","src":"11777:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11789:6:9","nodeType":"YulTypedName","src":"11789:6:9","type":""}],"src":"11719:351:9"},{"body":{"nativeSrc":"12104:152:9","nodeType":"YulBlock","src":"12104:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12121:1:9","nodeType":"YulLiteral","src":"12121:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"12124:77:9","nodeType":"YulLiteral","src":"12124:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12114:6:9","nodeType":"YulIdentifier","src":"12114:6:9"},"nativeSrc":"12114:88:9","nodeType":"YulFunctionCall","src":"12114:88:9"},"nativeSrc":"12114:88:9","nodeType":"YulExpressionStatement","src":"12114:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12218:1:9","nodeType":"YulLiteral","src":"12218:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"12221:4:9","nodeType":"YulLiteral","src":"12221:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"12211:6:9","nodeType":"YulIdentifier","src":"12211:6:9"},"nativeSrc":"12211:15:9","nodeType":"YulFunctionCall","src":"12211:15:9"},"nativeSrc":"12211:15:9","nodeType":"YulExpressionStatement","src":"12211:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12242:1:9","nodeType":"YulLiteral","src":"12242:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"12245:4:9","nodeType":"YulLiteral","src":"12245:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12235:6:9","nodeType":"YulIdentifier","src":"12235:6:9"},"nativeSrc":"12235:15:9","nodeType":"YulFunctionCall","src":"12235:15:9"},"nativeSrc":"12235:15:9","nodeType":"YulExpressionStatement","src":"12235:15:9"}]},"name":"panic_error_0x32","nativeSrc":"12076:180:9","nodeType":"YulFunctionDefinition","src":"12076:180:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20Token_$2093_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20Token_$2093_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20Token_$2093_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20Token_$2093__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20Token_$2093_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861(memPtr) {\n\n        mstore(add(memPtr, 0), \"ALREADY_CLAIMED\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc7a4f08369e04191e5d601ef52230a181560bfbd7431497090a8eabc5119861_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID PROOF\")\n\n    }\n\n    function abi_encode_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a38b451a328934d21737c102fb56cd7ba8e920cbffd4c749b268a5416cb7c81a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806389ded4841161005b57806389ded4841461010357806395d89b4114610121578063c884ef831461013f578063fc0c546a1461016f57610088565b806306fdde031461008d5780632eb4a7ab146100ab5780632f52ebb7146100c9578063378dc3dc146100e5575b600080fd5b61009561018d565b6040516100a291906107a4565b60405180910390f35b6100b361021b565b6040516100c091906107df565b60405180910390f35b6100e360048036038101906100de919061089f565b610221565b005b6100ed6104f1565b6040516100fa919061090e565b60405180910390f35b61010b6104f7565b604051610118919061090e565b60405180910390f35b610129610599565b60405161013691906107a4565b60405180910390f35b61015960048036038101906101549190610987565b610627565b60405161016691906109cf565b60405180910390f35b610177610647565b6040516101849190610a49565b60405180910390f35b6001805461019a90610a93565b80601f01602080910402602001604051908101604052809291908181526020018280546101c690610a93565b80156102135780601f106101e857610100808354040283529160200191610213565b820191906000526020600020905b8154815290600101906020018083116101f657829003601f168201915b505050505081565b60045481565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a590610b10565b60405180910390fd5b600033846040516020016102c3929190610b99565b604051602081830303815290604052805190602001209050610329838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506004548361066b565b610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f90610c11565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016103c3929190610c40565b6020604051808303816000875af11580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104069190610c95565b610445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043c90610c11565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a856040516104e3919061090e565b60405180910390a250505050565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105539190610cc2565b602060405180830381865afa158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610cf2565b905090565b600280546105a690610a93565b80601f01602080910402602001604051908101604052809291908181526020018280546105d290610a93565b801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b505050505081565b60056020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000826106788584610682565b1490509392505050565b60008082905060005b84518110156106c7576106b8828683815181106106ab576106aa610d1f565b5b60200260200101516106d2565b9150808060010191505061068b565b508091505092915050565b60008183106106ea576106e582846106fd565b6106f5565b6106f483836106fd565b5b905092915050565b600082600052816020526040600020905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561074e578082015181840152602081019050610733565b60008484015250505050565b6000601f19601f8301169050919050565b600061077682610714565b610780818561071f565b9350610790818560208601610730565b6107998161075a565b840191505092915050565b600060208201905081810360008301526107be818461076b565b905092915050565b6000819050919050565b6107d9816107c6565b82525050565b60006020820190506107f460008301846107d0565b92915050565b600080fd5b600080fd5b6000819050919050565b61081781610804565b811461082257600080fd5b50565b6000813590506108348161080e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261085f5761085e61083a565b5b8235905067ffffffffffffffff81111561087c5761087b61083f565b5b60208301915083602082028301111561089857610897610844565b5b9250929050565b6000806000604084860312156108b8576108b76107fa565b5b60006108c686828701610825565b935050602084013567ffffffffffffffff8111156108e7576108e66107ff565b5b6108f386828701610849565b92509250509250925092565b61090881610804565b82525050565b600060208201905061092360008301846108ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095482610929565b9050919050565b61096481610949565b811461096f57600080fd5b50565b6000813590506109818161095b565b92915050565b60006020828403121561099d5761099c6107fa565b5b60006109ab84828501610972565b91505092915050565b60008115159050919050565b6109c9816109b4565b82525050565b60006020820190506109e460008301846109c0565b92915050565b6000819050919050565b6000610a0f610a0a610a0584610929565b6109ea565b610929565b9050919050565b6000610a21826109f4565b9050919050565b6000610a3382610a16565b9050919050565b610a4381610a28565b82525050565b6000602082019050610a5e6000830184610a3a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610aab57607f821691505b602082108103610abe57610abd610a64565b5b50919050565b7f414c52454144595f434c41494d45440000000000000000000000000000000000600082015250565b6000610afa600f8361071f565b9150610b0582610ac4565b602082019050919050565b60006020820190508181036000830152610b2981610aed565b9050919050565b60008160601b9050919050565b6000610b4882610b30565b9050919050565b6000610b5a82610b3d565b9050919050565b610b72610b6d82610949565b610b4f565b82525050565b6000819050919050565b610b93610b8e82610804565b610b78565b82525050565b6000610ba58285610b61565b601482019150610bb58284610b82565b6020820191508190509392505050565b7f494e56414c49442050524f4f4600000000000000000000000000000000000000600082015250565b6000610bfb600d8361071f565b9150610c0682610bc5565b602082019050919050565b60006020820190508181036000830152610c2a81610bee565b9050919050565b610c3a81610949565b82525050565b6000604082019050610c556000830185610c31565b610c6260208301846108ff565b9392505050565b610c72816109b4565b8114610c7d57600080fd5b50565b600081519050610c8f81610c69565b92915050565b600060208284031215610cab57610caa6107fa565b5b6000610cb984828501610c80565b91505092915050565b6000602082019050610cd76000830184610c31565b92915050565b600081519050610cec8161080e565b92915050565b600060208284031215610d0857610d076107fa565b5b6000610d1684828501610cdd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220df65e9c5fd4853fee96b671f7db946a4b0dc495f4ca91e87b877b24c5d4f7ed064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89DED484 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x89DED484 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x16F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2F52EBB7 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x19A SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C6 SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x213 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x213 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2C3 SWAP3 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x329 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x4 SLOAD DUP4 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP3 SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x406 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP6 PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x570 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x5A6 SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x61F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x602 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x678 DUP6 DUP5 PUSH2 0x682 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6B8 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0xD1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6D2 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x68B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x6EA JUMPI PUSH2 0x6E5 DUP3 DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x6F4 DUP4 DUP4 PUSH2 0x6FD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x74E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x733 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x776 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x780 DUP2 DUP6 PUSH2 0x71F JUMP JUMPDEST SWAP4 POP PUSH2 0x790 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x730 JUMP JUMPDEST PUSH2 0x799 DUP2 PUSH2 0x75A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BE DUP2 DUP5 PUSH2 0x76B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D9 DUP2 PUSH2 0x7C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x817 DUP2 PUSH2 0x804 JUMP JUMPDEST DUP2 EQ PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x834 DUP2 PUSH2 0x80E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x83A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x83F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0x844 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8B8 JUMPI PUSH2 0x8B7 PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C6 DUP7 DUP3 DUP8 ADD PUSH2 0x825 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E6 PUSH2 0x7FF JUMP JUMPDEST JUMPDEST PUSH2 0x8F3 DUP7 DUP3 DUP8 ADD PUSH2 0x849 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x908 DUP2 PUSH2 0x804 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x923 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x954 DUP3 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x964 DUP2 PUSH2 0x949 JUMP JUMPDEST DUP2 EQ PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x981 DUP2 PUSH2 0x95B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99D JUMPI PUSH2 0x99C PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9AB DUP5 DUP3 DUP6 ADD PUSH2 0x972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C9 DUP2 PUSH2 0x9B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0F PUSH2 0xA0A PUSH2 0xA05 DUP5 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP3 PUSH2 0x9F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA33 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA43 DUP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xAAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xABE JUMPI PUSH2 0xABD PUSH2 0xA64 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414C52454144595F434C41494D45440000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFA PUSH1 0xF DUP4 PUSH2 0x71F JUMP JUMPDEST SWAP2 POP PUSH2 0xB05 DUP3 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB29 DUP2 PUSH2 0xAED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB48 DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5A DUP3 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB72 PUSH2 0xB6D DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB93 PUSH2 0xB8E DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA5 DUP3 DUP6 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBB5 DUP3 DUP5 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x494E56414C49442050524F4F4600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFB PUSH1 0xD DUP4 PUSH2 0x71F JUMP JUMPDEST SWAP2 POP PUSH2 0xC06 DUP3 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2A DUP2 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3A DUP2 PUSH2 0x949 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0xC62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0x9B4 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8F DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB9 DUP5 DUP3 DUP6 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCEC DUP2 PUSH2 0x80E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD08 JUMPI PUSH2 0xD07 PUSH2 0x7FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP5 DUP3 DUP6 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH6 0xE9C5FD4853FE 0xE9 PUSH12 0x671F7DB946A4B0DC495F4CA9 0x1E DUP8 0xB8 PUSH24 0xB24C5D4F7ED064736F6C634300081C003300000000000000 ","sourceMap":"156:1132:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;294:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;717:460;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;260:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1183:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;234:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;181:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;210:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;294:25::-;;;;:::o;717:460::-;808:7;:19;816:10;808:19;;;;;;;;;;;;;;;;;;;;;;;;;807:20;799:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;872:12;914:10;926:6;897:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;887:47;;;;;;872:62;;953:49;972:11;;953:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:10;;997:4;953:18;:49::i;:::-;945:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1039:5;;;;;;;;;;:14;;;1054:10;1066:6;1039:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1031:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1123:4;1101:7;:19;1109:10;1101:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1151:10;1143:27;;;1163:6;1143:27;;;;;;:::i;:::-;;;;;;;;789:388;717:460;;;:::o;260:28::-;;;;:::o;1183:103::-;1226:7;1252:5;;;;;;;;;;;:15;;;1268:10;1252:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1245:34;;1183:103;:::o;234:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;325:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;181:23::-;;;;;;;;;;;;:::o;1902:154:6:-;1993:4;2045;2016:25;2029:5;2036:4;2016:12;:25::i;:::-;:33;2009:40;;1902:154;;;;;:::o;2457:308::-;2540:7;2559:20;2582:4;2559:27;;2601:9;2596:134;2620:5;:12;2616:1;:16;2596:134;;;2668:51;2696:12;2710:5;2716:1;2710:8;;;;;;;;:::i;:::-;;;;;;;;2668:27;:51::i;:::-;2653:66;;2634:3;;;;;;;2596:134;;;;2746:12;2739:19;;;2457:308;;;;:::o;504:169:5:-;579:7;609:1;605;:5;:61;;641:25;661:1;664;641:19;:25::i;:::-;605:61;;;613:25;633:1;636;613:19;:25::i;:::-;605:61;598:68;;504:169;;;;:::o;793:239::-;866:13;943:1;937:4;930:15;971:1;965:4;958:15;1011:4;1005;995:21;986:30;;793:239;;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:77::-;1388:7;1417:5;1406:16;;1351:77;;;:::o;1434:118::-;1521:24;1539:5;1521:24;:::i;:::-;1516:3;1509:37;1434:118;;:::o;1558:222::-;1651:4;1689:2;1678:9;1674:18;1666:26;;1702:71;1770:1;1759:9;1755:17;1746:6;1702:71;:::i;:::-;1558:222;;;;:::o;1867:117::-;1976:1;1973;1966:12;1990:117;2099:1;2096;2089:12;2113:77;2150:7;2179:5;2168:16;;2113:77;;;:::o;2196:122::-;2269:24;2287:5;2269:24;:::i;:::-;2262:5;2259:35;2249:63;;2308:1;2305;2298:12;2249:63;2196:122;:::o;2324:139::-;2370:5;2408:6;2395:20;2386:29;;2424:33;2451:5;2424:33;:::i;:::-;2324:139;;;;:::o;2469:117::-;2578:1;2575;2568:12;2592:117;2701:1;2698;2691:12;2715:117;2824:1;2821;2814:12;2855:568;2928:8;2938:6;2988:3;2981:4;2973:6;2969:17;2965:27;2955:122;;2996:79;;:::i;:::-;2955:122;3109:6;3096:20;3086:30;;3139:18;3131:6;3128:30;3125:117;;;3161:79;;:::i;:::-;3125:117;3275:4;3267:6;3263:17;3251:29;;3329:3;3321:4;3313:6;3309:17;3299:8;3295:32;3292:41;3289:128;;;3336:79;;:::i;:::-;3289:128;2855:568;;;;;:::o;3429:704::-;3524:6;3532;3540;3589:2;3577:9;3568:7;3564:23;3560:32;3557:119;;;3595:79;;:::i;:::-;3557:119;3715:1;3740:53;3785:7;3776:6;3765:9;3761:22;3740:53;:::i;:::-;3730:63;;3686:117;3870:2;3859:9;3855:18;3842:32;3901:18;3893:6;3890:30;3887:117;;;3923:79;;:::i;:::-;3887:117;4036:80;4108:7;4099:6;4088:9;4084:22;4036:80;:::i;:::-;4018:98;;;;3813:313;3429:704;;;;;:::o;4139:118::-;4226:24;4244:5;4226:24;:::i;:::-;4221:3;4214:37;4139:118;;:::o;4263:222::-;4356:4;4394:2;4383:9;4379:18;4371:26;;4407:71;4475:1;4464:9;4460:17;4451:6;4407:71;:::i;:::-;4263:222;;;;:::o;4491:126::-;4528:7;4568:42;4561:5;4557:54;4546:65;;4491:126;;;:::o;4623:96::-;4660:7;4689:24;4707:5;4689:24;:::i;:::-;4678:35;;4623:96;;;:::o;4725:122::-;4798:24;4816:5;4798:24;:::i;:::-;4791:5;4788:35;4778:63;;4837:1;4834;4827:12;4778:63;4725:122;:::o;4853:139::-;4899:5;4937:6;4924:20;4915:29;;4953:33;4980:5;4953:33;:::i;:::-;4853:139;;;;:::o;4998:329::-;5057:6;5106:2;5094:9;5085:7;5081:23;5077:32;5074:119;;;5112:79;;:::i;:::-;5074:119;5232:1;5257:53;5302:7;5293:6;5282:9;5278:22;5257:53;:::i;:::-;5247:63;;5203:117;4998:329;;;;:::o;5333:90::-;5367:7;5410:5;5403:13;5396:21;5385:32;;5333:90;;;:::o;5429:109::-;5510:21;5525:5;5510:21;:::i;:::-;5505:3;5498:34;5429:109;;:::o;5544:210::-;5631:4;5669:2;5658:9;5654:18;5646:26;;5682:65;5744:1;5733:9;5729:17;5720:6;5682:65;:::i;:::-;5544:210;;;;:::o;5760:60::-;5788:3;5809:5;5802:12;;5760:60;;;:::o;5826:142::-;5876:9;5909:53;5927:34;5936:24;5954:5;5936:24;:::i;:::-;5927:34;:::i;:::-;5909:53;:::i;:::-;5896:66;;5826:142;;;:::o;5974:126::-;6024:9;6057:37;6088:5;6057:37;:::i;:::-;6044:50;;5974:126;;;:::o;6106:145::-;6175:9;6208:37;6239:5;6208:37;:::i;:::-;6195:50;;6106:145;;;:::o;6257:169::-;6363:56;6413:5;6363:56;:::i;:::-;6358:3;6351:69;6257:169;;:::o;6432:260::-;6544:4;6582:2;6571:9;6567:18;6559:26;;6595:90;6682:1;6671:9;6667:17;6658:6;6595:90;:::i;:::-;6432:260;;;;:::o;6698:180::-;6746:77;6743:1;6736:88;6843:4;6840:1;6833:15;6867:4;6864:1;6857:15;6884:320;6928:6;6965:1;6959:4;6955:12;6945:22;;7012:1;7006:4;7002:12;7033:18;7023:81;;7089:4;7081:6;7077:17;7067:27;;7023:81;7151:2;7143:6;7140:14;7120:18;7117:38;7114:84;;7170:18;;:::i;:::-;7114:84;6935:269;6884:320;;;:::o;7210:165::-;7350:17;7346:1;7338:6;7334:14;7327:41;7210:165;:::o;7381:366::-;7523:3;7544:67;7608:2;7603:3;7544:67;:::i;:::-;7537:74;;7620:93;7709:3;7620:93;:::i;:::-;7738:2;7733:3;7729:12;7722:19;;7381:366;;;:::o;7753:419::-;7919:4;7957:2;7946:9;7942:18;7934:26;;8006:9;8000:4;7996:20;7992:1;7981:9;7977:17;7970:47;8034:131;8160:4;8034:131;:::i;:::-;8026:139;;7753:419;;;:::o;8178:94::-;8211:8;8259:5;8255:2;8251:14;8230:35;;8178:94;;;:::o;8278:::-;8317:7;8346:20;8360:5;8346:20;:::i;:::-;8335:31;;8278:94;;;:::o;8378:100::-;8417:7;8446:26;8466:5;8446:26;:::i;:::-;8435:37;;8378:100;;;:::o;8484:157::-;8589:45;8609:24;8627:5;8609:24;:::i;:::-;8589:45;:::i;:::-;8584:3;8577:58;8484:157;;:::o;8647:79::-;8686:7;8715:5;8704:16;;8647:79;;;:::o;8732:157::-;8837:45;8857:24;8875:5;8857:24;:::i;:::-;8837:45;:::i;:::-;8832:3;8825:58;8732:157;;:::o;8895:397::-;9035:3;9050:75;9121:3;9112:6;9050:75;:::i;:::-;9150:2;9145:3;9141:12;9134:19;;9163:75;9234:3;9225:6;9163:75;:::i;:::-;9263:2;9258:3;9254:12;9247:19;;9283:3;9276:10;;8895:397;;;;;:::o;9298:163::-;9438:15;9434:1;9426:6;9422:14;9415:39;9298:163;:::o;9467:366::-;9609:3;9630:67;9694:2;9689:3;9630:67;:::i;:::-;9623:74;;9706:93;9795:3;9706:93;:::i;:::-;9824:2;9819:3;9815:12;9808:19;;9467:366;;;:::o;9839:419::-;10005:4;10043:2;10032:9;10028:18;10020:26;;10092:9;10086:4;10082:20;10078:1;10067:9;10063:17;10056:47;10120:131;10246:4;10120:131;:::i;:::-;10112:139;;9839:419;;;:::o;10264:118::-;10351:24;10369:5;10351:24;:::i;:::-;10346:3;10339:37;10264:118;;:::o;10388:332::-;10509:4;10547:2;10536:9;10532:18;10524:26;;10560:71;10628:1;10617:9;10613:17;10604:6;10560:71;:::i;:::-;10641:72;10709:2;10698:9;10694:18;10685:6;10641:72;:::i;:::-;10388:332;;;;;:::o;10726:116::-;10796:21;10811:5;10796:21;:::i;:::-;10789:5;10786:32;10776:60;;10832:1;10829;10822:12;10776:60;10726:116;:::o;10848:137::-;10902:5;10933:6;10927:13;10918:22;;10949:30;10973:5;10949:30;:::i;:::-;10848:137;;;;:::o;10991:345::-;11058:6;11107:2;11095:9;11086:7;11082:23;11078:32;11075:119;;;11113:79;;:::i;:::-;11075:119;11233:1;11258:61;11311:7;11302:6;11291:9;11287:22;11258:61;:::i;:::-;11248:71;;11204:125;10991:345;;;;:::o;11342:222::-;11435:4;11473:2;11462:9;11458:18;11450:26;;11486:71;11554:1;11543:9;11539:17;11530:6;11486:71;:::i;:::-;11342:222;;;;:::o;11570:143::-;11627:5;11658:6;11652:13;11643:22;;11674:33;11701:5;11674:33;:::i;:::-;11570:143;;;;:::o;11719:351::-;11789:6;11838:2;11826:9;11817:7;11813:23;11809:32;11806:119;;;11844:79;;:::i;:::-;11806:119;11964:1;11989:64;12045:7;12036:6;12025:9;12021:22;11989:64;:::i;:::-;11979:74;;11935:128;11719:351;;;;:::o;12076:180::-;12124:77;12121:1;12114:88;12221:4;12218:1;12211:15;12245:4;12242:1;12235:15"},"methodIdentifiers":{"_balanceOf()":"89ded484","claim(uint256,bytes32[])":"2f52ebb7","claimed(address)":"c884ef83","initialSupply()":"378dc3dc","merkleRoot()":"2eb4a7ab","name()":"06fdde03","symbol()":"95d89b41","token()":"fc0c546a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Airdrop.sol\":\"MyAirdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x631dc1958d5308bd2d9f91190bbcde4f9ffb9d9401ce8d358c17b35f1a942bb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7ef16d9a6f57eae9ab275116eaba1e8de70efd3d0e3682b1585b8f069d9c3f9\",\"dweb:/ipfs/QmR3JQHAyv4sNWnRHeiC6oaz8Bqn8rtzu5sdAqAJRtBqpj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/Airdrop.sol\":{\"keccak256\":\"0xb005bc3350b15b4e1f08dbb0d5f43037fb8cac8f5ad420a57f87a2cdd0e3eaa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cb6ead57db3e7fb0d227b474075cac9a65701914110978b3595a90b51115b16\",\"dweb:/ipfs/QmbwqvEtaZvAyKrBrJsmwMPm7BUepQ6pRBVjHaaxku1kTX\"]},\"contracts/CustomERC20.sol\":{\"keccak256\":\"0x0f8ea2edc7dc8ba847c302a228a75c421670f07e70c95b07451a31b8336f8a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d31fe653beddb60ad600db73eed7f656ff5537f14a09f742c1a26e6383cf307\",\"dweb:/ipfs/Qma8P3HrAxaQR9wMk5fLaFGQwUWEt3RSrR2JfrkAEwFARt\"]}},\"version\":1}"}},"contracts/CustomERC20.sol":{"ERC20Token":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_2068":{"entryPoint":null,"id":2068,"parameterSlots":3,"returnSlots":0},"@_mint_491":{"entryPoint":209,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":345,"id":458,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1155,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1300,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory":{"entryPoint":1321,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2255,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2396,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2411,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2466,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1037,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":894,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1064,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1567,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1460,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2344,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1854,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2237,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2205,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1267,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1819,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1709,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1995,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1113,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1588,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1518,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1967,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":988,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1699,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1937,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2297,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1471,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":941,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1743,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":919,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":924,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1604,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1924,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1795,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1617,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1753,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1277,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1790,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:10778:9","nodeType":"YulBlock","src":"0:10778:9","statements":[{"body":{"nativeSrc":"47:35:9","nodeType":"YulBlock","src":"47:35:9","statements":[{"nativeSrc":"57:19:9","nodeType":"YulAssignment","src":"57:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:9","nodeType":"YulLiteral","src":"73:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:9","nodeType":"YulIdentifier","src":"67:5:9"},"nativeSrc":"67:9:9","nodeType":"YulFunctionCall","src":"67:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:9","nodeType":"YulIdentifier","src":"57:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:9","nodeType":"YulTypedName","src":"40:6:9","type":""}],"src":"7:75:9"},{"body":{"nativeSrc":"177:28:9","nodeType":"YulBlock","src":"177:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:9","nodeType":"YulLiteral","src":"194:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:9","nodeType":"YulLiteral","src":"197:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:9","nodeType":"YulIdentifier","src":"187:6:9"},"nativeSrc":"187:12:9","nodeType":"YulFunctionCall","src":"187:12:9"},"nativeSrc":"187:12:9","nodeType":"YulExpressionStatement","src":"187:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:9","nodeType":"YulFunctionDefinition","src":"88:117:9"},{"body":{"nativeSrc":"300:28:9","nodeType":"YulBlock","src":"300:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:9","nodeType":"YulLiteral","src":"317:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:9","nodeType":"YulLiteral","src":"320:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:9","nodeType":"YulIdentifier","src":"310:6:9"},"nativeSrc":"310:12:9","nodeType":"YulFunctionCall","src":"310:12:9"},"nativeSrc":"310:12:9","nodeType":"YulExpressionStatement","src":"310:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:9","nodeType":"YulFunctionDefinition","src":"211:117:9"},{"body":{"nativeSrc":"423:28:9","nodeType":"YulBlock","src":"423:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:9","nodeType":"YulLiteral","src":"440:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:9","nodeType":"YulLiteral","src":"443:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:9","nodeType":"YulIdentifier","src":"433:6:9"},"nativeSrc":"433:12:9","nodeType":"YulFunctionCall","src":"433:12:9"},"nativeSrc":"433:12:9","nodeType":"YulExpressionStatement","src":"433:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:9","nodeType":"YulFunctionDefinition","src":"334:117:9"},{"body":{"nativeSrc":"546:28:9","nodeType":"YulBlock","src":"546:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:9","nodeType":"YulLiteral","src":"563:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:9","nodeType":"YulLiteral","src":"566:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:9","nodeType":"YulIdentifier","src":"556:6:9"},"nativeSrc":"556:12:9","nodeType":"YulFunctionCall","src":"556:12:9"},"nativeSrc":"556:12:9","nodeType":"YulExpressionStatement","src":"556:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:9","nodeType":"YulFunctionDefinition","src":"457:117:9"},{"body":{"nativeSrc":"628:54:9","nodeType":"YulBlock","src":"628:54:9","statements":[{"nativeSrc":"638:38:9","nodeType":"YulAssignment","src":"638:38:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:9","nodeType":"YulIdentifier","src":"656:5:9"},{"kind":"number","nativeSrc":"663:2:9","nodeType":"YulLiteral","src":"663:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:9","nodeType":"YulIdentifier","src":"652:3:9"},"nativeSrc":"652:14:9","nodeType":"YulFunctionCall","src":"652:14:9"},{"arguments":[{"kind":"number","nativeSrc":"672:2:9","nodeType":"YulLiteral","src":"672:2:9","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:9","nodeType":"YulIdentifier","src":"668:3:9"},"nativeSrc":"668:7:9","nodeType":"YulFunctionCall","src":"668:7:9"}],"functionName":{"name":"and","nativeSrc":"648:3:9","nodeType":"YulIdentifier","src":"648:3:9"},"nativeSrc":"648:28:9","nodeType":"YulFunctionCall","src":"648:28:9"},"variableNames":[{"name":"result","nativeSrc":"638:6:9","nodeType":"YulIdentifier","src":"638:6:9"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:9","nodeType":"YulTypedName","src":"611:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:9","nodeType":"YulTypedName","src":"621:6:9","type":""}],"src":"580:102:9"},{"body":{"nativeSrc":"716:152:9","nodeType":"YulBlock","src":"716:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:9","nodeType":"YulLiteral","src":"733:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:9","nodeType":"YulLiteral","src":"736:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:9","nodeType":"YulIdentifier","src":"726:6:9"},"nativeSrc":"726:88:9","nodeType":"YulFunctionCall","src":"726:88:9"},"nativeSrc":"726:88:9","nodeType":"YulExpressionStatement","src":"726:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:9","nodeType":"YulLiteral","src":"830:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:9","nodeType":"YulLiteral","src":"833:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:9","nodeType":"YulIdentifier","src":"823:6:9"},"nativeSrc":"823:15:9","nodeType":"YulFunctionCall","src":"823:15:9"},"nativeSrc":"823:15:9","nodeType":"YulExpressionStatement","src":"823:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:9","nodeType":"YulLiteral","src":"854:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:9","nodeType":"YulLiteral","src":"857:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:9","nodeType":"YulIdentifier","src":"847:6:9"},"nativeSrc":"847:15:9","nodeType":"YulFunctionCall","src":"847:15:9"},"nativeSrc":"847:15:9","nodeType":"YulExpressionStatement","src":"847:15:9"}]},"name":"panic_error_0x41","nativeSrc":"688:180:9","nodeType":"YulFunctionDefinition","src":"688:180:9"},{"body":{"nativeSrc":"917:238:9","nodeType":"YulBlock","src":"917:238:9","statements":[{"nativeSrc":"927:58:9","nodeType":"YulVariableDeclaration","src":"927:58:9","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:9","nodeType":"YulIdentifier","src":"949:6:9"},{"arguments":[{"name":"size","nativeSrc":"979:4:9","nodeType":"YulIdentifier","src":"979:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:9","nodeType":"YulIdentifier","src":"957:21:9"},"nativeSrc":"957:27:9","nodeType":"YulFunctionCall","src":"957:27:9"}],"functionName":{"name":"add","nativeSrc":"945:3:9","nodeType":"YulIdentifier","src":"945:3:9"},"nativeSrc":"945:40:9","nodeType":"YulFunctionCall","src":"945:40:9"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:9","nodeType":"YulTypedName","src":"931:10:9","type":""}]},{"body":{"nativeSrc":"1096:22:9","nodeType":"YulBlock","src":"1096:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:9","nodeType":"YulIdentifier","src":"1098:16:9"},"nativeSrc":"1098:18:9","nodeType":"YulFunctionCall","src":"1098:18:9"},"nativeSrc":"1098:18:9","nodeType":"YulExpressionStatement","src":"1098:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:9","nodeType":"YulIdentifier","src":"1039:10:9"},{"kind":"number","nativeSrc":"1051:18:9","nodeType":"YulLiteral","src":"1051:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:9","nodeType":"YulIdentifier","src":"1036:2:9"},"nativeSrc":"1036:34:9","nodeType":"YulFunctionCall","src":"1036:34:9"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:9","nodeType":"YulIdentifier","src":"1075:10:9"},{"name":"memPtr","nativeSrc":"1087:6:9","nodeType":"YulIdentifier","src":"1087:6:9"}],"functionName":{"name":"lt","nativeSrc":"1072:2:9","nodeType":"YulIdentifier","src":"1072:2:9"},"nativeSrc":"1072:22:9","nodeType":"YulFunctionCall","src":"1072:22:9"}],"functionName":{"name":"or","nativeSrc":"1033:2:9","nodeType":"YulIdentifier","src":"1033:2:9"},"nativeSrc":"1033:62:9","nodeType":"YulFunctionCall","src":"1033:62:9"},"nativeSrc":"1030:88:9","nodeType":"YulIf","src":"1030:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:9","nodeType":"YulLiteral","src":"1134:2:9","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:9","nodeType":"YulIdentifier","src":"1138:10:9"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:9","nodeType":"YulIdentifier","src":"1127:6:9"},"nativeSrc":"1127:22:9","nodeType":"YulFunctionCall","src":"1127:22:9"},"nativeSrc":"1127:22:9","nodeType":"YulExpressionStatement","src":"1127:22:9"}]},"name":"finalize_allocation","nativeSrc":"874:281:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:9","nodeType":"YulTypedName","src":"903:6:9","type":""},{"name":"size","nativeSrc":"911:4:9","nodeType":"YulTypedName","src":"911:4:9","type":""}],"src":"874:281:9"},{"body":{"nativeSrc":"1202:88:9","nodeType":"YulBlock","src":"1202:88:9","statements":[{"nativeSrc":"1212:30:9","nodeType":"YulAssignment","src":"1212:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:9","nodeType":"YulIdentifier","src":"1222:18:9"},"nativeSrc":"1222:20:9","nodeType":"YulFunctionCall","src":"1222:20:9"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:9","nodeType":"YulIdentifier","src":"1212:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:9","nodeType":"YulIdentifier","src":"1271:6:9"},{"name":"size","nativeSrc":"1279:4:9","nodeType":"YulIdentifier","src":"1279:4:9"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:9","nodeType":"YulIdentifier","src":"1251:19:9"},"nativeSrc":"1251:33:9","nodeType":"YulFunctionCall","src":"1251:33:9"},"nativeSrc":"1251:33:9","nodeType":"YulExpressionStatement","src":"1251:33:9"}]},"name":"allocate_memory","nativeSrc":"1161:129:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:9","nodeType":"YulTypedName","src":"1186:4:9","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:9","nodeType":"YulTypedName","src":"1195:6:9","type":""}],"src":"1161:129:9"},{"body":{"nativeSrc":"1363:241:9","nodeType":"YulBlock","src":"1363:241:9","statements":[{"body":{"nativeSrc":"1468:22:9","nodeType":"YulBlock","src":"1468:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:9","nodeType":"YulIdentifier","src":"1470:16:9"},"nativeSrc":"1470:18:9","nodeType":"YulFunctionCall","src":"1470:18:9"},"nativeSrc":"1470:18:9","nodeType":"YulExpressionStatement","src":"1470:18:9"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:9","nodeType":"YulIdentifier","src":"1440:6:9"},{"kind":"number","nativeSrc":"1448:18:9","nodeType":"YulLiteral","src":"1448:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:9","nodeType":"YulIdentifier","src":"1437:2:9"},"nativeSrc":"1437:30:9","nodeType":"YulFunctionCall","src":"1437:30:9"},"nativeSrc":"1434:56:9","nodeType":"YulIf","src":"1434:56:9"},{"nativeSrc":"1500:37:9","nodeType":"YulAssignment","src":"1500:37:9","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:9","nodeType":"YulIdentifier","src":"1530:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:9","nodeType":"YulIdentifier","src":"1508:21:9"},"nativeSrc":"1508:29:9","nodeType":"YulFunctionCall","src":"1508:29:9"},"variableNames":[{"name":"size","nativeSrc":"1500:4:9","nodeType":"YulIdentifier","src":"1500:4:9"}]},{"nativeSrc":"1574:23:9","nodeType":"YulAssignment","src":"1574:23:9","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:9","nodeType":"YulIdentifier","src":"1586:4:9"},{"kind":"number","nativeSrc":"1592:4:9","nodeType":"YulLiteral","src":"1592:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:9","nodeType":"YulIdentifier","src":"1582:3:9"},"nativeSrc":"1582:15:9","nodeType":"YulFunctionCall","src":"1582:15:9"},"variableNames":[{"name":"size","nativeSrc":"1574:4:9","nodeType":"YulIdentifier","src":"1574:4:9"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:9","nodeType":"YulTypedName","src":"1347:6:9","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:9","nodeType":"YulTypedName","src":"1358:4:9","type":""}],"src":"1296:308:9"},{"body":{"nativeSrc":"1672:186:9","nodeType":"YulBlock","src":"1672:186:9","statements":[{"nativeSrc":"1683:10:9","nodeType":"YulVariableDeclaration","src":"1683:10:9","value":{"kind":"number","nativeSrc":"1692:1:9","nodeType":"YulLiteral","src":"1692:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1687:1:9","nodeType":"YulTypedName","src":"1687:1:9","type":""}]},{"body":{"nativeSrc":"1752:63:9","nodeType":"YulBlock","src":"1752:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1777:3:9","nodeType":"YulIdentifier","src":"1777:3:9"},{"name":"i","nativeSrc":"1782:1:9","nodeType":"YulIdentifier","src":"1782:1:9"}],"functionName":{"name":"add","nativeSrc":"1773:3:9","nodeType":"YulIdentifier","src":"1773:3:9"},"nativeSrc":"1773:11:9","nodeType":"YulFunctionCall","src":"1773:11:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1796:3:9","nodeType":"YulIdentifier","src":"1796:3:9"},{"name":"i","nativeSrc":"1801:1:9","nodeType":"YulIdentifier","src":"1801:1:9"}],"functionName":{"name":"add","nativeSrc":"1792:3:9","nodeType":"YulIdentifier","src":"1792:3:9"},"nativeSrc":"1792:11:9","nodeType":"YulFunctionCall","src":"1792:11:9"}],"functionName":{"name":"mload","nativeSrc":"1786:5:9","nodeType":"YulIdentifier","src":"1786:5:9"},"nativeSrc":"1786:18:9","nodeType":"YulFunctionCall","src":"1786:18:9"}],"functionName":{"name":"mstore","nativeSrc":"1766:6:9","nodeType":"YulIdentifier","src":"1766:6:9"},"nativeSrc":"1766:39:9","nodeType":"YulFunctionCall","src":"1766:39:9"},"nativeSrc":"1766:39:9","nodeType":"YulExpressionStatement","src":"1766:39:9"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1713:1:9","nodeType":"YulIdentifier","src":"1713:1:9"},{"name":"length","nativeSrc":"1716:6:9","nodeType":"YulIdentifier","src":"1716:6:9"}],"functionName":{"name":"lt","nativeSrc":"1710:2:9","nodeType":"YulIdentifier","src":"1710:2:9"},"nativeSrc":"1710:13:9","nodeType":"YulFunctionCall","src":"1710:13:9"},"nativeSrc":"1702:113:9","nodeType":"YulForLoop","post":{"nativeSrc":"1724:19:9","nodeType":"YulBlock","src":"1724:19:9","statements":[{"nativeSrc":"1726:15:9","nodeType":"YulAssignment","src":"1726:15:9","value":{"arguments":[{"name":"i","nativeSrc":"1735:1:9","nodeType":"YulIdentifier","src":"1735:1:9"},{"kind":"number","nativeSrc":"1738:2:9","nodeType":"YulLiteral","src":"1738:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1731:3:9","nodeType":"YulIdentifier","src":"1731:3:9"},"nativeSrc":"1731:10:9","nodeType":"YulFunctionCall","src":"1731:10:9"},"variableNames":[{"name":"i","nativeSrc":"1726:1:9","nodeType":"YulIdentifier","src":"1726:1:9"}]}]},"pre":{"nativeSrc":"1706:3:9","nodeType":"YulBlock","src":"1706:3:9","statements":[]},"src":"1702:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1835:3:9","nodeType":"YulIdentifier","src":"1835:3:9"},{"name":"length","nativeSrc":"1840:6:9","nodeType":"YulIdentifier","src":"1840:6:9"}],"functionName":{"name":"add","nativeSrc":"1831:3:9","nodeType":"YulIdentifier","src":"1831:3:9"},"nativeSrc":"1831:16:9","nodeType":"YulFunctionCall","src":"1831:16:9"},{"kind":"number","nativeSrc":"1849:1:9","nodeType":"YulLiteral","src":"1849:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:9","nodeType":"YulIdentifier","src":"1824:6:9"},"nativeSrc":"1824:27:9","nodeType":"YulFunctionCall","src":"1824:27:9"},"nativeSrc":"1824:27:9","nodeType":"YulExpressionStatement","src":"1824:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1610:248:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1654:3:9","nodeType":"YulTypedName","src":"1654:3:9","type":""},{"name":"dst","nativeSrc":"1659:3:9","nodeType":"YulTypedName","src":"1659:3:9","type":""},{"name":"length","nativeSrc":"1664:6:9","nodeType":"YulTypedName","src":"1664:6:9","type":""}],"src":"1610:248:9"},{"body":{"nativeSrc":"1959:339:9","nodeType":"YulBlock","src":"1959:339:9","statements":[{"nativeSrc":"1969:75:9","nodeType":"YulAssignment","src":"1969:75:9","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2036:6:9","nodeType":"YulIdentifier","src":"2036:6:9"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1994:41:9","nodeType":"YulIdentifier","src":"1994:41:9"},"nativeSrc":"1994:49:9","nodeType":"YulFunctionCall","src":"1994:49:9"}],"functionName":{"name":"allocate_memory","nativeSrc":"1978:15:9","nodeType":"YulIdentifier","src":"1978:15:9"},"nativeSrc":"1978:66:9","nodeType":"YulFunctionCall","src":"1978:66:9"},"variableNames":[{"name":"array","nativeSrc":"1969:5:9","nodeType":"YulIdentifier","src":"1969:5:9"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2060:5:9","nodeType":"YulIdentifier","src":"2060:5:9"},{"name":"length","nativeSrc":"2067:6:9","nodeType":"YulIdentifier","src":"2067:6:9"}],"functionName":{"name":"mstore","nativeSrc":"2053:6:9","nodeType":"YulIdentifier","src":"2053:6:9"},"nativeSrc":"2053:21:9","nodeType":"YulFunctionCall","src":"2053:21:9"},"nativeSrc":"2053:21:9","nodeType":"YulExpressionStatement","src":"2053:21:9"},{"nativeSrc":"2083:27:9","nodeType":"YulVariableDeclaration","src":"2083:27:9","value":{"arguments":[{"name":"array","nativeSrc":"2098:5:9","nodeType":"YulIdentifier","src":"2098:5:9"},{"kind":"number","nativeSrc":"2105:4:9","nodeType":"YulLiteral","src":"2105:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2094:3:9","nodeType":"YulIdentifier","src":"2094:3:9"},"nativeSrc":"2094:16:9","nodeType":"YulFunctionCall","src":"2094:16:9"},"variables":[{"name":"dst","nativeSrc":"2087:3:9","nodeType":"YulTypedName","src":"2087:3:9","type":""}]},{"body":{"nativeSrc":"2148:83:9","nodeType":"YulBlock","src":"2148:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2150:77:9","nodeType":"YulIdentifier","src":"2150:77:9"},"nativeSrc":"2150:79:9","nodeType":"YulFunctionCall","src":"2150:79:9"},"nativeSrc":"2150:79:9","nodeType":"YulExpressionStatement","src":"2150:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2129:3:9","nodeType":"YulIdentifier","src":"2129:3:9"},{"name":"length","nativeSrc":"2134:6:9","nodeType":"YulIdentifier","src":"2134:6:9"}],"functionName":{"name":"add","nativeSrc":"2125:3:9","nodeType":"YulIdentifier","src":"2125:3:9"},"nativeSrc":"2125:16:9","nodeType":"YulFunctionCall","src":"2125:16:9"},{"name":"end","nativeSrc":"2143:3:9","nodeType":"YulIdentifier","src":"2143:3:9"}],"functionName":{"name":"gt","nativeSrc":"2122:2:9","nodeType":"YulIdentifier","src":"2122:2:9"},"nativeSrc":"2122:25:9","nodeType":"YulFunctionCall","src":"2122:25:9"},"nativeSrc":"2119:112:9","nodeType":"YulIf","src":"2119:112:9"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2275:3:9","nodeType":"YulIdentifier","src":"2275:3:9"},{"name":"dst","nativeSrc":"2280:3:9","nodeType":"YulIdentifier","src":"2280:3:9"},{"name":"length","nativeSrc":"2285:6:9","nodeType":"YulIdentifier","src":"2285:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2240:34:9","nodeType":"YulIdentifier","src":"2240:34:9"},"nativeSrc":"2240:52:9","nodeType":"YulFunctionCall","src":"2240:52:9"},"nativeSrc":"2240:52:9","nodeType":"YulExpressionStatement","src":"2240:52:9"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"1864:434:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1932:3:9","nodeType":"YulTypedName","src":"1932:3:9","type":""},{"name":"length","nativeSrc":"1937:6:9","nodeType":"YulTypedName","src":"1937:6:9","type":""},{"name":"end","nativeSrc":"1945:3:9","nodeType":"YulTypedName","src":"1945:3:9","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1953:5:9","nodeType":"YulTypedName","src":"1953:5:9","type":""}],"src":"1864:434:9"},{"body":{"nativeSrc":"2391:282:9","nodeType":"YulBlock","src":"2391:282:9","statements":[{"body":{"nativeSrc":"2440:83:9","nodeType":"YulBlock","src":"2440:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2442:77:9","nodeType":"YulIdentifier","src":"2442:77:9"},"nativeSrc":"2442:79:9","nodeType":"YulFunctionCall","src":"2442:79:9"},"nativeSrc":"2442:79:9","nodeType":"YulExpressionStatement","src":"2442:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2419:6:9","nodeType":"YulIdentifier","src":"2419:6:9"},{"kind":"number","nativeSrc":"2427:4:9","nodeType":"YulLiteral","src":"2427:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2415:3:9","nodeType":"YulIdentifier","src":"2415:3:9"},"nativeSrc":"2415:17:9","nodeType":"YulFunctionCall","src":"2415:17:9"},{"name":"end","nativeSrc":"2434:3:9","nodeType":"YulIdentifier","src":"2434:3:9"}],"functionName":{"name":"slt","nativeSrc":"2411:3:9","nodeType":"YulIdentifier","src":"2411:3:9"},"nativeSrc":"2411:27:9","nodeType":"YulFunctionCall","src":"2411:27:9"}],"functionName":{"name":"iszero","nativeSrc":"2404:6:9","nodeType":"YulIdentifier","src":"2404:6:9"},"nativeSrc":"2404:35:9","nodeType":"YulFunctionCall","src":"2404:35:9"},"nativeSrc":"2401:122:9","nodeType":"YulIf","src":"2401:122:9"},{"nativeSrc":"2532:27:9","nodeType":"YulVariableDeclaration","src":"2532:27:9","value":{"arguments":[{"name":"offset","nativeSrc":"2552:6:9","nodeType":"YulIdentifier","src":"2552:6:9"}],"functionName":{"name":"mload","nativeSrc":"2546:5:9","nodeType":"YulIdentifier","src":"2546:5:9"},"nativeSrc":"2546:13:9","nodeType":"YulFunctionCall","src":"2546:13:9"},"variables":[{"name":"length","nativeSrc":"2536:6:9","nodeType":"YulTypedName","src":"2536:6:9","type":""}]},{"nativeSrc":"2568:99:9","nodeType":"YulAssignment","src":"2568:99:9","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2640:6:9","nodeType":"YulIdentifier","src":"2640:6:9"},{"kind":"number","nativeSrc":"2648:4:9","nodeType":"YulLiteral","src":"2648:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2636:3:9","nodeType":"YulIdentifier","src":"2636:3:9"},"nativeSrc":"2636:17:9","nodeType":"YulFunctionCall","src":"2636:17:9"},{"name":"length","nativeSrc":"2655:6:9","nodeType":"YulIdentifier","src":"2655:6:9"},{"name":"end","nativeSrc":"2663:3:9","nodeType":"YulIdentifier","src":"2663:3:9"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2577:58:9","nodeType":"YulIdentifier","src":"2577:58:9"},"nativeSrc":"2577:90:9","nodeType":"YulFunctionCall","src":"2577:90:9"},"variableNames":[{"name":"array","nativeSrc":"2568:5:9","nodeType":"YulIdentifier","src":"2568:5:9"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2318:355:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2369:6:9","nodeType":"YulTypedName","src":"2369:6:9","type":""},{"name":"end","nativeSrc":"2377:3:9","nodeType":"YulTypedName","src":"2377:3:9","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2385:5:9","nodeType":"YulTypedName","src":"2385:5:9","type":""}],"src":"2318:355:9"},{"body":{"nativeSrc":"2724:32:9","nodeType":"YulBlock","src":"2724:32:9","statements":[{"nativeSrc":"2734:16:9","nodeType":"YulAssignment","src":"2734:16:9","value":{"name":"value","nativeSrc":"2745:5:9","nodeType":"YulIdentifier","src":"2745:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"2734:7:9","nodeType":"YulIdentifier","src":"2734:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2679:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2706:5:9","nodeType":"YulTypedName","src":"2706:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2716:7:9","nodeType":"YulTypedName","src":"2716:7:9","type":""}],"src":"2679:77:9"},{"body":{"nativeSrc":"2805:79:9","nodeType":"YulBlock","src":"2805:79:9","statements":[{"body":{"nativeSrc":"2862:16:9","nodeType":"YulBlock","src":"2862:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2871:1:9","nodeType":"YulLiteral","src":"2871:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2874:1:9","nodeType":"YulLiteral","src":"2874:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2864:6:9","nodeType":"YulIdentifier","src":"2864:6:9"},"nativeSrc":"2864:12:9","nodeType":"YulFunctionCall","src":"2864:12:9"},"nativeSrc":"2864:12:9","nodeType":"YulExpressionStatement","src":"2864:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2828:5:9","nodeType":"YulIdentifier","src":"2828:5:9"},{"arguments":[{"name":"value","nativeSrc":"2853:5:9","nodeType":"YulIdentifier","src":"2853:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2835:17:9","nodeType":"YulIdentifier","src":"2835:17:9"},"nativeSrc":"2835:24:9","nodeType":"YulFunctionCall","src":"2835:24:9"}],"functionName":{"name":"eq","nativeSrc":"2825:2:9","nodeType":"YulIdentifier","src":"2825:2:9"},"nativeSrc":"2825:35:9","nodeType":"YulFunctionCall","src":"2825:35:9"}],"functionName":{"name":"iszero","nativeSrc":"2818:6:9","nodeType":"YulIdentifier","src":"2818:6:9"},"nativeSrc":"2818:43:9","nodeType":"YulFunctionCall","src":"2818:43:9"},"nativeSrc":"2815:63:9","nodeType":"YulIf","src":"2815:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"2762:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2798:5:9","nodeType":"YulTypedName","src":"2798:5:9","type":""}],"src":"2762:122:9"},{"body":{"nativeSrc":"2953:80:9","nodeType":"YulBlock","src":"2953:80:9","statements":[{"nativeSrc":"2963:22:9","nodeType":"YulAssignment","src":"2963:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"2978:6:9","nodeType":"YulIdentifier","src":"2978:6:9"}],"functionName":{"name":"mload","nativeSrc":"2972:5:9","nodeType":"YulIdentifier","src":"2972:5:9"},"nativeSrc":"2972:13:9","nodeType":"YulFunctionCall","src":"2972:13:9"},"variableNames":[{"name":"value","nativeSrc":"2963:5:9","nodeType":"YulIdentifier","src":"2963:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3021:5:9","nodeType":"YulIdentifier","src":"3021:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2994:26:9","nodeType":"YulIdentifier","src":"2994:26:9"},"nativeSrc":"2994:33:9","nodeType":"YulFunctionCall","src":"2994:33:9"},"nativeSrc":"2994:33:9","nodeType":"YulExpressionStatement","src":"2994:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2890:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2931:6:9","nodeType":"YulTypedName","src":"2931:6:9","type":""},{"name":"end","nativeSrc":"2939:3:9","nodeType":"YulTypedName","src":"2939:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2947:5:9","nodeType":"YulTypedName","src":"2947:5:9","type":""}],"src":"2890:143:9"},{"body":{"nativeSrc":"3170:878:9","nodeType":"YulBlock","src":"3170:878:9","statements":[{"body":{"nativeSrc":"3216:83:9","nodeType":"YulBlock","src":"3216:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3218:77:9","nodeType":"YulIdentifier","src":"3218:77:9"},"nativeSrc":"3218:79:9","nodeType":"YulFunctionCall","src":"3218:79:9"},"nativeSrc":"3218:79:9","nodeType":"YulExpressionStatement","src":"3218:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3191:7:9","nodeType":"YulIdentifier","src":"3191:7:9"},{"name":"headStart","nativeSrc":"3200:9:9","nodeType":"YulIdentifier","src":"3200:9:9"}],"functionName":{"name":"sub","nativeSrc":"3187:3:9","nodeType":"YulIdentifier","src":"3187:3:9"},"nativeSrc":"3187:23:9","nodeType":"YulFunctionCall","src":"3187:23:9"},{"kind":"number","nativeSrc":"3212:2:9","nodeType":"YulLiteral","src":"3212:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3183:3:9","nodeType":"YulIdentifier","src":"3183:3:9"},"nativeSrc":"3183:32:9","nodeType":"YulFunctionCall","src":"3183:32:9"},"nativeSrc":"3180:119:9","nodeType":"YulIf","src":"3180:119:9"},{"nativeSrc":"3309:291:9","nodeType":"YulBlock","src":"3309:291:9","statements":[{"nativeSrc":"3324:38:9","nodeType":"YulVariableDeclaration","src":"3324:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3348:9:9","nodeType":"YulIdentifier","src":"3348:9:9"},{"kind":"number","nativeSrc":"3359:1:9","nodeType":"YulLiteral","src":"3359:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3344:3:9","nodeType":"YulIdentifier","src":"3344:3:9"},"nativeSrc":"3344:17:9","nodeType":"YulFunctionCall","src":"3344:17:9"}],"functionName":{"name":"mload","nativeSrc":"3338:5:9","nodeType":"YulIdentifier","src":"3338:5:9"},"nativeSrc":"3338:24:9","nodeType":"YulFunctionCall","src":"3338:24:9"},"variables":[{"name":"offset","nativeSrc":"3328:6:9","nodeType":"YulTypedName","src":"3328:6:9","type":""}]},{"body":{"nativeSrc":"3409:83:9","nodeType":"YulBlock","src":"3409:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3411:77:9","nodeType":"YulIdentifier","src":"3411:77:9"},"nativeSrc":"3411:79:9","nodeType":"YulFunctionCall","src":"3411:79:9"},"nativeSrc":"3411:79:9","nodeType":"YulExpressionStatement","src":"3411:79:9"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3381:6:9","nodeType":"YulIdentifier","src":"3381:6:9"},{"kind":"number","nativeSrc":"3389:18:9","nodeType":"YulLiteral","src":"3389:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3378:2:9","nodeType":"YulIdentifier","src":"3378:2:9"},"nativeSrc":"3378:30:9","nodeType":"YulFunctionCall","src":"3378:30:9"},"nativeSrc":"3375:117:9","nodeType":"YulIf","src":"3375:117:9"},{"nativeSrc":"3506:84:9","nodeType":"YulAssignment","src":"3506:84:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3562:9:9","nodeType":"YulIdentifier","src":"3562:9:9"},{"name":"offset","nativeSrc":"3573:6:9","nodeType":"YulIdentifier","src":"3573:6:9"}],"functionName":{"name":"add","nativeSrc":"3558:3:9","nodeType":"YulIdentifier","src":"3558:3:9"},"nativeSrc":"3558:22:9","nodeType":"YulFunctionCall","src":"3558:22:9"},{"name":"dataEnd","nativeSrc":"3582:7:9","nodeType":"YulIdentifier","src":"3582:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3516:41:9","nodeType":"YulIdentifier","src":"3516:41:9"},"nativeSrc":"3516:74:9","nodeType":"YulFunctionCall","src":"3516:74:9"},"variableNames":[{"name":"value0","nativeSrc":"3506:6:9","nodeType":"YulIdentifier","src":"3506:6:9"}]}]},{"nativeSrc":"3610:292:9","nodeType":"YulBlock","src":"3610:292:9","statements":[{"nativeSrc":"3625:39:9","nodeType":"YulVariableDeclaration","src":"3625:39:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3649:9:9","nodeType":"YulIdentifier","src":"3649:9:9"},{"kind":"number","nativeSrc":"3660:2:9","nodeType":"YulLiteral","src":"3660:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3645:3:9","nodeType":"YulIdentifier","src":"3645:3:9"},"nativeSrc":"3645:18:9","nodeType":"YulFunctionCall","src":"3645:18:9"}],"functionName":{"name":"mload","nativeSrc":"3639:5:9","nodeType":"YulIdentifier","src":"3639:5:9"},"nativeSrc":"3639:25:9","nodeType":"YulFunctionCall","src":"3639:25:9"},"variables":[{"name":"offset","nativeSrc":"3629:6:9","nodeType":"YulTypedName","src":"3629:6:9","type":""}]},{"body":{"nativeSrc":"3711:83:9","nodeType":"YulBlock","src":"3711:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3713:77:9","nodeType":"YulIdentifier","src":"3713:77:9"},"nativeSrc":"3713:79:9","nodeType":"YulFunctionCall","src":"3713:79:9"},"nativeSrc":"3713:79:9","nodeType":"YulExpressionStatement","src":"3713:79:9"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3683:6:9","nodeType":"YulIdentifier","src":"3683:6:9"},{"kind":"number","nativeSrc":"3691:18:9","nodeType":"YulLiteral","src":"3691:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3680:2:9","nodeType":"YulIdentifier","src":"3680:2:9"},"nativeSrc":"3680:30:9","nodeType":"YulFunctionCall","src":"3680:30:9"},"nativeSrc":"3677:117:9","nodeType":"YulIf","src":"3677:117:9"},{"nativeSrc":"3808:84:9","nodeType":"YulAssignment","src":"3808:84:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3864:9:9","nodeType":"YulIdentifier","src":"3864:9:9"},{"name":"offset","nativeSrc":"3875:6:9","nodeType":"YulIdentifier","src":"3875:6:9"}],"functionName":{"name":"add","nativeSrc":"3860:3:9","nodeType":"YulIdentifier","src":"3860:3:9"},"nativeSrc":"3860:22:9","nodeType":"YulFunctionCall","src":"3860:22:9"},{"name":"dataEnd","nativeSrc":"3884:7:9","nodeType":"YulIdentifier","src":"3884:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3818:41:9","nodeType":"YulIdentifier","src":"3818:41:9"},"nativeSrc":"3818:74:9","nodeType":"YulFunctionCall","src":"3818:74:9"},"variableNames":[{"name":"value1","nativeSrc":"3808:6:9","nodeType":"YulIdentifier","src":"3808:6:9"}]}]},{"nativeSrc":"3912:129:9","nodeType":"YulBlock","src":"3912:129:9","statements":[{"nativeSrc":"3927:16:9","nodeType":"YulVariableDeclaration","src":"3927:16:9","value":{"kind":"number","nativeSrc":"3941:2:9","nodeType":"YulLiteral","src":"3941:2:9","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3931:6:9","nodeType":"YulTypedName","src":"3931:6:9","type":""}]},{"nativeSrc":"3957:74:9","nodeType":"YulAssignment","src":"3957:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4003:9:9","nodeType":"YulIdentifier","src":"4003:9:9"},{"name":"offset","nativeSrc":"4014:6:9","nodeType":"YulIdentifier","src":"4014:6:9"}],"functionName":{"name":"add","nativeSrc":"3999:3:9","nodeType":"YulIdentifier","src":"3999:3:9"},"nativeSrc":"3999:22:9","nodeType":"YulFunctionCall","src":"3999:22:9"},{"name":"dataEnd","nativeSrc":"4023:7:9","nodeType":"YulIdentifier","src":"4023:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3967:31:9","nodeType":"YulIdentifier","src":"3967:31:9"},"nativeSrc":"3967:64:9","nodeType":"YulFunctionCall","src":"3967:64:9"},"variableNames":[{"name":"value2","nativeSrc":"3957:6:9","nodeType":"YulIdentifier","src":"3957:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory","nativeSrc":"3039:1009:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3124:9:9","nodeType":"YulTypedName","src":"3124:9:9","type":""},{"name":"dataEnd","nativeSrc":"3135:7:9","nodeType":"YulTypedName","src":"3135:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3147:6:9","nodeType":"YulTypedName","src":"3147:6:9","type":""},{"name":"value1","nativeSrc":"3155:6:9","nodeType":"YulTypedName","src":"3155:6:9","type":""},{"name":"value2","nativeSrc":"3163:6:9","nodeType":"YulTypedName","src":"3163:6:9","type":""}],"src":"3039:1009:9"},{"body":{"nativeSrc":"4113:40:9","nodeType":"YulBlock","src":"4113:40:9","statements":[{"nativeSrc":"4124:22:9","nodeType":"YulAssignment","src":"4124:22:9","value":{"arguments":[{"name":"value","nativeSrc":"4140:5:9","nodeType":"YulIdentifier","src":"4140:5:9"}],"functionName":{"name":"mload","nativeSrc":"4134:5:9","nodeType":"YulIdentifier","src":"4134:5:9"},"nativeSrc":"4134:12:9","nodeType":"YulFunctionCall","src":"4134:12:9"},"variableNames":[{"name":"length","nativeSrc":"4124:6:9","nodeType":"YulIdentifier","src":"4124:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4054:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4096:5:9","nodeType":"YulTypedName","src":"4096:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4106:6:9","nodeType":"YulTypedName","src":"4106:6:9","type":""}],"src":"4054:99:9"},{"body":{"nativeSrc":"4187:152:9","nodeType":"YulBlock","src":"4187:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4204:1:9","nodeType":"YulLiteral","src":"4204:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"4207:77:9","nodeType":"YulLiteral","src":"4207:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4197:6:9","nodeType":"YulIdentifier","src":"4197:6:9"},"nativeSrc":"4197:88:9","nodeType":"YulFunctionCall","src":"4197:88:9"},"nativeSrc":"4197:88:9","nodeType":"YulExpressionStatement","src":"4197:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4301:1:9","nodeType":"YulLiteral","src":"4301:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"4304:4:9","nodeType":"YulLiteral","src":"4304:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4294:6:9","nodeType":"YulIdentifier","src":"4294:6:9"},"nativeSrc":"4294:15:9","nodeType":"YulFunctionCall","src":"4294:15:9"},"nativeSrc":"4294:15:9","nodeType":"YulExpressionStatement","src":"4294:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4325:1:9","nodeType":"YulLiteral","src":"4325:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"4328:4:9","nodeType":"YulLiteral","src":"4328:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4318:6:9","nodeType":"YulIdentifier","src":"4318:6:9"},"nativeSrc":"4318:15:9","nodeType":"YulFunctionCall","src":"4318:15:9"},"nativeSrc":"4318:15:9","nodeType":"YulExpressionStatement","src":"4318:15:9"}]},"name":"panic_error_0x22","nativeSrc":"4159:180:9","nodeType":"YulFunctionDefinition","src":"4159:180:9"},{"body":{"nativeSrc":"4396:269:9","nodeType":"YulBlock","src":"4396:269:9","statements":[{"nativeSrc":"4406:22:9","nodeType":"YulAssignment","src":"4406:22:9","value":{"arguments":[{"name":"data","nativeSrc":"4420:4:9","nodeType":"YulIdentifier","src":"4420:4:9"},{"kind":"number","nativeSrc":"4426:1:9","nodeType":"YulLiteral","src":"4426:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4416:3:9","nodeType":"YulIdentifier","src":"4416:3:9"},"nativeSrc":"4416:12:9","nodeType":"YulFunctionCall","src":"4416:12:9"},"variableNames":[{"name":"length","nativeSrc":"4406:6:9","nodeType":"YulIdentifier","src":"4406:6:9"}]},{"nativeSrc":"4437:38:9","nodeType":"YulVariableDeclaration","src":"4437:38:9","value":{"arguments":[{"name":"data","nativeSrc":"4467:4:9","nodeType":"YulIdentifier","src":"4467:4:9"},{"kind":"number","nativeSrc":"4473:1:9","nodeType":"YulLiteral","src":"4473:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4463:3:9","nodeType":"YulIdentifier","src":"4463:3:9"},"nativeSrc":"4463:12:9","nodeType":"YulFunctionCall","src":"4463:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4441:18:9","nodeType":"YulTypedName","src":"4441:18:9","type":""}]},{"body":{"nativeSrc":"4514:51:9","nodeType":"YulBlock","src":"4514:51:9","statements":[{"nativeSrc":"4528:27:9","nodeType":"YulAssignment","src":"4528:27:9","value":{"arguments":[{"name":"length","nativeSrc":"4542:6:9","nodeType":"YulIdentifier","src":"4542:6:9"},{"kind":"number","nativeSrc":"4550:4:9","nodeType":"YulLiteral","src":"4550:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4538:3:9","nodeType":"YulIdentifier","src":"4538:3:9"},"nativeSrc":"4538:17:9","nodeType":"YulFunctionCall","src":"4538:17:9"},"variableNames":[{"name":"length","nativeSrc":"4528:6:9","nodeType":"YulIdentifier","src":"4528:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4494:18:9","nodeType":"YulIdentifier","src":"4494:18:9"}],"functionName":{"name":"iszero","nativeSrc":"4487:6:9","nodeType":"YulIdentifier","src":"4487:6:9"},"nativeSrc":"4487:26:9","nodeType":"YulFunctionCall","src":"4487:26:9"},"nativeSrc":"4484:81:9","nodeType":"YulIf","src":"4484:81:9"},{"body":{"nativeSrc":"4617:42:9","nodeType":"YulBlock","src":"4617:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4631:16:9","nodeType":"YulIdentifier","src":"4631:16:9"},"nativeSrc":"4631:18:9","nodeType":"YulFunctionCall","src":"4631:18:9"},"nativeSrc":"4631:18:9","nodeType":"YulExpressionStatement","src":"4631:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4581:18:9","nodeType":"YulIdentifier","src":"4581:18:9"},{"arguments":[{"name":"length","nativeSrc":"4604:6:9","nodeType":"YulIdentifier","src":"4604:6:9"},{"kind":"number","nativeSrc":"4612:2:9","nodeType":"YulLiteral","src":"4612:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4601:2:9","nodeType":"YulIdentifier","src":"4601:2:9"},"nativeSrc":"4601:14:9","nodeType":"YulFunctionCall","src":"4601:14:9"}],"functionName":{"name":"eq","nativeSrc":"4578:2:9","nodeType":"YulIdentifier","src":"4578:2:9"},"nativeSrc":"4578:38:9","nodeType":"YulFunctionCall","src":"4578:38:9"},"nativeSrc":"4575:84:9","nodeType":"YulIf","src":"4575:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"4345:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4380:4:9","nodeType":"YulTypedName","src":"4380:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4389:6:9","nodeType":"YulTypedName","src":"4389:6:9","type":""}],"src":"4345:320:9"},{"body":{"nativeSrc":"4725:87:9","nodeType":"YulBlock","src":"4725:87:9","statements":[{"nativeSrc":"4735:11:9","nodeType":"YulAssignment","src":"4735:11:9","value":{"name":"ptr","nativeSrc":"4743:3:9","nodeType":"YulIdentifier","src":"4743:3:9"},"variableNames":[{"name":"data","nativeSrc":"4735:4:9","nodeType":"YulIdentifier","src":"4735:4:9"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4763:1:9","nodeType":"YulLiteral","src":"4763:1:9","type":"","value":"0"},{"name":"ptr","nativeSrc":"4766:3:9","nodeType":"YulIdentifier","src":"4766:3:9"}],"functionName":{"name":"mstore","nativeSrc":"4756:6:9","nodeType":"YulIdentifier","src":"4756:6:9"},"nativeSrc":"4756:14:9","nodeType":"YulFunctionCall","src":"4756:14:9"},"nativeSrc":"4756:14:9","nodeType":"YulExpressionStatement","src":"4756:14:9"},{"nativeSrc":"4779:26:9","nodeType":"YulAssignment","src":"4779:26:9","value":{"arguments":[{"kind":"number","nativeSrc":"4797:1:9","nodeType":"YulLiteral","src":"4797:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"4800:4:9","nodeType":"YulLiteral","src":"4800:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4787:9:9","nodeType":"YulIdentifier","src":"4787:9:9"},"nativeSrc":"4787:18:9","nodeType":"YulFunctionCall","src":"4787:18:9"},"variableNames":[{"name":"data","nativeSrc":"4779:4:9","nodeType":"YulIdentifier","src":"4779:4:9"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4671:141:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4712:3:9","nodeType":"YulTypedName","src":"4712:3:9","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4720:4:9","nodeType":"YulTypedName","src":"4720:4:9","type":""}],"src":"4671:141:9"},{"body":{"nativeSrc":"4862:49:9","nodeType":"YulBlock","src":"4862:49:9","statements":[{"nativeSrc":"4872:33:9","nodeType":"YulAssignment","src":"4872:33:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4890:5:9","nodeType":"YulIdentifier","src":"4890:5:9"},{"kind":"number","nativeSrc":"4897:2:9","nodeType":"YulLiteral","src":"4897:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4886:3:9","nodeType":"YulIdentifier","src":"4886:3:9"},"nativeSrc":"4886:14:9","nodeType":"YulFunctionCall","src":"4886:14:9"},{"kind":"number","nativeSrc":"4902:2:9","nodeType":"YulLiteral","src":"4902:2:9","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4882:3:9","nodeType":"YulIdentifier","src":"4882:3:9"},"nativeSrc":"4882:23:9","nodeType":"YulFunctionCall","src":"4882:23:9"},"variableNames":[{"name":"result","nativeSrc":"4872:6:9","nodeType":"YulIdentifier","src":"4872:6:9"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4818:93:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4845:5:9","nodeType":"YulTypedName","src":"4845:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4855:6:9","nodeType":"YulTypedName","src":"4855:6:9","type":""}],"src":"4818:93:9"},{"body":{"nativeSrc":"4970:54:9","nodeType":"YulBlock","src":"4970:54:9","statements":[{"nativeSrc":"4980:37:9","nodeType":"YulAssignment","src":"4980:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"5005:4:9","nodeType":"YulIdentifier","src":"5005:4:9"},{"name":"value","nativeSrc":"5011:5:9","nodeType":"YulIdentifier","src":"5011:5:9"}],"functionName":{"name":"shl","nativeSrc":"5001:3:9","nodeType":"YulIdentifier","src":"5001:3:9"},"nativeSrc":"5001:16:9","nodeType":"YulFunctionCall","src":"5001:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"4980:8:9","nodeType":"YulIdentifier","src":"4980:8:9"}]}]},"name":"shift_left_dynamic","nativeSrc":"4917:107:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4945:4:9","nodeType":"YulTypedName","src":"4945:4:9","type":""},{"name":"value","nativeSrc":"4951:5:9","nodeType":"YulTypedName","src":"4951:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4961:8:9","nodeType":"YulTypedName","src":"4961:8:9","type":""}],"src":"4917:107:9"},{"body":{"nativeSrc":"5106:317:9","nodeType":"YulBlock","src":"5106:317:9","statements":[{"nativeSrc":"5116:35:9","nodeType":"YulVariableDeclaration","src":"5116:35:9","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"5137:10:9","nodeType":"YulIdentifier","src":"5137:10:9"},{"kind":"number","nativeSrc":"5149:1:9","nodeType":"YulLiteral","src":"5149:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"5133:3:9","nodeType":"YulIdentifier","src":"5133:3:9"},"nativeSrc":"5133:18:9","nodeType":"YulFunctionCall","src":"5133:18:9"},"variables":[{"name":"shiftBits","nativeSrc":"5120:9:9","nodeType":"YulTypedName","src":"5120:9:9","type":""}]},{"nativeSrc":"5160:109:9","nodeType":"YulVariableDeclaration","src":"5160:109:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5191:9:9","nodeType":"YulIdentifier","src":"5191:9:9"},{"kind":"number","nativeSrc":"5202:66:9","nodeType":"YulLiteral","src":"5202:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5172:18:9","nodeType":"YulIdentifier","src":"5172:18:9"},"nativeSrc":"5172:97:9","nodeType":"YulFunctionCall","src":"5172:97:9"},"variables":[{"name":"mask","nativeSrc":"5164:4:9","nodeType":"YulTypedName","src":"5164:4:9","type":""}]},{"nativeSrc":"5278:51:9","nodeType":"YulAssignment","src":"5278:51:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5309:9:9","nodeType":"YulIdentifier","src":"5309:9:9"},{"name":"toInsert","nativeSrc":"5320:8:9","nodeType":"YulIdentifier","src":"5320:8:9"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5290:18:9","nodeType":"YulIdentifier","src":"5290:18:9"},"nativeSrc":"5290:39:9","nodeType":"YulFunctionCall","src":"5290:39:9"},"variableNames":[{"name":"toInsert","nativeSrc":"5278:8:9","nodeType":"YulIdentifier","src":"5278:8:9"}]},{"nativeSrc":"5338:30:9","nodeType":"YulAssignment","src":"5338:30:9","value":{"arguments":[{"name":"value","nativeSrc":"5351:5:9","nodeType":"YulIdentifier","src":"5351:5:9"},{"arguments":[{"name":"mask","nativeSrc":"5362:4:9","nodeType":"YulIdentifier","src":"5362:4:9"}],"functionName":{"name":"not","nativeSrc":"5358:3:9","nodeType":"YulIdentifier","src":"5358:3:9"},"nativeSrc":"5358:9:9","nodeType":"YulFunctionCall","src":"5358:9:9"}],"functionName":{"name":"and","nativeSrc":"5347:3:9","nodeType":"YulIdentifier","src":"5347:3:9"},"nativeSrc":"5347:21:9","nodeType":"YulFunctionCall","src":"5347:21:9"},"variableNames":[{"name":"value","nativeSrc":"5338:5:9","nodeType":"YulIdentifier","src":"5338:5:9"}]},{"nativeSrc":"5377:40:9","nodeType":"YulAssignment","src":"5377:40:9","value":{"arguments":[{"name":"value","nativeSrc":"5390:5:9","nodeType":"YulIdentifier","src":"5390:5:9"},{"arguments":[{"name":"toInsert","nativeSrc":"5401:8:9","nodeType":"YulIdentifier","src":"5401:8:9"},{"name":"mask","nativeSrc":"5411:4:9","nodeType":"YulIdentifier","src":"5411:4:9"}],"functionName":{"name":"and","nativeSrc":"5397:3:9","nodeType":"YulIdentifier","src":"5397:3:9"},"nativeSrc":"5397:19:9","nodeType":"YulFunctionCall","src":"5397:19:9"}],"functionName":{"name":"or","nativeSrc":"5387:2:9","nodeType":"YulIdentifier","src":"5387:2:9"},"nativeSrc":"5387:30:9","nodeType":"YulFunctionCall","src":"5387:30:9"},"variableNames":[{"name":"result","nativeSrc":"5377:6:9","nodeType":"YulIdentifier","src":"5377:6:9"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"5030:393:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5067:5:9","nodeType":"YulTypedName","src":"5067:5:9","type":""},{"name":"shiftBytes","nativeSrc":"5074:10:9","nodeType":"YulTypedName","src":"5074:10:9","type":""},{"name":"toInsert","nativeSrc":"5086:8:9","nodeType":"YulTypedName","src":"5086:8:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5099:6:9","nodeType":"YulTypedName","src":"5099:6:9","type":""}],"src":"5030:393:9"},{"body":{"nativeSrc":"5461:28:9","nodeType":"YulBlock","src":"5461:28:9","statements":[{"nativeSrc":"5471:12:9","nodeType":"YulAssignment","src":"5471:12:9","value":{"name":"value","nativeSrc":"5478:5:9","nodeType":"YulIdentifier","src":"5478:5:9"},"variableNames":[{"name":"ret","nativeSrc":"5471:3:9","nodeType":"YulIdentifier","src":"5471:3:9"}]}]},"name":"identity","nativeSrc":"5429:60:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5447:5:9","nodeType":"YulTypedName","src":"5447:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5457:3:9","nodeType":"YulTypedName","src":"5457:3:9","type":""}],"src":"5429:60:9"},{"body":{"nativeSrc":"5555:82:9","nodeType":"YulBlock","src":"5555:82:9","statements":[{"nativeSrc":"5565:66:9","nodeType":"YulAssignment","src":"5565:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5623:5:9","nodeType":"YulIdentifier","src":"5623:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5605:17:9","nodeType":"YulIdentifier","src":"5605:17:9"},"nativeSrc":"5605:24:9","nodeType":"YulFunctionCall","src":"5605:24:9"}],"functionName":{"name":"identity","nativeSrc":"5596:8:9","nodeType":"YulIdentifier","src":"5596:8:9"},"nativeSrc":"5596:34:9","nodeType":"YulFunctionCall","src":"5596:34:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5578:17:9","nodeType":"YulIdentifier","src":"5578:17:9"},"nativeSrc":"5578:53:9","nodeType":"YulFunctionCall","src":"5578:53:9"},"variableNames":[{"name":"converted","nativeSrc":"5565:9:9","nodeType":"YulIdentifier","src":"5565:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5495:142:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5535:5:9","nodeType":"YulTypedName","src":"5535:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5545:9:9","nodeType":"YulTypedName","src":"5545:9:9","type":""}],"src":"5495:142:9"},{"body":{"nativeSrc":"5690:28:9","nodeType":"YulBlock","src":"5690:28:9","statements":[{"nativeSrc":"5700:12:9","nodeType":"YulAssignment","src":"5700:12:9","value":{"name":"value","nativeSrc":"5707:5:9","nodeType":"YulIdentifier","src":"5707:5:9"},"variableNames":[{"name":"ret","nativeSrc":"5700:3:9","nodeType":"YulIdentifier","src":"5700:3:9"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5643:75:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5676:5:9","nodeType":"YulTypedName","src":"5676:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5686:3:9","nodeType":"YulTypedName","src":"5686:3:9","type":""}],"src":"5643:75:9"},{"body":{"nativeSrc":"5800:193:9","nodeType":"YulBlock","src":"5800:193:9","statements":[{"nativeSrc":"5810:63:9","nodeType":"YulVariableDeclaration","src":"5810:63:9","value":{"arguments":[{"name":"value_0","nativeSrc":"5865:7:9","nodeType":"YulIdentifier","src":"5865:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5834:30:9","nodeType":"YulIdentifier","src":"5834:30:9"},"nativeSrc":"5834:39:9","nodeType":"YulFunctionCall","src":"5834:39:9"},"variables":[{"name":"convertedValue_0","nativeSrc":"5814:16:9","nodeType":"YulTypedName","src":"5814:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5889:4:9","nodeType":"YulIdentifier","src":"5889:4:9"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5929:4:9","nodeType":"YulIdentifier","src":"5929:4:9"}],"functionName":{"name":"sload","nativeSrc":"5923:5:9","nodeType":"YulIdentifier","src":"5923:5:9"},"nativeSrc":"5923:11:9","nodeType":"YulFunctionCall","src":"5923:11:9"},{"name":"offset","nativeSrc":"5936:6:9","nodeType":"YulIdentifier","src":"5936:6:9"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"5968:16:9","nodeType":"YulIdentifier","src":"5968:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"5944:23:9","nodeType":"YulIdentifier","src":"5944:23:9"},"nativeSrc":"5944:41:9","nodeType":"YulFunctionCall","src":"5944:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5895:27:9","nodeType":"YulIdentifier","src":"5895:27:9"},"nativeSrc":"5895:91:9","nodeType":"YulFunctionCall","src":"5895:91:9"}],"functionName":{"name":"sstore","nativeSrc":"5882:6:9","nodeType":"YulIdentifier","src":"5882:6:9"},"nativeSrc":"5882:105:9","nodeType":"YulFunctionCall","src":"5882:105:9"},"nativeSrc":"5882:105:9","nodeType":"YulExpressionStatement","src":"5882:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5724:269:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5777:4:9","nodeType":"YulTypedName","src":"5777:4:9","type":""},{"name":"offset","nativeSrc":"5783:6:9","nodeType":"YulTypedName","src":"5783:6:9","type":""},{"name":"value_0","nativeSrc":"5791:7:9","nodeType":"YulTypedName","src":"5791:7:9","type":""}],"src":"5724:269:9"},{"body":{"nativeSrc":"6048:24:9","nodeType":"YulBlock","src":"6048:24:9","statements":[{"nativeSrc":"6058:8:9","nodeType":"YulAssignment","src":"6058:8:9","value":{"kind":"number","nativeSrc":"6065:1:9","nodeType":"YulLiteral","src":"6065:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"6058:3:9","nodeType":"YulIdentifier","src":"6058:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"5999:73:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"6044:3:9","nodeType":"YulTypedName","src":"6044:3:9","type":""}],"src":"5999:73:9"},{"body":{"nativeSrc":"6131:136:9","nodeType":"YulBlock","src":"6131:136:9","statements":[{"nativeSrc":"6141:46:9","nodeType":"YulVariableDeclaration","src":"6141:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"6155:30:9","nodeType":"YulIdentifier","src":"6155:30:9"},"nativeSrc":"6155:32:9","nodeType":"YulFunctionCall","src":"6155:32:9"},"variables":[{"name":"zero_0","nativeSrc":"6145:6:9","nodeType":"YulTypedName","src":"6145:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6240:4:9","nodeType":"YulIdentifier","src":"6240:4:9"},{"name":"offset","nativeSrc":"6246:6:9","nodeType":"YulIdentifier","src":"6246:6:9"},{"name":"zero_0","nativeSrc":"6254:6:9","nodeType":"YulIdentifier","src":"6254:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6196:43:9","nodeType":"YulIdentifier","src":"6196:43:9"},"nativeSrc":"6196:65:9","nodeType":"YulFunctionCall","src":"6196:65:9"},"nativeSrc":"6196:65:9","nodeType":"YulExpressionStatement","src":"6196:65:9"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"6078:189:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6117:4:9","nodeType":"YulTypedName","src":"6117:4:9","type":""},{"name":"offset","nativeSrc":"6123:6:9","nodeType":"YulTypedName","src":"6123:6:9","type":""}],"src":"6078:189:9"},{"body":{"nativeSrc":"6323:136:9","nodeType":"YulBlock","src":"6323:136:9","statements":[{"body":{"nativeSrc":"6390:63:9","nodeType":"YulBlock","src":"6390:63:9","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6434:5:9","nodeType":"YulIdentifier","src":"6434:5:9"},{"kind":"number","nativeSrc":"6441:1:9","nodeType":"YulLiteral","src":"6441:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6404:29:9","nodeType":"YulIdentifier","src":"6404:29:9"},"nativeSrc":"6404:39:9","nodeType":"YulFunctionCall","src":"6404:39:9"},"nativeSrc":"6404:39:9","nodeType":"YulExpressionStatement","src":"6404:39:9"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6343:5:9","nodeType":"YulIdentifier","src":"6343:5:9"},{"name":"end","nativeSrc":"6350:3:9","nodeType":"YulIdentifier","src":"6350:3:9"}],"functionName":{"name":"lt","nativeSrc":"6340:2:9","nodeType":"YulIdentifier","src":"6340:2:9"},"nativeSrc":"6340:14:9","nodeType":"YulFunctionCall","src":"6340:14:9"},"nativeSrc":"6333:120:9","nodeType":"YulForLoop","post":{"nativeSrc":"6355:26:9","nodeType":"YulBlock","src":"6355:26:9","statements":[{"nativeSrc":"6357:22:9","nodeType":"YulAssignment","src":"6357:22:9","value":{"arguments":[{"name":"start","nativeSrc":"6370:5:9","nodeType":"YulIdentifier","src":"6370:5:9"},{"kind":"number","nativeSrc":"6377:1:9","nodeType":"YulLiteral","src":"6377:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6366:3:9","nodeType":"YulIdentifier","src":"6366:3:9"},"nativeSrc":"6366:13:9","nodeType":"YulFunctionCall","src":"6366:13:9"},"variableNames":[{"name":"start","nativeSrc":"6357:5:9","nodeType":"YulIdentifier","src":"6357:5:9"}]}]},"pre":{"nativeSrc":"6337:2:9","nodeType":"YulBlock","src":"6337:2:9","statements":[]},"src":"6333:120:9"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"6273:186:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"6311:5:9","nodeType":"YulTypedName","src":"6311:5:9","type":""},{"name":"end","nativeSrc":"6318:3:9","nodeType":"YulTypedName","src":"6318:3:9","type":""}],"src":"6273:186:9"},{"body":{"nativeSrc":"6544:464:9","nodeType":"YulBlock","src":"6544:464:9","statements":[{"body":{"nativeSrc":"6570:431:9","nodeType":"YulBlock","src":"6570:431:9","statements":[{"nativeSrc":"6584:54:9","nodeType":"YulVariableDeclaration","src":"6584:54:9","value":{"arguments":[{"name":"array","nativeSrc":"6632:5:9","nodeType":"YulIdentifier","src":"6632:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6600:31:9","nodeType":"YulIdentifier","src":"6600:31:9"},"nativeSrc":"6600:38:9","nodeType":"YulFunctionCall","src":"6600:38:9"},"variables":[{"name":"dataArea","nativeSrc":"6588:8:9","nodeType":"YulTypedName","src":"6588:8:9","type":""}]},{"nativeSrc":"6651:63:9","nodeType":"YulVariableDeclaration","src":"6651:63:9","value":{"arguments":[{"name":"dataArea","nativeSrc":"6674:8:9","nodeType":"YulIdentifier","src":"6674:8:9"},{"arguments":[{"name":"startIndex","nativeSrc":"6702:10:9","nodeType":"YulIdentifier","src":"6702:10:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6684:17:9","nodeType":"YulIdentifier","src":"6684:17:9"},"nativeSrc":"6684:29:9","nodeType":"YulFunctionCall","src":"6684:29:9"}],"functionName":{"name":"add","nativeSrc":"6670:3:9","nodeType":"YulIdentifier","src":"6670:3:9"},"nativeSrc":"6670:44:9","nodeType":"YulFunctionCall","src":"6670:44:9"},"variables":[{"name":"deleteStart","nativeSrc":"6655:11:9","nodeType":"YulTypedName","src":"6655:11:9","type":""}]},{"body":{"nativeSrc":"6871:27:9","nodeType":"YulBlock","src":"6871:27:9","statements":[{"nativeSrc":"6873:23:9","nodeType":"YulAssignment","src":"6873:23:9","value":{"name":"dataArea","nativeSrc":"6888:8:9","nodeType":"YulIdentifier","src":"6888:8:9"},"variableNames":[{"name":"deleteStart","nativeSrc":"6873:11:9","nodeType":"YulIdentifier","src":"6873:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6855:10:9","nodeType":"YulIdentifier","src":"6855:10:9"},{"kind":"number","nativeSrc":"6867:2:9","nodeType":"YulLiteral","src":"6867:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6852:2:9","nodeType":"YulIdentifier","src":"6852:2:9"},"nativeSrc":"6852:18:9","nodeType":"YulFunctionCall","src":"6852:18:9"},"nativeSrc":"6849:49:9","nodeType":"YulIf","src":"6849:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"6940:11:9","nodeType":"YulIdentifier","src":"6940:11:9"},{"arguments":[{"name":"dataArea","nativeSrc":"6957:8:9","nodeType":"YulIdentifier","src":"6957:8:9"},{"arguments":[{"name":"len","nativeSrc":"6985:3:9","nodeType":"YulIdentifier","src":"6985:3:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6967:17:9","nodeType":"YulIdentifier","src":"6967:17:9"},"nativeSrc":"6967:22:9","nodeType":"YulFunctionCall","src":"6967:22:9"}],"functionName":{"name":"add","nativeSrc":"6953:3:9","nodeType":"YulIdentifier","src":"6953:3:9"},"nativeSrc":"6953:37:9","nodeType":"YulFunctionCall","src":"6953:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6911:28:9","nodeType":"YulIdentifier","src":"6911:28:9"},"nativeSrc":"6911:80:9","nodeType":"YulFunctionCall","src":"6911:80:9"},"nativeSrc":"6911:80:9","nodeType":"YulExpressionStatement","src":"6911:80:9"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6561:3:9","nodeType":"YulIdentifier","src":"6561:3:9"},{"kind":"number","nativeSrc":"6566:2:9","nodeType":"YulLiteral","src":"6566:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6558:2:9","nodeType":"YulIdentifier","src":"6558:2:9"},"nativeSrc":"6558:11:9","nodeType":"YulFunctionCall","src":"6558:11:9"},"nativeSrc":"6555:446:9","nodeType":"YulIf","src":"6555:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6465:543:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6520:5:9","nodeType":"YulTypedName","src":"6520:5:9","type":""},{"name":"len","nativeSrc":"6527:3:9","nodeType":"YulTypedName","src":"6527:3:9","type":""},{"name":"startIndex","nativeSrc":"6532:10:9","nodeType":"YulTypedName","src":"6532:10:9","type":""}],"src":"6465:543:9"},{"body":{"nativeSrc":"7077:54:9","nodeType":"YulBlock","src":"7077:54:9","statements":[{"nativeSrc":"7087:37:9","nodeType":"YulAssignment","src":"7087:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"7112:4:9","nodeType":"YulIdentifier","src":"7112:4:9"},{"name":"value","nativeSrc":"7118:5:9","nodeType":"YulIdentifier","src":"7118:5:9"}],"functionName":{"name":"shr","nativeSrc":"7108:3:9","nodeType":"YulIdentifier","src":"7108:3:9"},"nativeSrc":"7108:16:9","nodeType":"YulFunctionCall","src":"7108:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"7087:8:9","nodeType":"YulIdentifier","src":"7087:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"7014:117:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7052:4:9","nodeType":"YulTypedName","src":"7052:4:9","type":""},{"name":"value","nativeSrc":"7058:5:9","nodeType":"YulTypedName","src":"7058:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7068:8:9","nodeType":"YulTypedName","src":"7068:8:9","type":""}],"src":"7014:117:9"},{"body":{"nativeSrc":"7188:118:9","nodeType":"YulBlock","src":"7188:118:9","statements":[{"nativeSrc":"7198:68:9","nodeType":"YulVariableDeclaration","src":"7198:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7247:1:9","nodeType":"YulLiteral","src":"7247:1:9","type":"","value":"8"},{"name":"bytes","nativeSrc":"7250:5:9","nodeType":"YulIdentifier","src":"7250:5:9"}],"functionName":{"name":"mul","nativeSrc":"7243:3:9","nodeType":"YulIdentifier","src":"7243:3:9"},"nativeSrc":"7243:13:9","nodeType":"YulFunctionCall","src":"7243:13:9"},{"arguments":[{"kind":"number","nativeSrc":"7262:1:9","nodeType":"YulLiteral","src":"7262:1:9","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7258:3:9","nodeType":"YulIdentifier","src":"7258:3:9"},"nativeSrc":"7258:6:9","nodeType":"YulFunctionCall","src":"7258:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"7214:28:9","nodeType":"YulIdentifier","src":"7214:28:9"},"nativeSrc":"7214:51:9","nodeType":"YulFunctionCall","src":"7214:51:9"}],"functionName":{"name":"not","nativeSrc":"7210:3:9","nodeType":"YulIdentifier","src":"7210:3:9"},"nativeSrc":"7210:56:9","nodeType":"YulFunctionCall","src":"7210:56:9"},"variables":[{"name":"mask","nativeSrc":"7202:4:9","nodeType":"YulTypedName","src":"7202:4:9","type":""}]},{"nativeSrc":"7275:25:9","nodeType":"YulAssignment","src":"7275:25:9","value":{"arguments":[{"name":"data","nativeSrc":"7289:4:9","nodeType":"YulIdentifier","src":"7289:4:9"},{"name":"mask","nativeSrc":"7295:4:9","nodeType":"YulIdentifier","src":"7295:4:9"}],"functionName":{"name":"and","nativeSrc":"7285:3:9","nodeType":"YulIdentifier","src":"7285:3:9"},"nativeSrc":"7285:15:9","nodeType":"YulFunctionCall","src":"7285:15:9"},"variableNames":[{"name":"result","nativeSrc":"7275:6:9","nodeType":"YulIdentifier","src":"7275:6:9"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"7137:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7165:4:9","nodeType":"YulTypedName","src":"7165:4:9","type":""},{"name":"bytes","nativeSrc":"7171:5:9","nodeType":"YulTypedName","src":"7171:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7181:6:9","nodeType":"YulTypedName","src":"7181:6:9","type":""}],"src":"7137:169:9"},{"body":{"nativeSrc":"7392:214:9","nodeType":"YulBlock","src":"7392:214:9","statements":[{"nativeSrc":"7525:37:9","nodeType":"YulAssignment","src":"7525:37:9","value":{"arguments":[{"name":"data","nativeSrc":"7552:4:9","nodeType":"YulIdentifier","src":"7552:4:9"},{"name":"len","nativeSrc":"7558:3:9","nodeType":"YulIdentifier","src":"7558:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7533:18:9","nodeType":"YulIdentifier","src":"7533:18:9"},"nativeSrc":"7533:29:9","nodeType":"YulFunctionCall","src":"7533:29:9"},"variableNames":[{"name":"data","nativeSrc":"7525:4:9","nodeType":"YulIdentifier","src":"7525:4:9"}]},{"nativeSrc":"7571:29:9","nodeType":"YulAssignment","src":"7571:29:9","value":{"arguments":[{"name":"data","nativeSrc":"7582:4:9","nodeType":"YulIdentifier","src":"7582:4:9"},{"arguments":[{"kind":"number","nativeSrc":"7592:1:9","nodeType":"YulLiteral","src":"7592:1:9","type":"","value":"2"},{"name":"len","nativeSrc":"7595:3:9","nodeType":"YulIdentifier","src":"7595:3:9"}],"functionName":{"name":"mul","nativeSrc":"7588:3:9","nodeType":"YulIdentifier","src":"7588:3:9"},"nativeSrc":"7588:11:9","nodeType":"YulFunctionCall","src":"7588:11:9"}],"functionName":{"name":"or","nativeSrc":"7579:2:9","nodeType":"YulIdentifier","src":"7579:2:9"},"nativeSrc":"7579:21:9","nodeType":"YulFunctionCall","src":"7579:21:9"},"variableNames":[{"name":"used","nativeSrc":"7571:4:9","nodeType":"YulIdentifier","src":"7571:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7311:295:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7373:4:9","nodeType":"YulTypedName","src":"7373:4:9","type":""},{"name":"len","nativeSrc":"7379:3:9","nodeType":"YulTypedName","src":"7379:3:9","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7387:4:9","nodeType":"YulTypedName","src":"7387:4:9","type":""}],"src":"7311:295:9"},{"body":{"nativeSrc":"7703:1303:9","nodeType":"YulBlock","src":"7703:1303:9","statements":[{"nativeSrc":"7714:51:9","nodeType":"YulVariableDeclaration","src":"7714:51:9","value":{"arguments":[{"name":"src","nativeSrc":"7761:3:9","nodeType":"YulIdentifier","src":"7761:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7728:32:9","nodeType":"YulIdentifier","src":"7728:32:9"},"nativeSrc":"7728:37:9","nodeType":"YulFunctionCall","src":"7728:37:9"},"variables":[{"name":"newLen","nativeSrc":"7718:6:9","nodeType":"YulTypedName","src":"7718:6:9","type":""}]},{"body":{"nativeSrc":"7850:22:9","nodeType":"YulBlock","src":"7850:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7852:16:9","nodeType":"YulIdentifier","src":"7852:16:9"},"nativeSrc":"7852:18:9","nodeType":"YulFunctionCall","src":"7852:18:9"},"nativeSrc":"7852:18:9","nodeType":"YulExpressionStatement","src":"7852:18:9"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7822:6:9","nodeType":"YulIdentifier","src":"7822:6:9"},{"kind":"number","nativeSrc":"7830:18:9","nodeType":"YulLiteral","src":"7830:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7819:2:9","nodeType":"YulIdentifier","src":"7819:2:9"},"nativeSrc":"7819:30:9","nodeType":"YulFunctionCall","src":"7819:30:9"},"nativeSrc":"7816:56:9","nodeType":"YulIf","src":"7816:56:9"},{"nativeSrc":"7882:52:9","nodeType":"YulVariableDeclaration","src":"7882:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7928:4:9","nodeType":"YulIdentifier","src":"7928:4:9"}],"functionName":{"name":"sload","nativeSrc":"7922:5:9","nodeType":"YulIdentifier","src":"7922:5:9"},"nativeSrc":"7922:11:9","nodeType":"YulFunctionCall","src":"7922:11:9"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7896:25:9","nodeType":"YulIdentifier","src":"7896:25:9"},"nativeSrc":"7896:38:9","nodeType":"YulFunctionCall","src":"7896:38:9"},"variables":[{"name":"oldLen","nativeSrc":"7886:6:9","nodeType":"YulTypedName","src":"7886:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8027:4:9","nodeType":"YulIdentifier","src":"8027:4:9"},{"name":"oldLen","nativeSrc":"8033:6:9","nodeType":"YulIdentifier","src":"8033:6:9"},{"name":"newLen","nativeSrc":"8041:6:9","nodeType":"YulIdentifier","src":"8041:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7981:45:9","nodeType":"YulIdentifier","src":"7981:45:9"},"nativeSrc":"7981:67:9","nodeType":"YulFunctionCall","src":"7981:67:9"},"nativeSrc":"7981:67:9","nodeType":"YulExpressionStatement","src":"7981:67:9"},{"nativeSrc":"8058:18:9","nodeType":"YulVariableDeclaration","src":"8058:18:9","value":{"kind":"number","nativeSrc":"8075:1:9","nodeType":"YulLiteral","src":"8075:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8062:9:9","nodeType":"YulTypedName","src":"8062:9:9","type":""}]},{"nativeSrc":"8086:17:9","nodeType":"YulAssignment","src":"8086:17:9","value":{"kind":"number","nativeSrc":"8099:4:9","nodeType":"YulLiteral","src":"8099:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8086:9:9","nodeType":"YulIdentifier","src":"8086:9:9"}]},{"cases":[{"body":{"nativeSrc":"8150:611:9","nodeType":"YulBlock","src":"8150:611:9","statements":[{"nativeSrc":"8164:37:9","nodeType":"YulVariableDeclaration","src":"8164:37:9","value":{"arguments":[{"name":"newLen","nativeSrc":"8183:6:9","nodeType":"YulIdentifier","src":"8183:6:9"},{"arguments":[{"kind":"number","nativeSrc":"8195:4:9","nodeType":"YulLiteral","src":"8195:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"8191:3:9","nodeType":"YulIdentifier","src":"8191:3:9"},"nativeSrc":"8191:9:9","nodeType":"YulFunctionCall","src":"8191:9:9"}],"functionName":{"name":"and","nativeSrc":"8179:3:9","nodeType":"YulIdentifier","src":"8179:3:9"},"nativeSrc":"8179:22:9","nodeType":"YulFunctionCall","src":"8179:22:9"},"variables":[{"name":"loopEnd","nativeSrc":"8168:7:9","nodeType":"YulTypedName","src":"8168:7:9","type":""}]},{"nativeSrc":"8215:51:9","nodeType":"YulVariableDeclaration","src":"8215:51:9","value":{"arguments":[{"name":"slot","nativeSrc":"8261:4:9","nodeType":"YulIdentifier","src":"8261:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"8229:31:9","nodeType":"YulIdentifier","src":"8229:31:9"},"nativeSrc":"8229:37:9","nodeType":"YulFunctionCall","src":"8229:37:9"},"variables":[{"name":"dstPtr","nativeSrc":"8219:6:9","nodeType":"YulTypedName","src":"8219:6:9","type":""}]},{"nativeSrc":"8279:10:9","nodeType":"YulVariableDeclaration","src":"8279:10:9","value":{"kind":"number","nativeSrc":"8288:1:9","nodeType":"YulLiteral","src":"8288:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8283:1:9","nodeType":"YulTypedName","src":"8283:1:9","type":""}]},{"body":{"nativeSrc":"8347:163:9","nodeType":"YulBlock","src":"8347:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8372:6:9","nodeType":"YulIdentifier","src":"8372:6:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8390:3:9","nodeType":"YulIdentifier","src":"8390:3:9"},{"name":"srcOffset","nativeSrc":"8395:9:9","nodeType":"YulIdentifier","src":"8395:9:9"}],"functionName":{"name":"add","nativeSrc":"8386:3:9","nodeType":"YulIdentifier","src":"8386:3:9"},"nativeSrc":"8386:19:9","nodeType":"YulFunctionCall","src":"8386:19:9"}],"functionName":{"name":"mload","nativeSrc":"8380:5:9","nodeType":"YulIdentifier","src":"8380:5:9"},"nativeSrc":"8380:26:9","nodeType":"YulFunctionCall","src":"8380:26:9"}],"functionName":{"name":"sstore","nativeSrc":"8365:6:9","nodeType":"YulIdentifier","src":"8365:6:9"},"nativeSrc":"8365:42:9","nodeType":"YulFunctionCall","src":"8365:42:9"},"nativeSrc":"8365:42:9","nodeType":"YulExpressionStatement","src":"8365:42:9"},{"nativeSrc":"8424:24:9","nodeType":"YulAssignment","src":"8424:24:9","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8438:6:9","nodeType":"YulIdentifier","src":"8438:6:9"},{"kind":"number","nativeSrc":"8446:1:9","nodeType":"YulLiteral","src":"8446:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8434:3:9","nodeType":"YulIdentifier","src":"8434:3:9"},"nativeSrc":"8434:14:9","nodeType":"YulFunctionCall","src":"8434:14:9"},"variableNames":[{"name":"dstPtr","nativeSrc":"8424:6:9","nodeType":"YulIdentifier","src":"8424:6:9"}]},{"nativeSrc":"8465:31:9","nodeType":"YulAssignment","src":"8465:31:9","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8482:9:9","nodeType":"YulIdentifier","src":"8482:9:9"},{"kind":"number","nativeSrc":"8493:2:9","nodeType":"YulLiteral","src":"8493:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8478:3:9","nodeType":"YulIdentifier","src":"8478:3:9"},"nativeSrc":"8478:18:9","nodeType":"YulFunctionCall","src":"8478:18:9"},"variableNames":[{"name":"srcOffset","nativeSrc":"8465:9:9","nodeType":"YulIdentifier","src":"8465:9:9"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8313:1:9","nodeType":"YulIdentifier","src":"8313:1:9"},{"name":"loopEnd","nativeSrc":"8316:7:9","nodeType":"YulIdentifier","src":"8316:7:9"}],"functionName":{"name":"lt","nativeSrc":"8310:2:9","nodeType":"YulIdentifier","src":"8310:2:9"},"nativeSrc":"8310:14:9","nodeType":"YulFunctionCall","src":"8310:14:9"},"nativeSrc":"8302:208:9","nodeType":"YulForLoop","post":{"nativeSrc":"8325:21:9","nodeType":"YulBlock","src":"8325:21:9","statements":[{"nativeSrc":"8327:17:9","nodeType":"YulAssignment","src":"8327:17:9","value":{"arguments":[{"name":"i","nativeSrc":"8336:1:9","nodeType":"YulIdentifier","src":"8336:1:9"},{"kind":"number","nativeSrc":"8339:4:9","nodeType":"YulLiteral","src":"8339:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8332:3:9","nodeType":"YulIdentifier","src":"8332:3:9"},"nativeSrc":"8332:12:9","nodeType":"YulFunctionCall","src":"8332:12:9"},"variableNames":[{"name":"i","nativeSrc":"8327:1:9","nodeType":"YulIdentifier","src":"8327:1:9"}]}]},"pre":{"nativeSrc":"8306:3:9","nodeType":"YulBlock","src":"8306:3:9","statements":[]},"src":"8302:208:9"},{"body":{"nativeSrc":"8546:156:9","nodeType":"YulBlock","src":"8546:156:9","statements":[{"nativeSrc":"8564:43:9","nodeType":"YulVariableDeclaration","src":"8564:43:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8591:3:9","nodeType":"YulIdentifier","src":"8591:3:9"},{"name":"srcOffset","nativeSrc":"8596:9:9","nodeType":"YulIdentifier","src":"8596:9:9"}],"functionName":{"name":"add","nativeSrc":"8587:3:9","nodeType":"YulIdentifier","src":"8587:3:9"},"nativeSrc":"8587:19:9","nodeType":"YulFunctionCall","src":"8587:19:9"}],"functionName":{"name":"mload","nativeSrc":"8581:5:9","nodeType":"YulIdentifier","src":"8581:5:9"},"nativeSrc":"8581:26:9","nodeType":"YulFunctionCall","src":"8581:26:9"},"variables":[{"name":"lastValue","nativeSrc":"8568:9:9","nodeType":"YulTypedName","src":"8568:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8631:6:9","nodeType":"YulIdentifier","src":"8631:6:9"},{"arguments":[{"name":"lastValue","nativeSrc":"8658:9:9","nodeType":"YulIdentifier","src":"8658:9:9"},{"arguments":[{"name":"newLen","nativeSrc":"8673:6:9","nodeType":"YulIdentifier","src":"8673:6:9"},{"kind":"number","nativeSrc":"8681:4:9","nodeType":"YulLiteral","src":"8681:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8669:3:9","nodeType":"YulIdentifier","src":"8669:3:9"},"nativeSrc":"8669:17:9","nodeType":"YulFunctionCall","src":"8669:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8639:18:9","nodeType":"YulIdentifier","src":"8639:18:9"},"nativeSrc":"8639:48:9","nodeType":"YulFunctionCall","src":"8639:48:9"}],"functionName":{"name":"sstore","nativeSrc":"8624:6:9","nodeType":"YulIdentifier","src":"8624:6:9"},"nativeSrc":"8624:64:9","nodeType":"YulFunctionCall","src":"8624:64:9"},"nativeSrc":"8624:64:9","nodeType":"YulExpressionStatement","src":"8624:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8529:7:9","nodeType":"YulIdentifier","src":"8529:7:9"},{"name":"newLen","nativeSrc":"8538:6:9","nodeType":"YulIdentifier","src":"8538:6:9"}],"functionName":{"name":"lt","nativeSrc":"8526:2:9","nodeType":"YulIdentifier","src":"8526:2:9"},"nativeSrc":"8526:19:9","nodeType":"YulFunctionCall","src":"8526:19:9"},"nativeSrc":"8523:179:9","nodeType":"YulIf","src":"8523:179:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8722:4:9","nodeType":"YulIdentifier","src":"8722:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8736:6:9","nodeType":"YulIdentifier","src":"8736:6:9"},{"kind":"number","nativeSrc":"8744:1:9","nodeType":"YulLiteral","src":"8744:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8732:3:9","nodeType":"YulIdentifier","src":"8732:3:9"},"nativeSrc":"8732:14:9","nodeType":"YulFunctionCall","src":"8732:14:9"},{"kind":"number","nativeSrc":"8748:1:9","nodeType":"YulLiteral","src":"8748:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8728:3:9","nodeType":"YulIdentifier","src":"8728:3:9"},"nativeSrc":"8728:22:9","nodeType":"YulFunctionCall","src":"8728:22:9"}],"functionName":{"name":"sstore","nativeSrc":"8715:6:9","nodeType":"YulIdentifier","src":"8715:6:9"},"nativeSrc":"8715:36:9","nodeType":"YulFunctionCall","src":"8715:36:9"},"nativeSrc":"8715:36:9","nodeType":"YulExpressionStatement","src":"8715:36:9"}]},"nativeSrc":"8143:618:9","nodeType":"YulCase","src":"8143:618:9","value":{"kind":"number","nativeSrc":"8148:1:9","nodeType":"YulLiteral","src":"8148:1:9","type":"","value":"1"}},{"body":{"nativeSrc":"8778:222:9","nodeType":"YulBlock","src":"8778:222:9","statements":[{"nativeSrc":"8792:14:9","nodeType":"YulVariableDeclaration","src":"8792:14:9","value":{"kind":"number","nativeSrc":"8805:1:9","nodeType":"YulLiteral","src":"8805:1:9","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8796:5:9","nodeType":"YulTypedName","src":"8796:5:9","type":""}]},{"body":{"nativeSrc":"8829:67:9","nodeType":"YulBlock","src":"8829:67:9","statements":[{"nativeSrc":"8847:35:9","nodeType":"YulAssignment","src":"8847:35:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8866:3:9","nodeType":"YulIdentifier","src":"8866:3:9"},{"name":"srcOffset","nativeSrc":"8871:9:9","nodeType":"YulIdentifier","src":"8871:9:9"}],"functionName":{"name":"add","nativeSrc":"8862:3:9","nodeType":"YulIdentifier","src":"8862:3:9"},"nativeSrc":"8862:19:9","nodeType":"YulFunctionCall","src":"8862:19:9"}],"functionName":{"name":"mload","nativeSrc":"8856:5:9","nodeType":"YulIdentifier","src":"8856:5:9"},"nativeSrc":"8856:26:9","nodeType":"YulFunctionCall","src":"8856:26:9"},"variableNames":[{"name":"value","nativeSrc":"8847:5:9","nodeType":"YulIdentifier","src":"8847:5:9"}]}]},"condition":{"name":"newLen","nativeSrc":"8822:6:9","nodeType":"YulIdentifier","src":"8822:6:9"},"nativeSrc":"8819:77:9","nodeType":"YulIf","src":"8819:77:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8916:4:9","nodeType":"YulIdentifier","src":"8916:4:9"},{"arguments":[{"name":"value","nativeSrc":"8975:5:9","nodeType":"YulIdentifier","src":"8975:5:9"},{"name":"newLen","nativeSrc":"8982:6:9","nodeType":"YulIdentifier","src":"8982:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8922:52:9","nodeType":"YulIdentifier","src":"8922:52:9"},"nativeSrc":"8922:67:9","nodeType":"YulFunctionCall","src":"8922:67:9"}],"functionName":{"name":"sstore","nativeSrc":"8909:6:9","nodeType":"YulIdentifier","src":"8909:6:9"},"nativeSrc":"8909:81:9","nodeType":"YulFunctionCall","src":"8909:81:9"},"nativeSrc":"8909:81:9","nodeType":"YulExpressionStatement","src":"8909:81:9"}]},"nativeSrc":"8770:230:9","nodeType":"YulCase","src":"8770:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8123:6:9","nodeType":"YulIdentifier","src":"8123:6:9"},{"kind":"number","nativeSrc":"8131:2:9","nodeType":"YulLiteral","src":"8131:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8120:2:9","nodeType":"YulIdentifier","src":"8120:2:9"},"nativeSrc":"8120:14:9","nodeType":"YulFunctionCall","src":"8120:14:9"},"nativeSrc":"8113:887:9","nodeType":"YulSwitch","src":"8113:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7611:1395:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7692:4:9","nodeType":"YulTypedName","src":"7692:4:9","type":""},{"name":"src","nativeSrc":"7698:3:9","nodeType":"YulTypedName","src":"7698:3:9","type":""}],"src":"7611:1395:9"},{"body":{"nativeSrc":"9057:81:9","nodeType":"YulBlock","src":"9057:81:9","statements":[{"nativeSrc":"9067:65:9","nodeType":"YulAssignment","src":"9067:65:9","value":{"arguments":[{"name":"value","nativeSrc":"9082:5:9","nodeType":"YulIdentifier","src":"9082:5:9"},{"kind":"number","nativeSrc":"9089:42:9","nodeType":"YulLiteral","src":"9089:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9078:3:9","nodeType":"YulIdentifier","src":"9078:3:9"},"nativeSrc":"9078:54:9","nodeType":"YulFunctionCall","src":"9078:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"9067:7:9","nodeType":"YulIdentifier","src":"9067:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"9012:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9039:5:9","nodeType":"YulTypedName","src":"9039:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9049:7:9","nodeType":"YulTypedName","src":"9049:7:9","type":""}],"src":"9012:126:9"},{"body":{"nativeSrc":"9189:51:9","nodeType":"YulBlock","src":"9189:51:9","statements":[{"nativeSrc":"9199:35:9","nodeType":"YulAssignment","src":"9199:35:9","value":{"arguments":[{"name":"value","nativeSrc":"9228:5:9","nodeType":"YulIdentifier","src":"9228:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9210:17:9","nodeType":"YulIdentifier","src":"9210:17:9"},"nativeSrc":"9210:24:9","nodeType":"YulFunctionCall","src":"9210:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"9199:7:9","nodeType":"YulIdentifier","src":"9199:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"9144:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9171:5:9","nodeType":"YulTypedName","src":"9171:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9181:7:9","nodeType":"YulTypedName","src":"9181:7:9","type":""}],"src":"9144:96:9"},{"body":{"nativeSrc":"9311:53:9","nodeType":"YulBlock","src":"9311:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9328:3:9","nodeType":"YulIdentifier","src":"9328:3:9"},{"arguments":[{"name":"value","nativeSrc":"9351:5:9","nodeType":"YulIdentifier","src":"9351:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9333:17:9","nodeType":"YulIdentifier","src":"9333:17:9"},"nativeSrc":"9333:24:9","nodeType":"YulFunctionCall","src":"9333:24:9"}],"functionName":{"name":"mstore","nativeSrc":"9321:6:9","nodeType":"YulIdentifier","src":"9321:6:9"},"nativeSrc":"9321:37:9","nodeType":"YulFunctionCall","src":"9321:37:9"},"nativeSrc":"9321:37:9","nodeType":"YulExpressionStatement","src":"9321:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9246:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9299:5:9","nodeType":"YulTypedName","src":"9299:5:9","type":""},{"name":"pos","nativeSrc":"9306:3:9","nodeType":"YulTypedName","src":"9306:3:9","type":""}],"src":"9246:118:9"},{"body":{"nativeSrc":"9468:124:9","nodeType":"YulBlock","src":"9468:124:9","statements":[{"nativeSrc":"9478:26:9","nodeType":"YulAssignment","src":"9478:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"9490:9:9","nodeType":"YulIdentifier","src":"9490:9:9"},{"kind":"number","nativeSrc":"9501:2:9","nodeType":"YulLiteral","src":"9501:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9486:3:9","nodeType":"YulIdentifier","src":"9486:3:9"},"nativeSrc":"9486:18:9","nodeType":"YulFunctionCall","src":"9486:18:9"},"variableNames":[{"name":"tail","nativeSrc":"9478:4:9","nodeType":"YulIdentifier","src":"9478:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9558:6:9","nodeType":"YulIdentifier","src":"9558:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"9571:9:9","nodeType":"YulIdentifier","src":"9571:9:9"},{"kind":"number","nativeSrc":"9582:1:9","nodeType":"YulLiteral","src":"9582:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9567:3:9","nodeType":"YulIdentifier","src":"9567:3:9"},"nativeSrc":"9567:17:9","nodeType":"YulFunctionCall","src":"9567:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9514:43:9","nodeType":"YulIdentifier","src":"9514:43:9"},"nativeSrc":"9514:71:9","nodeType":"YulFunctionCall","src":"9514:71:9"},"nativeSrc":"9514:71:9","nodeType":"YulExpressionStatement","src":"9514:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9370:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9440:9:9","nodeType":"YulTypedName","src":"9440:9:9","type":""},{"name":"value0","nativeSrc":"9452:6:9","nodeType":"YulTypedName","src":"9452:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9463:4:9","nodeType":"YulTypedName","src":"9463:4:9","type":""}],"src":"9370:222:9"},{"body":{"nativeSrc":"9626:152:9","nodeType":"YulBlock","src":"9626:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9643:1:9","nodeType":"YulLiteral","src":"9643:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"9646:77:9","nodeType":"YulLiteral","src":"9646:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9636:6:9","nodeType":"YulIdentifier","src":"9636:6:9"},"nativeSrc":"9636:88:9","nodeType":"YulFunctionCall","src":"9636:88:9"},"nativeSrc":"9636:88:9","nodeType":"YulExpressionStatement","src":"9636:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9740:1:9","nodeType":"YulLiteral","src":"9740:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"9743:4:9","nodeType":"YulLiteral","src":"9743:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9733:6:9","nodeType":"YulIdentifier","src":"9733:6:9"},"nativeSrc":"9733:15:9","nodeType":"YulFunctionCall","src":"9733:15:9"},"nativeSrc":"9733:15:9","nodeType":"YulExpressionStatement","src":"9733:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9764:1:9","nodeType":"YulLiteral","src":"9764:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"9767:4:9","nodeType":"YulLiteral","src":"9767:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9757:6:9","nodeType":"YulIdentifier","src":"9757:6:9"},"nativeSrc":"9757:15:9","nodeType":"YulFunctionCall","src":"9757:15:9"},"nativeSrc":"9757:15:9","nodeType":"YulExpressionStatement","src":"9757:15:9"}]},"name":"panic_error_0x11","nativeSrc":"9598:180:9","nodeType":"YulFunctionDefinition","src":"9598:180:9"},{"body":{"nativeSrc":"9828:147:9","nodeType":"YulBlock","src":"9828:147:9","statements":[{"nativeSrc":"9838:25:9","nodeType":"YulAssignment","src":"9838:25:9","value":{"arguments":[{"name":"x","nativeSrc":"9861:1:9","nodeType":"YulIdentifier","src":"9861:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9843:17:9","nodeType":"YulIdentifier","src":"9843:17:9"},"nativeSrc":"9843:20:9","nodeType":"YulFunctionCall","src":"9843:20:9"},"variableNames":[{"name":"x","nativeSrc":"9838:1:9","nodeType":"YulIdentifier","src":"9838:1:9"}]},{"nativeSrc":"9872:25:9","nodeType":"YulAssignment","src":"9872:25:9","value":{"arguments":[{"name":"y","nativeSrc":"9895:1:9","nodeType":"YulIdentifier","src":"9895:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9877:17:9","nodeType":"YulIdentifier","src":"9877:17:9"},"nativeSrc":"9877:20:9","nodeType":"YulFunctionCall","src":"9877:20:9"},"variableNames":[{"name":"y","nativeSrc":"9872:1:9","nodeType":"YulIdentifier","src":"9872:1:9"}]},{"nativeSrc":"9906:16:9","nodeType":"YulAssignment","src":"9906:16:9","value":{"arguments":[{"name":"x","nativeSrc":"9917:1:9","nodeType":"YulIdentifier","src":"9917:1:9"},{"name":"y","nativeSrc":"9920:1:9","nodeType":"YulIdentifier","src":"9920:1:9"}],"functionName":{"name":"add","nativeSrc":"9913:3:9","nodeType":"YulIdentifier","src":"9913:3:9"},"nativeSrc":"9913:9:9","nodeType":"YulFunctionCall","src":"9913:9:9"},"variableNames":[{"name":"sum","nativeSrc":"9906:3:9","nodeType":"YulIdentifier","src":"9906:3:9"}]},{"body":{"nativeSrc":"9946:22:9","nodeType":"YulBlock","src":"9946:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9948:16:9","nodeType":"YulIdentifier","src":"9948:16:9"},"nativeSrc":"9948:18:9","nodeType":"YulFunctionCall","src":"9948:18:9"},"nativeSrc":"9948:18:9","nodeType":"YulExpressionStatement","src":"9948:18:9"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9938:1:9","nodeType":"YulIdentifier","src":"9938:1:9"},{"name":"sum","nativeSrc":"9941:3:9","nodeType":"YulIdentifier","src":"9941:3:9"}],"functionName":{"name":"gt","nativeSrc":"9935:2:9","nodeType":"YulIdentifier","src":"9935:2:9"},"nativeSrc":"9935:10:9","nodeType":"YulFunctionCall","src":"9935:10:9"},"nativeSrc":"9932:36:9","nodeType":"YulIf","src":"9932:36:9"}]},"name":"checked_add_t_uint256","nativeSrc":"9784:191:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9815:1:9","nodeType":"YulTypedName","src":"9815:1:9","type":""},{"name":"y","nativeSrc":"9818:1:9","nodeType":"YulTypedName","src":"9818:1:9","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9824:3:9","nodeType":"YulTypedName","src":"9824:3:9","type":""}],"src":"9784:191:9"},{"body":{"nativeSrc":"10046:53:9","nodeType":"YulBlock","src":"10046:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10063:3:9","nodeType":"YulIdentifier","src":"10063:3:9"},{"arguments":[{"name":"value","nativeSrc":"10086:5:9","nodeType":"YulIdentifier","src":"10086:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10068:17:9","nodeType":"YulIdentifier","src":"10068:17:9"},"nativeSrc":"10068:24:9","nodeType":"YulFunctionCall","src":"10068:24:9"}],"functionName":{"name":"mstore","nativeSrc":"10056:6:9","nodeType":"YulIdentifier","src":"10056:6:9"},"nativeSrc":"10056:37:9","nodeType":"YulFunctionCall","src":"10056:37:9"},"nativeSrc":"10056:37:9","nodeType":"YulExpressionStatement","src":"10056:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9981:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10034:5:9","nodeType":"YulTypedName","src":"10034:5:9","type":""},{"name":"pos","nativeSrc":"10041:3:9","nodeType":"YulTypedName","src":"10041:3:9","type":""}],"src":"9981:118:9"},{"body":{"nativeSrc":"10259:288:9","nodeType":"YulBlock","src":"10259:288:9","statements":[{"nativeSrc":"10269:26:9","nodeType":"YulAssignment","src":"10269:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"10281:9:9","nodeType":"YulIdentifier","src":"10281:9:9"},{"kind":"number","nativeSrc":"10292:2:9","nodeType":"YulLiteral","src":"10292:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10277:3:9","nodeType":"YulIdentifier","src":"10277:3:9"},"nativeSrc":"10277:18:9","nodeType":"YulFunctionCall","src":"10277:18:9"},"variableNames":[{"name":"tail","nativeSrc":"10269:4:9","nodeType":"YulIdentifier","src":"10269:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10349:6:9","nodeType":"YulIdentifier","src":"10349:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10362:9:9","nodeType":"YulIdentifier","src":"10362:9:9"},{"kind":"number","nativeSrc":"10373:1:9","nodeType":"YulLiteral","src":"10373:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10358:3:9","nodeType":"YulIdentifier","src":"10358:3:9"},"nativeSrc":"10358:17:9","nodeType":"YulFunctionCall","src":"10358:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10305:43:9","nodeType":"YulIdentifier","src":"10305:43:9"},"nativeSrc":"10305:71:9","nodeType":"YulFunctionCall","src":"10305:71:9"},"nativeSrc":"10305:71:9","nodeType":"YulExpressionStatement","src":"10305:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10430:6:9","nodeType":"YulIdentifier","src":"10430:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10443:9:9","nodeType":"YulIdentifier","src":"10443:9:9"},{"kind":"number","nativeSrc":"10454:2:9","nodeType":"YulLiteral","src":"10454:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10439:3:9","nodeType":"YulIdentifier","src":"10439:3:9"},"nativeSrc":"10439:18:9","nodeType":"YulFunctionCall","src":"10439:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10386:43:9","nodeType":"YulIdentifier","src":"10386:43:9"},"nativeSrc":"10386:72:9","nodeType":"YulFunctionCall","src":"10386:72:9"},"nativeSrc":"10386:72:9","nodeType":"YulExpressionStatement","src":"10386:72:9"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10512:6:9","nodeType":"YulIdentifier","src":"10512:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10525:9:9","nodeType":"YulIdentifier","src":"10525:9:9"},{"kind":"number","nativeSrc":"10536:2:9","nodeType":"YulLiteral","src":"10536:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10521:3:9","nodeType":"YulIdentifier","src":"10521:3:9"},"nativeSrc":"10521:18:9","nodeType":"YulFunctionCall","src":"10521:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10468:43:9","nodeType":"YulIdentifier","src":"10468:43:9"},"nativeSrc":"10468:72:9","nodeType":"YulFunctionCall","src":"10468:72:9"},"nativeSrc":"10468:72:9","nodeType":"YulExpressionStatement","src":"10468:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10105:442:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10215:9:9","nodeType":"YulTypedName","src":"10215:9:9","type":""},{"name":"value2","nativeSrc":"10227:6:9","nodeType":"YulTypedName","src":"10227:6:9","type":""},{"name":"value1","nativeSrc":"10235:6:9","nodeType":"YulTypedName","src":"10235:6:9","type":""},{"name":"value0","nativeSrc":"10243:6:9","nodeType":"YulTypedName","src":"10243:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10254:4:9","nodeType":"YulTypedName","src":"10254:4:9","type":""}],"src":"10105:442:9"},{"body":{"nativeSrc":"10651:124:9","nodeType":"YulBlock","src":"10651:124:9","statements":[{"nativeSrc":"10661:26:9","nodeType":"YulAssignment","src":"10661:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"10673:9:9","nodeType":"YulIdentifier","src":"10673:9:9"},{"kind":"number","nativeSrc":"10684:2:9","nodeType":"YulLiteral","src":"10684:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10669:3:9","nodeType":"YulIdentifier","src":"10669:3:9"},"nativeSrc":"10669:18:9","nodeType":"YulFunctionCall","src":"10669:18:9"},"variableNames":[{"name":"tail","nativeSrc":"10661:4:9","nodeType":"YulIdentifier","src":"10661:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10741:6:9","nodeType":"YulIdentifier","src":"10741:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10754:9:9","nodeType":"YulIdentifier","src":"10754:9:9"},{"kind":"number","nativeSrc":"10765:1:9","nodeType":"YulLiteral","src":"10765:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10750:3:9","nodeType":"YulIdentifier","src":"10750:3:9"},"nativeSrc":"10750:17:9","nodeType":"YulFunctionCall","src":"10750:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10697:43:9","nodeType":"YulIdentifier","src":"10697:43:9"},"nativeSrc":"10697:71:9","nodeType":"YulFunctionCall","src":"10697:71:9"},"nativeSrc":"10697:71:9","nodeType":"YulExpressionStatement","src":"10697:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"10553:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10623:9:9","nodeType":"YulTypedName","src":"10623:9:9","type":""},{"name":"value0","nativeSrc":"10635:6:9","nodeType":"YulTypedName","src":"10635:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10646:4:9","nodeType":"YulTypedName","src":"10646:4:9","type":""}],"src":"10553:222:9"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516119c63803806119c683398181016040528101906100329190610529565b8282816003908161004391906107cb565b50806004908161005391906107cb565b50505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100c9600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826100d160201b60201c565b5050506109bd565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101435760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161013a91906108de565b60405180910390fd5b6101556000838361015960201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101ab57806002600082825461019f9190610928565b9250508190555061027e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610237578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161022e9392919061096b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102c75780600260008282540392505081905550610314565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161037191906109a2565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103e58261039c565b810181811067ffffffffffffffff82111715610404576104036103ad565b5b80604052505050565b600061041761037e565b905061042382826103dc565b919050565b600067ffffffffffffffff821115610443576104426103ad565b5b61044c8261039c565b9050602081019050919050565b60005b8381101561047757808201518184015260208101905061045c565b60008484015250505050565b600061049661049184610428565b61040d565b9050828152602081018484840111156104b2576104b1610397565b5b6104bd848285610459565b509392505050565b600082601f8301126104da576104d9610392565b5b81516104ea848260208601610483565b91505092915050565b6000819050919050565b610506816104f3565b811461051157600080fd5b50565b600081519050610523816104fd565b92915050565b60008060006060848603121561054257610541610388565b5b600084015167ffffffffffffffff8111156105605761055f61038d565b5b61056c868287016104c5565b935050602084015167ffffffffffffffff81111561058d5761058c61038d565b5b610599868287016104c5565b92505060406105aa86828701610514565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061060657607f821691505b602082108103610619576106186105bf565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610644565b61068b8683610644565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106c86106c36106be846104f3565b6106a3565b6104f3565b9050919050565b6000819050919050565b6106e2836106ad565b6106f66106ee826106cf565b848454610651565b825550505050565b600090565b61070b6106fe565b6107168184846106d9565b505050565b5b8181101561073a5761072f600082610703565b60018101905061071c565b5050565b601f82111561077f576107508161061f565b61075984610634565b81016020851015610768578190505b61077c61077485610634565b83018261071b565b50505b505050565b600082821c905092915050565b60006107a260001984600802610784565b1980831691505092915050565b60006107bb8383610791565b9150826002028217905092915050565b6107d4826105b4565b67ffffffffffffffff8111156107ed576107ec6103ad565b5b6107f782546105ee565b61080282828561073e565b600060209050601f8311600181146108355760008415610823578287015190505b61082d85826107af565b865550610895565b601f1984166108438661061f565b60005b8281101561086b57848901518255600182019150602085019450602081019050610846565b868310156108885784890151610884601f891682610791565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c88261089d565b9050919050565b6108d8816108bd565b82525050565b60006020820190506108f360008301846108cf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610933826104f3565b915061093e836104f3565b9250828201905080821115610956576109556108f9565b5b92915050565b610965816104f3565b82525050565b600060608201905061098060008301866108cf565b61098d602083018561095c565b61099a604083018461095c565b949350505050565b60006020820190506109b7600083018461095c565b92915050565b610ffa806109cc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461016857806370a08231146101845780638da5cb5b146101b457806395d89b41146101d2578063a9059cbb146101f0578063dd62ed3e14610220576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610250565b6040516100c39190610be2565b60405180910390f35b6100e660048036038101906100e19190610c9d565b6102e2565b6040516100f39190610cf8565b60405180910390f35b610104610305565b6040516101119190610d22565b60405180910390f35b610134600480360381019061012f9190610d3d565b61030f565b6040516101419190610cf8565b60405180910390f35b61015261033e565b60405161015f9190610dac565b60405180910390f35b610182600480360381019061017d9190610c9d565b610347565b005b61019e60048036038101906101999190610dc7565b610409565b6040516101ab9190610d22565b60405180910390f35b6101bc610451565b6040516101c99190610e03565b60405180910390f35b6101da610477565b6040516101e79190610be2565b60405180910390f35b61020a60048036038101906102059190610c9d565b610509565b6040516102179190610cf8565b60405180910390f35b61023a60048036038101906102359190610e1e565b61052c565b6040516102479190610d22565b60405180910390f35b60606003805461025f90610e8d565b80601f016020809104026020016040519081016040528092919081815260200182805461028b90610e8d565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b5050505050905090565b6000806102ed6105b3565b90506102fa8185856105bb565b600191505092915050565b6000600254905090565b60008061031a6105b3565b90506103278582856105cd565b610332858585610662565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90610f0a565b60405180910390fd5b610404600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838361030f565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461048690610e8d565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290610e8d565b80156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b6000806105146105b3565b9050610521818585610662565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6105c88383836001610756565b505050565b60006105d9848461052c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561065c578181101561064c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161064393929190610f2a565b60405180910390fd5b61065b84848484036000610756565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106d45760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106cb9190610e03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107465760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161073d9190610e03565b60405180910390fd5b61075183838361092d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107c85760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107bf9190610e03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361083a5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108319190610e03565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610927578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161091e9190610d22565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361097f5780600260008282546109739190610f90565b92505081905550610a52565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a0b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a0293929190610f2a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9b5780600260008282540392505081905550610ae8565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b459190610d22565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b8c578082015181840152602081019050610b71565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bb482610b52565b610bbe8185610b5d565b9350610bce818560208601610b6e565b610bd781610b98565b840191505092915050565b60006020820190508181036000830152610bfc8184610ba9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3482610c09565b9050919050565b610c4481610c29565b8114610c4f57600080fd5b50565b600081359050610c6181610c3b565b92915050565b6000819050919050565b610c7a81610c67565b8114610c8557600080fd5b50565b600081359050610c9781610c71565b92915050565b60008060408385031215610cb457610cb3610c04565b5b6000610cc285828601610c52565b9250506020610cd385828601610c88565b9150509250929050565b60008115159050919050565b610cf281610cdd565b82525050565b6000602082019050610d0d6000830184610ce9565b92915050565b610d1c81610c67565b82525050565b6000602082019050610d376000830184610d13565b92915050565b600080600060608486031215610d5657610d55610c04565b5b6000610d6486828701610c52565b9350506020610d7586828701610c52565b9250506040610d8686828701610c88565b9150509250925092565b600060ff82169050919050565b610da681610d90565b82525050565b6000602082019050610dc16000830184610d9d565b92915050565b600060208284031215610ddd57610ddc610c04565b5b6000610deb84828501610c52565b91505092915050565b610dfd81610c29565b82525050565b6000602082019050610e186000830184610df4565b92915050565b60008060408385031215610e3557610e34610c04565b5b6000610e4385828601610c52565b9250506020610e5485828601610c52565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ea557607f821691505b602082108103610eb857610eb7610e5e565b5b50919050565b7f4f6e6c79206f776e65722063616e206d696e7400000000000000000000000000600082015250565b6000610ef4601383610b5d565b9150610eff82610ebe565b602082019050919050565b60006020820190508181036000830152610f2381610ee7565b9050919050565b6000606082019050610f3f6000830186610df4565b610f4c6020830185610d13565b610f596040830184610d13565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f9b82610c67565b9150610fa683610c67565b9250828201905080821115610fbe57610fbd610f61565b5b9291505056fea2646970667358221220f8d7cb2434c48574613be26bead682dcc7cbdc71916e734550db03758c8ba28f64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x19C6 CODESIZE SUB DUP1 PUSH2 0x19C6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x529 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x7CB JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x7CB JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xC9 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0xD1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x0 DUP4 DUP4 PUSH2 0x159 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x237 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x314 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3E5 DUP3 PUSH2 0x39C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x404 JUMPI PUSH2 0x403 PUSH2 0x3AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417 PUSH2 0x37E JUMP JUMPDEST SWAP1 POP PUSH2 0x423 DUP3 DUP3 PUSH2 0x3DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x443 JUMPI PUSH2 0x442 PUSH2 0x3AD JUMP JUMPDEST JUMPDEST PUSH2 0x44C DUP3 PUSH2 0x39C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x477 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496 PUSH2 0x491 DUP5 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B1 PUSH2 0x397 JUMP JUMPDEST JUMPDEST PUSH2 0x4BD DUP5 DUP3 DUP6 PUSH2 0x459 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DA JUMPI PUSH2 0x4D9 PUSH2 0x392 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x483 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x506 DUP2 PUSH2 0x4F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x523 DUP2 PUSH2 0x4FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x388 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x560 JUMPI PUSH2 0x55F PUSH2 0x38D JUMP JUMPDEST JUMPDEST PUSH2 0x56C DUP7 DUP3 DUP8 ADD PUSH2 0x4C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58D JUMPI PUSH2 0x58C PUSH2 0x38D JUMP JUMPDEST JUMPDEST PUSH2 0x599 DUP7 DUP3 DUP8 ADD PUSH2 0x4C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5AA DUP7 DUP3 DUP8 ADD PUSH2 0x514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x606 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x5BF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x681 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x68B DUP7 DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 PUSH2 0x6C3 PUSH2 0x6BE DUP5 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E2 DUP4 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0x6EE DUP3 PUSH2 0x6CF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x651 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x716 DUP2 DUP5 DUP5 PUSH2 0x6D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73A JUMPI PUSH2 0x72F PUSH1 0x0 DUP3 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x71C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x750 DUP2 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x759 DUP5 PUSH2 0x634 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x768 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x77C PUSH2 0x774 DUP6 PUSH2 0x634 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x71B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x784 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BB DUP4 DUP4 PUSH2 0x791 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D4 DUP3 PUSH2 0x5B4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x3AD JUMP JUMPDEST JUMPDEST PUSH2 0x7F7 DUP3 SLOAD PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x802 DUP3 DUP3 DUP6 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x823 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x82D DUP6 DUP3 PUSH2 0x7AF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x843 DUP7 PUSH2 0x61F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x86B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x846 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x888 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x884 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x791 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP3 PUSH2 0x89D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0x8BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x933 DUP3 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x93E DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x956 JUMPI PUSH2 0x955 PUSH2 0x8F9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x965 DUP2 PUSH2 0x4F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x980 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x98D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x95C JUMP JUMPDEST PUSH2 0x99A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFA DUP1 PUSH2 0x9CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2ED PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FA DUP2 DUP6 DUP6 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31A PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x327 DUP6 DUP3 DUP6 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x332 DUP6 DUP6 DUP6 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x404 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x30F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x514 PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x521 DUP2 DUP6 DUP6 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x756 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D9 DUP5 DUP5 PUSH2 0x52C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x64C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x643 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x756 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x746 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x751 DUP4 DUP4 DUP4 PUSH2 0x92D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x927 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x973 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA0B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB4 DUP3 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xBBE DUP2 DUP6 PUSH2 0xB5D JUMP JUMPDEST SWAP4 POP PUSH2 0xBCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST PUSH2 0xBD7 DUP2 PUSH2 0xB98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBFC DUP2 DUP5 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC34 DUP3 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC44 DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP2 EQ PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC61 DUP2 PUSH2 0xC3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0xC67 JUMP JUMPDEST DUP2 EQ PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC97 DUP2 PUSH2 0xC71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCD3 DUP6 DUP3 DUP7 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF2 DUP2 PUSH2 0xCDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1C DUP2 PUSH2 0xC67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD64 DUP7 DUP3 DUP8 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD75 DUP7 DUP3 DUP8 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD86 DUP7 DUP3 DUP8 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 DUP2 PUSH2 0xD90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDD JUMPI PUSH2 0xDDC PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDEB DUP5 DUP3 DUP6 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH2 0xE34 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE54 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xE5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206D696E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF4 PUSH1 0x13 DUP4 PUSH2 0xB5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEFF DUP3 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF23 DUP2 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF3F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xF4C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xF59 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9B DUP3 PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA6 DUP4 PUSH2 0xC67 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xF61 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xD7 0xCB 0x24 CALLVALUE 0xC4 DUP6 PUSH21 0x613BE26BEAD682DCC7CBDC71916E734550DB03758C DUP12 LOG2 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"129:456:8:-:0;;;190:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;303:4;309:6;1675:5:1;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;335:10:8::1;327:5;;:18;;;;;;;;;;;;;;;;;;355:27;361:5;;;;;;;;;;;368:13;355:5;;;:27;;:::i;:::-;190:199:::0;;;129:456;;7458:208:1;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:77::-;2716:7;2745:5;2734:16;;2679:77;;;:::o;2762:122::-;2835:24;2853:5;2835:24;:::i;:::-;2828:5;2825:35;2815:63;;2874:1;2871;2864:12;2815:63;2762:122;:::o;2890:143::-;2947:5;2978:6;2972:13;2963:22;;2994:33;3021:5;2994:33;:::i;:::-;2890:143;;;;:::o;3039:1009::-;3147:6;3155;3163;3212:2;3200:9;3191:7;3187:23;3183:32;3180:119;;;3218:79;;:::i;:::-;3180:119;3359:1;3348:9;3344:17;3338:24;3389:18;3381:6;3378:30;3375:117;;;3411:79;;:::i;:::-;3375:117;3516:74;3582:7;3573:6;3562:9;3558:22;3516:74;:::i;:::-;3506:84;;3309:291;3660:2;3649:9;3645:18;3639:25;3691:18;3683:6;3680:30;3677:117;;;3713:79;;:::i;:::-;3677:117;3818:74;3884:7;3875:6;3864:9;3860:22;3818:74;:::i;:::-;3808:84;;3610:292;3941:2;3967:64;4023:7;4014:6;4003:9;3999:22;3967:64;:::i;:::-;3957:74;;3912:129;3039:1009;;;;;:::o;4054:99::-;4106:6;4140:5;4134:12;4124:22;;4054:99;;;:::o;4159:180::-;4207:77;4204:1;4197:88;4304:4;4301:1;4294:15;4328:4;4325:1;4318:15;4345:320;4389:6;4426:1;4420:4;4416:12;4406:22;;4473:1;4467:4;4463:12;4494:18;4484:81;;4550:4;4542:6;4538:17;4528:27;;4484:81;4612:2;4604:6;4601:14;4581:18;4578:38;4575:84;;4631:18;;:::i;:::-;4575:84;4396:269;4345:320;;;:::o;4671:141::-;4720:4;4743:3;4735:11;;4766:3;4763:1;4756:14;4800:4;4797:1;4787:18;4779:26;;4671:141;;;:::o;4818:93::-;4855:6;4902:2;4897;4890:5;4886:14;4882:23;4872:33;;4818:93;;;:::o;4917:107::-;4961:8;5011:5;5005:4;5001:16;4980:37;;4917:107;;;;:::o;5030:393::-;5099:6;5149:1;5137:10;5133:18;5172:97;5202:66;5191:9;5172:97;:::i;:::-;5290:39;5320:8;5309:9;5290:39;:::i;:::-;5278:51;;5362:4;5358:9;5351:5;5347:21;5338:30;;5411:4;5401:8;5397:19;5390:5;5387:30;5377:40;;5106:317;;5030:393;;;;;:::o;5429:60::-;5457:3;5478:5;5471:12;;5429:60;;;:::o;5495:142::-;5545:9;5578:53;5596:34;5605:24;5623:5;5605:24;:::i;:::-;5596:34;:::i;:::-;5578:53;:::i;:::-;5565:66;;5495:142;;;:::o;5643:75::-;5686:3;5707:5;5700:12;;5643:75;;;:::o;5724:269::-;5834:39;5865:7;5834:39;:::i;:::-;5895:91;5944:41;5968:16;5944:41;:::i;:::-;5936:6;5929:4;5923:11;5895:91;:::i;:::-;5889:4;5882:105;5800:193;5724:269;;;:::o;5999:73::-;6044:3;5999:73;:::o;6078:189::-;6155:32;;:::i;:::-;6196:65;6254:6;6246;6240:4;6196:65;:::i;:::-;6131:136;6078:189;;:::o;6273:186::-;6333:120;6350:3;6343:5;6340:14;6333:120;;;6404:39;6441:1;6434:5;6404:39;:::i;:::-;6377:1;6370:5;6366:13;6357:22;;6333:120;;;6273:186;;:::o;6465:543::-;6566:2;6561:3;6558:11;6555:446;;;6600:38;6632:5;6600:38;:::i;:::-;6684:29;6702:10;6684:29;:::i;:::-;6674:8;6670:44;6867:2;6855:10;6852:18;6849:49;;;6888:8;6873:23;;6849:49;6911:80;6967:22;6985:3;6967:22;:::i;:::-;6957:8;6953:37;6940:11;6911:80;:::i;:::-;6570:431;;6555:446;6465:543;;;:::o;7014:117::-;7068:8;7118:5;7112:4;7108:16;7087:37;;7014:117;;;;:::o;7137:169::-;7181:6;7214:51;7262:1;7258:6;7250:5;7247:1;7243:13;7214:51;:::i;:::-;7210:56;7295:4;7289;7285:15;7275:25;;7188:118;7137:169;;;;:::o;7311:295::-;7387:4;7533:29;7558:3;7552:4;7533:29;:::i;:::-;7525:37;;7595:3;7592:1;7588:11;7582:4;7579:21;7571:29;;7311:295;;;;:::o;7611:1395::-;7728:37;7761:3;7728:37;:::i;:::-;7830:18;7822:6;7819:30;7816:56;;;7852:18;;:::i;:::-;7816:56;7896:38;7928:4;7922:11;7896:38;:::i;:::-;7981:67;8041:6;8033;8027:4;7981:67;:::i;:::-;8075:1;8099:4;8086:17;;8131:2;8123:6;8120:14;8148:1;8143:618;;;;8805:1;8822:6;8819:77;;;8871:9;8866:3;8862:19;8856:26;8847:35;;8819:77;8922:67;8982:6;8975:5;8922:67;:::i;:::-;8916:4;8909:81;8778:222;8113:887;;8143:618;8195:4;8191:9;8183:6;8179:22;8229:37;8261:4;8229:37;:::i;:::-;8288:1;8302:208;8316:7;8313:1;8310:14;8302:208;;;8395:9;8390:3;8386:19;8380:26;8372:6;8365:42;8446:1;8438:6;8434:14;8424:24;;8493:2;8482:9;8478:18;8465:31;;8339:4;8336:1;8332:12;8327:17;;8302:208;;;8538:6;8529:7;8526:19;8523:179;;;8596:9;8591:3;8587:19;8581:26;8639:48;8681:4;8673:6;8669:17;8658:9;8639:48;:::i;:::-;8631:6;8624:64;8546:156;8523:179;8748:1;8744;8736:6;8732:14;8728:22;8722:4;8715:36;8150:611;;;8113:887;;7703:1303;;;7611:1395;;:::o;9012:126::-;9049:7;9089:42;9082:5;9078:54;9067:65;;9012:126;;;:::o;9144:96::-;9181:7;9210:24;9228:5;9210:24;:::i;:::-;9199:35;;9144:96;;;:::o;9246:118::-;9333:24;9351:5;9333:24;:::i;:::-;9328:3;9321:37;9246:118;;:::o;9370:222::-;9463:4;9501:2;9490:9;9486:18;9478:26;;9514:71;9582:1;9571:9;9567:17;9558:6;9514:71;:::i;:::-;9370:222;;;;:::o;9598:180::-;9646:77;9643:1;9636:88;9743:4;9740:1;9733:15;9767:4;9764:1;9757:15;9784:191;9824:3;9843:20;9861:1;9843:20;:::i;:::-;9838:25;;9877:20;9895:1;9877:20;:::i;:::-;9872:25;;9920:1;9917;9913:9;9906:16;;9941:3;9938:1;9935:10;9932:36;;;9948:18;;:::i;:::-;9932:36;9784:191;;;;:::o;9981:118::-;10068:24;10086:5;10068:24;:::i;:::-;10063:3;10056:37;9981:118;;:::o;10105:442::-;10254:4;10292:2;10281:9;10277:18;10269:26;;10305:71;10373:1;10362:9;10358:17;10349:6;10305:71;:::i;:::-;10386:72;10454:2;10443:9;10439:18;10430:6;10386:72;:::i;:::-;10468;10536:2;10525:9;10521:18;10512:6;10468:72;:::i;:::-;10105:442;;;;;;:::o;10553:222::-;10646:4;10684:2;10673:9;10669:18;10661:26;;10697:71;10765:1;10754:9;10750:17;10741:6;10697:71;:::i;:::-;10553:222;;;;:::o;129:456:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":1467,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":1878,"id":602,"parameterSlots":4,"returnSlots":0},"@_msgSender_767":{"entryPoint":1459,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":1485,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":1634,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":2349,"id":458,"parameterSlots":3,"returnSlots":0},"@allowance_278":{"entryPoint":1324,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":738,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":1033,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":830,"id":215,"parameterSlots":0,"returnSlots":1},"@mint_2092":{"entryPoint":839,"id":2092,"parameterSlots":2,"returnSlots":0},"@name_197":{"entryPoint":592,"id":197,"parameterSlots":0,"returnSlots":1},"@owner_2044":{"entryPoint":1105,"id":2044,"parameterSlots":0,"returnSlots":0},"@symbol_206":{"entryPoint":1143,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":773,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":783,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":1289,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3614,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3389,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3229,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3305,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac_to_t_string_memory_ptr_fromStack":{"entryPoint":3815,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3347,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3485,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3882,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3320,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3500,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2898,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2909,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3984,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3113,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3293,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3081,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3175,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3472,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2926,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3725,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3937,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3678,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3076,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2968,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac":{"entryPoint":3774,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3131,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3185,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8334:9","nodeType":"YulBlock","src":"0:8334:9","statements":[{"body":{"nativeSrc":"66:40:9","nodeType":"YulBlock","src":"66:40:9","statements":[{"nativeSrc":"77:22:9","nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nativeSrc":"93:5:9","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nativeSrc":"87:5:9","nodeType":"YulIdentifier","src":"87:5:9"},"nativeSrc":"87:12:9","nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nativeSrc":"77:6:9","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:9","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:9","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nativeSrc":"208:73:9","nodeType":"YulBlock","src":"208:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:9","nodeType":"YulIdentifier","src":"225:3:9"},{"name":"length","nativeSrc":"230:6:9","nodeType":"YulIdentifier","src":"230:6:9"}],"functionName":{"name":"mstore","nativeSrc":"218:6:9","nodeType":"YulIdentifier","src":"218:6:9"},"nativeSrc":"218:19:9","nodeType":"YulFunctionCall","src":"218:19:9"},"nativeSrc":"218:19:9","nodeType":"YulExpressionStatement","src":"218:19:9"},{"nativeSrc":"246:29:9","nodeType":"YulAssignment","src":"246:29:9","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:9","nodeType":"YulIdentifier","src":"265:3:9"},{"kind":"number","nativeSrc":"270:4:9","nodeType":"YulLiteral","src":"270:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:9","nodeType":"YulIdentifier","src":"261:3:9"},"nativeSrc":"261:14:9","nodeType":"YulFunctionCall","src":"261:14:9"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:9","nodeType":"YulIdentifier","src":"246:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:9","nodeType":"YulTypedName","src":"180:3:9","type":""},{"name":"length","nativeSrc":"185:6:9","nodeType":"YulTypedName","src":"185:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:9","nodeType":"YulTypedName","src":"196:11:9","type":""}],"src":"112:169:9"},{"body":{"nativeSrc":"349:186:9","nodeType":"YulBlock","src":"349:186:9","statements":[{"nativeSrc":"360:10:9","nodeType":"YulVariableDeclaration","src":"360:10:9","value":{"kind":"number","nativeSrc":"369:1:9","nodeType":"YulLiteral","src":"369:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:9","nodeType":"YulTypedName","src":"364:1:9","type":""}]},{"body":{"nativeSrc":"429:63:9","nodeType":"YulBlock","src":"429:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:9","nodeType":"YulIdentifier","src":"454:3:9"},{"name":"i","nativeSrc":"459:1:9","nodeType":"YulIdentifier","src":"459:1:9"}],"functionName":{"name":"add","nativeSrc":"450:3:9","nodeType":"YulIdentifier","src":"450:3:9"},"nativeSrc":"450:11:9","nodeType":"YulFunctionCall","src":"450:11:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:9","nodeType":"YulIdentifier","src":"473:3:9"},{"name":"i","nativeSrc":"478:1:9","nodeType":"YulIdentifier","src":"478:1:9"}],"functionName":{"name":"add","nativeSrc":"469:3:9","nodeType":"YulIdentifier","src":"469:3:9"},"nativeSrc":"469:11:9","nodeType":"YulFunctionCall","src":"469:11:9"}],"functionName":{"name":"mload","nativeSrc":"463:5:9","nodeType":"YulIdentifier","src":"463:5:9"},"nativeSrc":"463:18:9","nodeType":"YulFunctionCall","src":"463:18:9"}],"functionName":{"name":"mstore","nativeSrc":"443:6:9","nodeType":"YulIdentifier","src":"443:6:9"},"nativeSrc":"443:39:9","nodeType":"YulFunctionCall","src":"443:39:9"},"nativeSrc":"443:39:9","nodeType":"YulExpressionStatement","src":"443:39:9"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:9","nodeType":"YulIdentifier","src":"390:1:9"},{"name":"length","nativeSrc":"393:6:9","nodeType":"YulIdentifier","src":"393:6:9"}],"functionName":{"name":"lt","nativeSrc":"387:2:9","nodeType":"YulIdentifier","src":"387:2:9"},"nativeSrc":"387:13:9","nodeType":"YulFunctionCall","src":"387:13:9"},"nativeSrc":"379:113:9","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:9","nodeType":"YulBlock","src":"401:19:9","statements":[{"nativeSrc":"403:15:9","nodeType":"YulAssignment","src":"403:15:9","value":{"arguments":[{"name":"i","nativeSrc":"412:1:9","nodeType":"YulIdentifier","src":"412:1:9"},{"kind":"number","nativeSrc":"415:2:9","nodeType":"YulLiteral","src":"415:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:9","nodeType":"YulIdentifier","src":"408:3:9"},"nativeSrc":"408:10:9","nodeType":"YulFunctionCall","src":"408:10:9"},"variableNames":[{"name":"i","nativeSrc":"403:1:9","nodeType":"YulIdentifier","src":"403:1:9"}]}]},"pre":{"nativeSrc":"383:3:9","nodeType":"YulBlock","src":"383:3:9","statements":[]},"src":"379:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:9","nodeType":"YulIdentifier","src":"512:3:9"},{"name":"length","nativeSrc":"517:6:9","nodeType":"YulIdentifier","src":"517:6:9"}],"functionName":{"name":"add","nativeSrc":"508:3:9","nodeType":"YulIdentifier","src":"508:3:9"},"nativeSrc":"508:16:9","nodeType":"YulFunctionCall","src":"508:16:9"},{"kind":"number","nativeSrc":"526:1:9","nodeType":"YulLiteral","src":"526:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:9","nodeType":"YulIdentifier","src":"501:6:9"},"nativeSrc":"501:27:9","nodeType":"YulFunctionCall","src":"501:27:9"},"nativeSrc":"501:27:9","nodeType":"YulExpressionStatement","src":"501:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:9","nodeType":"YulTypedName","src":"331:3:9","type":""},{"name":"dst","nativeSrc":"336:3:9","nodeType":"YulTypedName","src":"336:3:9","type":""},{"name":"length","nativeSrc":"341:6:9","nodeType":"YulTypedName","src":"341:6:9","type":""}],"src":"287:248:9"},{"body":{"nativeSrc":"589:54:9","nodeType":"YulBlock","src":"589:54:9","statements":[{"nativeSrc":"599:38:9","nodeType":"YulAssignment","src":"599:38:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:9","nodeType":"YulIdentifier","src":"617:5:9"},{"kind":"number","nativeSrc":"624:2:9","nodeType":"YulLiteral","src":"624:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:9","nodeType":"YulIdentifier","src":"613:3:9"},"nativeSrc":"613:14:9","nodeType":"YulFunctionCall","src":"613:14:9"},{"arguments":[{"kind":"number","nativeSrc":"633:2:9","nodeType":"YulLiteral","src":"633:2:9","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:9","nodeType":"YulIdentifier","src":"629:3:9"},"nativeSrc":"629:7:9","nodeType":"YulFunctionCall","src":"629:7:9"}],"functionName":{"name":"and","nativeSrc":"609:3:9","nodeType":"YulIdentifier","src":"609:3:9"},"nativeSrc":"609:28:9","nodeType":"YulFunctionCall","src":"609:28:9"},"variableNames":[{"name":"result","nativeSrc":"599:6:9","nodeType":"YulIdentifier","src":"599:6:9"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:9","nodeType":"YulTypedName","src":"572:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:9","nodeType":"YulTypedName","src":"582:6:9","type":""}],"src":"541:102:9"},{"body":{"nativeSrc":"741:285:9","nodeType":"YulBlock","src":"741:285:9","statements":[{"nativeSrc":"751:53:9","nodeType":"YulVariableDeclaration","src":"751:53:9","value":{"arguments":[{"name":"value","nativeSrc":"798:5:9","nodeType":"YulIdentifier","src":"798:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:9","nodeType":"YulIdentifier","src":"765:32:9"},"nativeSrc":"765:39:9","nodeType":"YulFunctionCall","src":"765:39:9"},"variables":[{"name":"length","nativeSrc":"755:6:9","nodeType":"YulTypedName","src":"755:6:9","type":""}]},{"nativeSrc":"813:78:9","nodeType":"YulAssignment","src":"813:78:9","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:9","nodeType":"YulIdentifier","src":"879:3:9"},{"name":"length","nativeSrc":"884:6:9","nodeType":"YulIdentifier","src":"884:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:9","nodeType":"YulIdentifier","src":"820:58:9"},"nativeSrc":"820:71:9","nodeType":"YulFunctionCall","src":"820:71:9"},"variableNames":[{"name":"pos","nativeSrc":"813:3:9","nodeType":"YulIdentifier","src":"813:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:9","nodeType":"YulIdentifier","src":"939:5:9"},{"kind":"number","nativeSrc":"946:4:9","nodeType":"YulLiteral","src":"946:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:9","nodeType":"YulIdentifier","src":"935:3:9"},"nativeSrc":"935:16:9","nodeType":"YulFunctionCall","src":"935:16:9"},{"name":"pos","nativeSrc":"953:3:9","nodeType":"YulIdentifier","src":"953:3:9"},{"name":"length","nativeSrc":"958:6:9","nodeType":"YulIdentifier","src":"958:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:9","nodeType":"YulIdentifier","src":"900:34:9"},"nativeSrc":"900:65:9","nodeType":"YulFunctionCall","src":"900:65:9"},"nativeSrc":"900:65:9","nodeType":"YulExpressionStatement","src":"900:65:9"},{"nativeSrc":"974:46:9","nodeType":"YulAssignment","src":"974:46:9","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:9","nodeType":"YulIdentifier","src":"985:3:9"},{"arguments":[{"name":"length","nativeSrc":"1012:6:9","nodeType":"YulIdentifier","src":"1012:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:9","nodeType":"YulIdentifier","src":"990:21:9"},"nativeSrc":"990:29:9","nodeType":"YulFunctionCall","src":"990:29:9"}],"functionName":{"name":"add","nativeSrc":"981:3:9","nodeType":"YulIdentifier","src":"981:3:9"},"nativeSrc":"981:39:9","nodeType":"YulFunctionCall","src":"981:39:9"},"variableNames":[{"name":"end","nativeSrc":"974:3:9","nodeType":"YulIdentifier","src":"974:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:9","nodeType":"YulTypedName","src":"722:5:9","type":""},{"name":"pos","nativeSrc":"729:3:9","nodeType":"YulTypedName","src":"729:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:9","nodeType":"YulTypedName","src":"737:3:9","type":""}],"src":"649:377:9"},{"body":{"nativeSrc":"1150:195:9","nodeType":"YulBlock","src":"1150:195:9","statements":[{"nativeSrc":"1160:26:9","nodeType":"YulAssignment","src":"1160:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:9","nodeType":"YulIdentifier","src":"1172:9:9"},{"kind":"number","nativeSrc":"1183:2:9","nodeType":"YulLiteral","src":"1183:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:9","nodeType":"YulIdentifier","src":"1168:3:9"},"nativeSrc":"1168:18:9","nodeType":"YulFunctionCall","src":"1168:18:9"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:9","nodeType":"YulIdentifier","src":"1160:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:9","nodeType":"YulIdentifier","src":"1207:9:9"},{"kind":"number","nativeSrc":"1218:1:9","nodeType":"YulLiteral","src":"1218:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:9","nodeType":"YulIdentifier","src":"1203:3:9"},"nativeSrc":"1203:17:9","nodeType":"YulFunctionCall","src":"1203:17:9"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:9","nodeType":"YulIdentifier","src":"1226:4:9"},{"name":"headStart","nativeSrc":"1232:9:9","nodeType":"YulIdentifier","src":"1232:9:9"}],"functionName":{"name":"sub","nativeSrc":"1222:3:9","nodeType":"YulIdentifier","src":"1222:3:9"},"nativeSrc":"1222:20:9","nodeType":"YulFunctionCall","src":"1222:20:9"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:9","nodeType":"YulIdentifier","src":"1196:6:9"},"nativeSrc":"1196:47:9","nodeType":"YulFunctionCall","src":"1196:47:9"},"nativeSrc":"1196:47:9","nodeType":"YulExpressionStatement","src":"1196:47:9"},{"nativeSrc":"1252:86:9","nodeType":"YulAssignment","src":"1252:86:9","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:9","nodeType":"YulIdentifier","src":"1324:6:9"},{"name":"tail","nativeSrc":"1333:4:9","nodeType":"YulIdentifier","src":"1333:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:9","nodeType":"YulIdentifier","src":"1260:63:9"},"nativeSrc":"1260:78:9","nodeType":"YulFunctionCall","src":"1260:78:9"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:9","nodeType":"YulIdentifier","src":"1252:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:9","nodeType":"YulTypedName","src":"1122:9:9","type":""},{"name":"value0","nativeSrc":"1134:6:9","nodeType":"YulTypedName","src":"1134:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:9","nodeType":"YulTypedName","src":"1145:4:9","type":""}],"src":"1032:313:9"},{"body":{"nativeSrc":"1391:35:9","nodeType":"YulBlock","src":"1391:35:9","statements":[{"nativeSrc":"1401:19:9","nodeType":"YulAssignment","src":"1401:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:9","nodeType":"YulLiteral","src":"1417:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:9","nodeType":"YulIdentifier","src":"1411:5:9"},"nativeSrc":"1411:9:9","nodeType":"YulFunctionCall","src":"1411:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:9","nodeType":"YulIdentifier","src":"1401:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:9","nodeType":"YulTypedName","src":"1384:6:9","type":""}],"src":"1351:75:9"},{"body":{"nativeSrc":"1521:28:9","nodeType":"YulBlock","src":"1521:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:9","nodeType":"YulLiteral","src":"1538:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:9","nodeType":"YulLiteral","src":"1541:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:9","nodeType":"YulIdentifier","src":"1531:6:9"},"nativeSrc":"1531:12:9","nodeType":"YulFunctionCall","src":"1531:12:9"},"nativeSrc":"1531:12:9","nodeType":"YulExpressionStatement","src":"1531:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:9","nodeType":"YulFunctionDefinition","src":"1432:117:9"},{"body":{"nativeSrc":"1644:28:9","nodeType":"YulBlock","src":"1644:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:9","nodeType":"YulLiteral","src":"1661:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:9","nodeType":"YulLiteral","src":"1664:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:9","nodeType":"YulIdentifier","src":"1654:6:9"},"nativeSrc":"1654:12:9","nodeType":"YulFunctionCall","src":"1654:12:9"},"nativeSrc":"1654:12:9","nodeType":"YulExpressionStatement","src":"1654:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:9","nodeType":"YulFunctionDefinition","src":"1555:117:9"},{"body":{"nativeSrc":"1723:81:9","nodeType":"YulBlock","src":"1723:81:9","statements":[{"nativeSrc":"1733:65:9","nodeType":"YulAssignment","src":"1733:65:9","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:9","nodeType":"YulIdentifier","src":"1748:5:9"},{"kind":"number","nativeSrc":"1755:42:9","nodeType":"YulLiteral","src":"1755:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:9","nodeType":"YulIdentifier","src":"1744:3:9"},"nativeSrc":"1744:54:9","nodeType":"YulFunctionCall","src":"1744:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:9","nodeType":"YulIdentifier","src":"1733:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:9","nodeType":"YulTypedName","src":"1705:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:9","nodeType":"YulTypedName","src":"1715:7:9","type":""}],"src":"1678:126:9"},{"body":{"nativeSrc":"1855:51:9","nodeType":"YulBlock","src":"1855:51:9","statements":[{"nativeSrc":"1865:35:9","nodeType":"YulAssignment","src":"1865:35:9","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:9","nodeType":"YulIdentifier","src":"1894:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:9","nodeType":"YulIdentifier","src":"1876:17:9"},"nativeSrc":"1876:24:9","nodeType":"YulFunctionCall","src":"1876:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:9","nodeType":"YulIdentifier","src":"1865:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:9","nodeType":"YulTypedName","src":"1837:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:9","nodeType":"YulTypedName","src":"1847:7:9","type":""}],"src":"1810:96:9"},{"body":{"nativeSrc":"1955:79:9","nodeType":"YulBlock","src":"1955:79:9","statements":[{"body":{"nativeSrc":"2012:16:9","nodeType":"YulBlock","src":"2012:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:9","nodeType":"YulLiteral","src":"2021:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:9","nodeType":"YulLiteral","src":"2024:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:9","nodeType":"YulIdentifier","src":"2014:6:9"},"nativeSrc":"2014:12:9","nodeType":"YulFunctionCall","src":"2014:12:9"},"nativeSrc":"2014:12:9","nodeType":"YulExpressionStatement","src":"2014:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:9","nodeType":"YulIdentifier","src":"1978:5:9"},{"arguments":[{"name":"value","nativeSrc":"2003:5:9","nodeType":"YulIdentifier","src":"2003:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:9","nodeType":"YulIdentifier","src":"1985:17:9"},"nativeSrc":"1985:24:9","nodeType":"YulFunctionCall","src":"1985:24:9"}],"functionName":{"name":"eq","nativeSrc":"1975:2:9","nodeType":"YulIdentifier","src":"1975:2:9"},"nativeSrc":"1975:35:9","nodeType":"YulFunctionCall","src":"1975:35:9"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:9","nodeType":"YulIdentifier","src":"1968:6:9"},"nativeSrc":"1968:43:9","nodeType":"YulFunctionCall","src":"1968:43:9"},"nativeSrc":"1965:63:9","nodeType":"YulIf","src":"1965:63:9"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:9","nodeType":"YulTypedName","src":"1948:5:9","type":""}],"src":"1912:122:9"},{"body":{"nativeSrc":"2092:87:9","nodeType":"YulBlock","src":"2092:87:9","statements":[{"nativeSrc":"2102:29:9","nodeType":"YulAssignment","src":"2102:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:9","nodeType":"YulIdentifier","src":"2124:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:9","nodeType":"YulIdentifier","src":"2111:12:9"},"nativeSrc":"2111:20:9","nodeType":"YulFunctionCall","src":"2111:20:9"},"variableNames":[{"name":"value","nativeSrc":"2102:5:9","nodeType":"YulIdentifier","src":"2102:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:9","nodeType":"YulIdentifier","src":"2167:5:9"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:9","nodeType":"YulIdentifier","src":"2140:26:9"},"nativeSrc":"2140:33:9","nodeType":"YulFunctionCall","src":"2140:33:9"},"nativeSrc":"2140:33:9","nodeType":"YulExpressionStatement","src":"2140:33:9"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:9","nodeType":"YulTypedName","src":"2070:6:9","type":""},{"name":"end","nativeSrc":"2078:3:9","nodeType":"YulTypedName","src":"2078:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:9","nodeType":"YulTypedName","src":"2086:5:9","type":""}],"src":"2040:139:9"},{"body":{"nativeSrc":"2230:32:9","nodeType":"YulBlock","src":"2230:32:9","statements":[{"nativeSrc":"2240:16:9","nodeType":"YulAssignment","src":"2240:16:9","value":{"name":"value","nativeSrc":"2251:5:9","nodeType":"YulIdentifier","src":"2251:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:9","nodeType":"YulIdentifier","src":"2240:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:9","nodeType":"YulTypedName","src":"2212:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:9","nodeType":"YulTypedName","src":"2222:7:9","type":""}],"src":"2185:77:9"},{"body":{"nativeSrc":"2311:79:9","nodeType":"YulBlock","src":"2311:79:9","statements":[{"body":{"nativeSrc":"2368:16:9","nodeType":"YulBlock","src":"2368:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:9","nodeType":"YulLiteral","src":"2377:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:9","nodeType":"YulLiteral","src":"2380:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:9","nodeType":"YulIdentifier","src":"2370:6:9"},"nativeSrc":"2370:12:9","nodeType":"YulFunctionCall","src":"2370:12:9"},"nativeSrc":"2370:12:9","nodeType":"YulExpressionStatement","src":"2370:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:9","nodeType":"YulIdentifier","src":"2334:5:9"},{"arguments":[{"name":"value","nativeSrc":"2359:5:9","nodeType":"YulIdentifier","src":"2359:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:9","nodeType":"YulIdentifier","src":"2341:17:9"},"nativeSrc":"2341:24:9","nodeType":"YulFunctionCall","src":"2341:24:9"}],"functionName":{"name":"eq","nativeSrc":"2331:2:9","nodeType":"YulIdentifier","src":"2331:2:9"},"nativeSrc":"2331:35:9","nodeType":"YulFunctionCall","src":"2331:35:9"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:9","nodeType":"YulIdentifier","src":"2324:6:9"},"nativeSrc":"2324:43:9","nodeType":"YulFunctionCall","src":"2324:43:9"},"nativeSrc":"2321:63:9","nodeType":"YulIf","src":"2321:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:9","nodeType":"YulTypedName","src":"2304:5:9","type":""}],"src":"2268:122:9"},{"body":{"nativeSrc":"2448:87:9","nodeType":"YulBlock","src":"2448:87:9","statements":[{"nativeSrc":"2458:29:9","nodeType":"YulAssignment","src":"2458:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:9","nodeType":"YulIdentifier","src":"2480:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:9","nodeType":"YulIdentifier","src":"2467:12:9"},"nativeSrc":"2467:20:9","nodeType":"YulFunctionCall","src":"2467:20:9"},"variableNames":[{"name":"value","nativeSrc":"2458:5:9","nodeType":"YulIdentifier","src":"2458:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:9","nodeType":"YulIdentifier","src":"2523:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:9","nodeType":"YulIdentifier","src":"2496:26:9"},"nativeSrc":"2496:33:9","nodeType":"YulFunctionCall","src":"2496:33:9"},"nativeSrc":"2496:33:9","nodeType":"YulExpressionStatement","src":"2496:33:9"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:9","nodeType":"YulTypedName","src":"2426:6:9","type":""},{"name":"end","nativeSrc":"2434:3:9","nodeType":"YulTypedName","src":"2434:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:9","nodeType":"YulTypedName","src":"2442:5:9","type":""}],"src":"2396:139:9"},{"body":{"nativeSrc":"2624:391:9","nodeType":"YulBlock","src":"2624:391:9","statements":[{"body":{"nativeSrc":"2670:83:9","nodeType":"YulBlock","src":"2670:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:9","nodeType":"YulIdentifier","src":"2672:77:9"},"nativeSrc":"2672:79:9","nodeType":"YulFunctionCall","src":"2672:79:9"},"nativeSrc":"2672:79:9","nodeType":"YulExpressionStatement","src":"2672:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:9","nodeType":"YulIdentifier","src":"2645:7:9"},{"name":"headStart","nativeSrc":"2654:9:9","nodeType":"YulIdentifier","src":"2654:9:9"}],"functionName":{"name":"sub","nativeSrc":"2641:3:9","nodeType":"YulIdentifier","src":"2641:3:9"},"nativeSrc":"2641:23:9","nodeType":"YulFunctionCall","src":"2641:23:9"},{"kind":"number","nativeSrc":"2666:2:9","nodeType":"YulLiteral","src":"2666:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:9","nodeType":"YulIdentifier","src":"2637:3:9"},"nativeSrc":"2637:32:9","nodeType":"YulFunctionCall","src":"2637:32:9"},"nativeSrc":"2634:119:9","nodeType":"YulIf","src":"2634:119:9"},{"nativeSrc":"2763:117:9","nodeType":"YulBlock","src":"2763:117:9","statements":[{"nativeSrc":"2778:15:9","nodeType":"YulVariableDeclaration","src":"2778:15:9","value":{"kind":"number","nativeSrc":"2792:1:9","nodeType":"YulLiteral","src":"2792:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:9","nodeType":"YulTypedName","src":"2782:6:9","type":""}]},{"nativeSrc":"2807:63:9","nodeType":"YulAssignment","src":"2807:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:9","nodeType":"YulIdentifier","src":"2842:9:9"},{"name":"offset","nativeSrc":"2853:6:9","nodeType":"YulIdentifier","src":"2853:6:9"}],"functionName":{"name":"add","nativeSrc":"2838:3:9","nodeType":"YulIdentifier","src":"2838:3:9"},"nativeSrc":"2838:22:9","nodeType":"YulFunctionCall","src":"2838:22:9"},{"name":"dataEnd","nativeSrc":"2862:7:9","nodeType":"YulIdentifier","src":"2862:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:9","nodeType":"YulIdentifier","src":"2817:20:9"},"nativeSrc":"2817:53:9","nodeType":"YulFunctionCall","src":"2817:53:9"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:9","nodeType":"YulIdentifier","src":"2807:6:9"}]}]},{"nativeSrc":"2890:118:9","nodeType":"YulBlock","src":"2890:118:9","statements":[{"nativeSrc":"2905:16:9","nodeType":"YulVariableDeclaration","src":"2905:16:9","value":{"kind":"number","nativeSrc":"2919:2:9","nodeType":"YulLiteral","src":"2919:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:9","nodeType":"YulTypedName","src":"2909:6:9","type":""}]},{"nativeSrc":"2935:63:9","nodeType":"YulAssignment","src":"2935:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:9","nodeType":"YulIdentifier","src":"2970:9:9"},{"name":"offset","nativeSrc":"2981:6:9","nodeType":"YulIdentifier","src":"2981:6:9"}],"functionName":{"name":"add","nativeSrc":"2966:3:9","nodeType":"YulIdentifier","src":"2966:3:9"},"nativeSrc":"2966:22:9","nodeType":"YulFunctionCall","src":"2966:22:9"},{"name":"dataEnd","nativeSrc":"2990:7:9","nodeType":"YulIdentifier","src":"2990:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:9","nodeType":"YulIdentifier","src":"2945:20:9"},"nativeSrc":"2945:53:9","nodeType":"YulFunctionCall","src":"2945:53:9"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:9","nodeType":"YulIdentifier","src":"2935:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:9","nodeType":"YulTypedName","src":"2586:9:9","type":""},{"name":"dataEnd","nativeSrc":"2597:7:9","nodeType":"YulTypedName","src":"2597:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:9","nodeType":"YulTypedName","src":"2609:6:9","type":""},{"name":"value1","nativeSrc":"2617:6:9","nodeType":"YulTypedName","src":"2617:6:9","type":""}],"src":"2541:474:9"},{"body":{"nativeSrc":"3063:48:9","nodeType":"YulBlock","src":"3063:48:9","statements":[{"nativeSrc":"3073:32:9","nodeType":"YulAssignment","src":"3073:32:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:9","nodeType":"YulIdentifier","src":"3098:5:9"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:9","nodeType":"YulIdentifier","src":"3091:6:9"},"nativeSrc":"3091:13:9","nodeType":"YulFunctionCall","src":"3091:13:9"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:9","nodeType":"YulIdentifier","src":"3084:6:9"},"nativeSrc":"3084:21:9","nodeType":"YulFunctionCall","src":"3084:21:9"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:9","nodeType":"YulIdentifier","src":"3073:7:9"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:9","nodeType":"YulTypedName","src":"3045:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:9","nodeType":"YulTypedName","src":"3055:7:9","type":""}],"src":"3021:90:9"},{"body":{"nativeSrc":"3176:50:9","nodeType":"YulBlock","src":"3176:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:9","nodeType":"YulIdentifier","src":"3193:3:9"},{"arguments":[{"name":"value","nativeSrc":"3213:5:9","nodeType":"YulIdentifier","src":"3213:5:9"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:9","nodeType":"YulIdentifier","src":"3198:14:9"},"nativeSrc":"3198:21:9","nodeType":"YulFunctionCall","src":"3198:21:9"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:9","nodeType":"YulIdentifier","src":"3186:6:9"},"nativeSrc":"3186:34:9","nodeType":"YulFunctionCall","src":"3186:34:9"},"nativeSrc":"3186:34:9","nodeType":"YulExpressionStatement","src":"3186:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:9","nodeType":"YulTypedName","src":"3164:5:9","type":""},{"name":"pos","nativeSrc":"3171:3:9","nodeType":"YulTypedName","src":"3171:3:9","type":""}],"src":"3117:109:9"},{"body":{"nativeSrc":"3324:118:9","nodeType":"YulBlock","src":"3324:118:9","statements":[{"nativeSrc":"3334:26:9","nodeType":"YulAssignment","src":"3334:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:9","nodeType":"YulIdentifier","src":"3346:9:9"},{"kind":"number","nativeSrc":"3357:2:9","nodeType":"YulLiteral","src":"3357:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:9","nodeType":"YulIdentifier","src":"3342:3:9"},"nativeSrc":"3342:18:9","nodeType":"YulFunctionCall","src":"3342:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:9","nodeType":"YulIdentifier","src":"3334:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:9","nodeType":"YulIdentifier","src":"3408:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:9","nodeType":"YulIdentifier","src":"3421:9:9"},{"kind":"number","nativeSrc":"3432:1:9","nodeType":"YulLiteral","src":"3432:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:9","nodeType":"YulIdentifier","src":"3417:3:9"},"nativeSrc":"3417:17:9","nodeType":"YulFunctionCall","src":"3417:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:9","nodeType":"YulIdentifier","src":"3370:37:9"},"nativeSrc":"3370:65:9","nodeType":"YulFunctionCall","src":"3370:65:9"},"nativeSrc":"3370:65:9","nodeType":"YulExpressionStatement","src":"3370:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:9","nodeType":"YulTypedName","src":"3296:9:9","type":""},{"name":"value0","nativeSrc":"3308:6:9","nodeType":"YulTypedName","src":"3308:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:9","nodeType":"YulTypedName","src":"3319:4:9","type":""}],"src":"3232:210:9"},{"body":{"nativeSrc":"3513:53:9","nodeType":"YulBlock","src":"3513:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:9","nodeType":"YulIdentifier","src":"3530:3:9"},{"arguments":[{"name":"value","nativeSrc":"3553:5:9","nodeType":"YulIdentifier","src":"3553:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:9","nodeType":"YulIdentifier","src":"3535:17:9"},"nativeSrc":"3535:24:9","nodeType":"YulFunctionCall","src":"3535:24:9"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:9","nodeType":"YulIdentifier","src":"3523:6:9"},"nativeSrc":"3523:37:9","nodeType":"YulFunctionCall","src":"3523:37:9"},"nativeSrc":"3523:37:9","nodeType":"YulExpressionStatement","src":"3523:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:9","nodeType":"YulTypedName","src":"3501:5:9","type":""},{"name":"pos","nativeSrc":"3508:3:9","nodeType":"YulTypedName","src":"3508:3:9","type":""}],"src":"3448:118:9"},{"body":{"nativeSrc":"3670:124:9","nodeType":"YulBlock","src":"3670:124:9","statements":[{"nativeSrc":"3680:26:9","nodeType":"YulAssignment","src":"3680:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:9","nodeType":"YulIdentifier","src":"3692:9:9"},{"kind":"number","nativeSrc":"3703:2:9","nodeType":"YulLiteral","src":"3703:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:9","nodeType":"YulIdentifier","src":"3688:3:9"},"nativeSrc":"3688:18:9","nodeType":"YulFunctionCall","src":"3688:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:9","nodeType":"YulIdentifier","src":"3680:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:9","nodeType":"YulIdentifier","src":"3760:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:9","nodeType":"YulIdentifier","src":"3773:9:9"},{"kind":"number","nativeSrc":"3784:1:9","nodeType":"YulLiteral","src":"3784:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:9","nodeType":"YulIdentifier","src":"3769:3:9"},"nativeSrc":"3769:17:9","nodeType":"YulFunctionCall","src":"3769:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:9","nodeType":"YulIdentifier","src":"3716:43:9"},"nativeSrc":"3716:71:9","nodeType":"YulFunctionCall","src":"3716:71:9"},"nativeSrc":"3716:71:9","nodeType":"YulExpressionStatement","src":"3716:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:9","nodeType":"YulTypedName","src":"3642:9:9","type":""},{"name":"value0","nativeSrc":"3654:6:9","nodeType":"YulTypedName","src":"3654:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:9","nodeType":"YulTypedName","src":"3665:4:9","type":""}],"src":"3572:222:9"},{"body":{"nativeSrc":"3900:519:9","nodeType":"YulBlock","src":"3900:519:9","statements":[{"body":{"nativeSrc":"3946:83:9","nodeType":"YulBlock","src":"3946:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:9","nodeType":"YulIdentifier","src":"3948:77:9"},"nativeSrc":"3948:79:9","nodeType":"YulFunctionCall","src":"3948:79:9"},"nativeSrc":"3948:79:9","nodeType":"YulExpressionStatement","src":"3948:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:9","nodeType":"YulIdentifier","src":"3921:7:9"},{"name":"headStart","nativeSrc":"3930:9:9","nodeType":"YulIdentifier","src":"3930:9:9"}],"functionName":{"name":"sub","nativeSrc":"3917:3:9","nodeType":"YulIdentifier","src":"3917:3:9"},"nativeSrc":"3917:23:9","nodeType":"YulFunctionCall","src":"3917:23:9"},{"kind":"number","nativeSrc":"3942:2:9","nodeType":"YulLiteral","src":"3942:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:9","nodeType":"YulIdentifier","src":"3913:3:9"},"nativeSrc":"3913:32:9","nodeType":"YulFunctionCall","src":"3913:32:9"},"nativeSrc":"3910:119:9","nodeType":"YulIf","src":"3910:119:9"},{"nativeSrc":"4039:117:9","nodeType":"YulBlock","src":"4039:117:9","statements":[{"nativeSrc":"4054:15:9","nodeType":"YulVariableDeclaration","src":"4054:15:9","value":{"kind":"number","nativeSrc":"4068:1:9","nodeType":"YulLiteral","src":"4068:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:9","nodeType":"YulTypedName","src":"4058:6:9","type":""}]},{"nativeSrc":"4083:63:9","nodeType":"YulAssignment","src":"4083:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:9","nodeType":"YulIdentifier","src":"4118:9:9"},{"name":"offset","nativeSrc":"4129:6:9","nodeType":"YulIdentifier","src":"4129:6:9"}],"functionName":{"name":"add","nativeSrc":"4114:3:9","nodeType":"YulIdentifier","src":"4114:3:9"},"nativeSrc":"4114:22:9","nodeType":"YulFunctionCall","src":"4114:22:9"},{"name":"dataEnd","nativeSrc":"4138:7:9","nodeType":"YulIdentifier","src":"4138:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:9","nodeType":"YulIdentifier","src":"4093:20:9"},"nativeSrc":"4093:53:9","nodeType":"YulFunctionCall","src":"4093:53:9"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:9","nodeType":"YulIdentifier","src":"4083:6:9"}]}]},{"nativeSrc":"4166:118:9","nodeType":"YulBlock","src":"4166:118:9","statements":[{"nativeSrc":"4181:16:9","nodeType":"YulVariableDeclaration","src":"4181:16:9","value":{"kind":"number","nativeSrc":"4195:2:9","nodeType":"YulLiteral","src":"4195:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:9","nodeType":"YulTypedName","src":"4185:6:9","type":""}]},{"nativeSrc":"4211:63:9","nodeType":"YulAssignment","src":"4211:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:9","nodeType":"YulIdentifier","src":"4246:9:9"},{"name":"offset","nativeSrc":"4257:6:9","nodeType":"YulIdentifier","src":"4257:6:9"}],"functionName":{"name":"add","nativeSrc":"4242:3:9","nodeType":"YulIdentifier","src":"4242:3:9"},"nativeSrc":"4242:22:9","nodeType":"YulFunctionCall","src":"4242:22:9"},{"name":"dataEnd","nativeSrc":"4266:7:9","nodeType":"YulIdentifier","src":"4266:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:9","nodeType":"YulIdentifier","src":"4221:20:9"},"nativeSrc":"4221:53:9","nodeType":"YulFunctionCall","src":"4221:53:9"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:9","nodeType":"YulIdentifier","src":"4211:6:9"}]}]},{"nativeSrc":"4294:118:9","nodeType":"YulBlock","src":"4294:118:9","statements":[{"nativeSrc":"4309:16:9","nodeType":"YulVariableDeclaration","src":"4309:16:9","value":{"kind":"number","nativeSrc":"4323:2:9","nodeType":"YulLiteral","src":"4323:2:9","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:9","nodeType":"YulTypedName","src":"4313:6:9","type":""}]},{"nativeSrc":"4339:63:9","nodeType":"YulAssignment","src":"4339:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:9","nodeType":"YulIdentifier","src":"4374:9:9"},{"name":"offset","nativeSrc":"4385:6:9","nodeType":"YulIdentifier","src":"4385:6:9"}],"functionName":{"name":"add","nativeSrc":"4370:3:9","nodeType":"YulIdentifier","src":"4370:3:9"},"nativeSrc":"4370:22:9","nodeType":"YulFunctionCall","src":"4370:22:9"},{"name":"dataEnd","nativeSrc":"4394:7:9","nodeType":"YulIdentifier","src":"4394:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:9","nodeType":"YulIdentifier","src":"4349:20:9"},"nativeSrc":"4349:53:9","nodeType":"YulFunctionCall","src":"4349:53:9"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:9","nodeType":"YulIdentifier","src":"4339:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:9","nodeType":"YulTypedName","src":"3854:9:9","type":""},{"name":"dataEnd","nativeSrc":"3865:7:9","nodeType":"YulTypedName","src":"3865:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:9","nodeType":"YulTypedName","src":"3877:6:9","type":""},{"name":"value1","nativeSrc":"3885:6:9","nodeType":"YulTypedName","src":"3885:6:9","type":""},{"name":"value2","nativeSrc":"3893:6:9","nodeType":"YulTypedName","src":"3893:6:9","type":""}],"src":"3800:619:9"},{"body":{"nativeSrc":"4468:43:9","nodeType":"YulBlock","src":"4468:43:9","statements":[{"nativeSrc":"4478:27:9","nodeType":"YulAssignment","src":"4478:27:9","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:9","nodeType":"YulIdentifier","src":"4493:5:9"},{"kind":"number","nativeSrc":"4500:4:9","nodeType":"YulLiteral","src":"4500:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:9","nodeType":"YulIdentifier","src":"4489:3:9"},"nativeSrc":"4489:16:9","nodeType":"YulFunctionCall","src":"4489:16:9"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:9","nodeType":"YulIdentifier","src":"4478:7:9"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:9","nodeType":"YulTypedName","src":"4450:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:9","nodeType":"YulTypedName","src":"4460:7:9","type":""}],"src":"4425:86:9"},{"body":{"nativeSrc":"4578:51:9","nodeType":"YulBlock","src":"4578:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:9","nodeType":"YulIdentifier","src":"4595:3:9"},{"arguments":[{"name":"value","nativeSrc":"4616:5:9","nodeType":"YulIdentifier","src":"4616:5:9"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:9","nodeType":"YulIdentifier","src":"4600:15:9"},"nativeSrc":"4600:22:9","nodeType":"YulFunctionCall","src":"4600:22:9"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:9","nodeType":"YulIdentifier","src":"4588:6:9"},"nativeSrc":"4588:35:9","nodeType":"YulFunctionCall","src":"4588:35:9"},"nativeSrc":"4588:35:9","nodeType":"YulExpressionStatement","src":"4588:35:9"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:9","nodeType":"YulTypedName","src":"4566:5:9","type":""},{"name":"pos","nativeSrc":"4573:3:9","nodeType":"YulTypedName","src":"4573:3:9","type":""}],"src":"4517:112:9"},{"body":{"nativeSrc":"4729:120:9","nodeType":"YulBlock","src":"4729:120:9","statements":[{"nativeSrc":"4739:26:9","nodeType":"YulAssignment","src":"4739:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:9","nodeType":"YulIdentifier","src":"4751:9:9"},{"kind":"number","nativeSrc":"4762:2:9","nodeType":"YulLiteral","src":"4762:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:9","nodeType":"YulIdentifier","src":"4747:3:9"},"nativeSrc":"4747:18:9","nodeType":"YulFunctionCall","src":"4747:18:9"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:9","nodeType":"YulIdentifier","src":"4739:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:9","nodeType":"YulIdentifier","src":"4815:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:9","nodeType":"YulIdentifier","src":"4828:9:9"},{"kind":"number","nativeSrc":"4839:1:9","nodeType":"YulLiteral","src":"4839:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:9","nodeType":"YulIdentifier","src":"4824:3:9"},"nativeSrc":"4824:17:9","nodeType":"YulFunctionCall","src":"4824:17:9"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:9","nodeType":"YulIdentifier","src":"4775:39:9"},"nativeSrc":"4775:67:9","nodeType":"YulFunctionCall","src":"4775:67:9"},"nativeSrc":"4775:67:9","nodeType":"YulExpressionStatement","src":"4775:67:9"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:9","nodeType":"YulTypedName","src":"4701:9:9","type":""},{"name":"value0","nativeSrc":"4713:6:9","nodeType":"YulTypedName","src":"4713:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:9","nodeType":"YulTypedName","src":"4724:4:9","type":""}],"src":"4635:214:9"},{"body":{"nativeSrc":"4921:263:9","nodeType":"YulBlock","src":"4921:263:9","statements":[{"body":{"nativeSrc":"4967:83:9","nodeType":"YulBlock","src":"4967:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:9","nodeType":"YulIdentifier","src":"4969:77:9"},"nativeSrc":"4969:79:9","nodeType":"YulFunctionCall","src":"4969:79:9"},"nativeSrc":"4969:79:9","nodeType":"YulExpressionStatement","src":"4969:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:9","nodeType":"YulIdentifier","src":"4942:7:9"},{"name":"headStart","nativeSrc":"4951:9:9","nodeType":"YulIdentifier","src":"4951:9:9"}],"functionName":{"name":"sub","nativeSrc":"4938:3:9","nodeType":"YulIdentifier","src":"4938:3:9"},"nativeSrc":"4938:23:9","nodeType":"YulFunctionCall","src":"4938:23:9"},{"kind":"number","nativeSrc":"4963:2:9","nodeType":"YulLiteral","src":"4963:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:9","nodeType":"YulIdentifier","src":"4934:3:9"},"nativeSrc":"4934:32:9","nodeType":"YulFunctionCall","src":"4934:32:9"},"nativeSrc":"4931:119:9","nodeType":"YulIf","src":"4931:119:9"},{"nativeSrc":"5060:117:9","nodeType":"YulBlock","src":"5060:117:9","statements":[{"nativeSrc":"5075:15:9","nodeType":"YulVariableDeclaration","src":"5075:15:9","value":{"kind":"number","nativeSrc":"5089:1:9","nodeType":"YulLiteral","src":"5089:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:9","nodeType":"YulTypedName","src":"5079:6:9","type":""}]},{"nativeSrc":"5104:63:9","nodeType":"YulAssignment","src":"5104:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:9","nodeType":"YulIdentifier","src":"5139:9:9"},{"name":"offset","nativeSrc":"5150:6:9","nodeType":"YulIdentifier","src":"5150:6:9"}],"functionName":{"name":"add","nativeSrc":"5135:3:9","nodeType":"YulIdentifier","src":"5135:3:9"},"nativeSrc":"5135:22:9","nodeType":"YulFunctionCall","src":"5135:22:9"},{"name":"dataEnd","nativeSrc":"5159:7:9","nodeType":"YulIdentifier","src":"5159:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5114:20:9","nodeType":"YulIdentifier","src":"5114:20:9"},"nativeSrc":"5114:53:9","nodeType":"YulFunctionCall","src":"5114:53:9"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:9","nodeType":"YulIdentifier","src":"5104:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4855:329:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:9","nodeType":"YulTypedName","src":"4891:9:9","type":""},{"name":"dataEnd","nativeSrc":"4902:7:9","nodeType":"YulTypedName","src":"4902:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:9","nodeType":"YulTypedName","src":"4914:6:9","type":""}],"src":"4855:329:9"},{"body":{"nativeSrc":"5255:53:9","nodeType":"YulBlock","src":"5255:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5272:3:9","nodeType":"YulIdentifier","src":"5272:3:9"},{"arguments":[{"name":"value","nativeSrc":"5295:5:9","nodeType":"YulIdentifier","src":"5295:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5277:17:9","nodeType":"YulIdentifier","src":"5277:17:9"},"nativeSrc":"5277:24:9","nodeType":"YulFunctionCall","src":"5277:24:9"}],"functionName":{"name":"mstore","nativeSrc":"5265:6:9","nodeType":"YulIdentifier","src":"5265:6:9"},"nativeSrc":"5265:37:9","nodeType":"YulFunctionCall","src":"5265:37:9"},"nativeSrc":"5265:37:9","nodeType":"YulExpressionStatement","src":"5265:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5190:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5243:5:9","nodeType":"YulTypedName","src":"5243:5:9","type":""},{"name":"pos","nativeSrc":"5250:3:9","nodeType":"YulTypedName","src":"5250:3:9","type":""}],"src":"5190:118:9"},{"body":{"nativeSrc":"5412:124:9","nodeType":"YulBlock","src":"5412:124:9","statements":[{"nativeSrc":"5422:26:9","nodeType":"YulAssignment","src":"5422:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"5434:9:9","nodeType":"YulIdentifier","src":"5434:9:9"},{"kind":"number","nativeSrc":"5445:2:9","nodeType":"YulLiteral","src":"5445:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5430:3:9","nodeType":"YulIdentifier","src":"5430:3:9"},"nativeSrc":"5430:18:9","nodeType":"YulFunctionCall","src":"5430:18:9"},"variableNames":[{"name":"tail","nativeSrc":"5422:4:9","nodeType":"YulIdentifier","src":"5422:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5502:6:9","nodeType":"YulIdentifier","src":"5502:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"5515:9:9","nodeType":"YulIdentifier","src":"5515:9:9"},{"kind":"number","nativeSrc":"5526:1:9","nodeType":"YulLiteral","src":"5526:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5511:3:9","nodeType":"YulIdentifier","src":"5511:3:9"},"nativeSrc":"5511:17:9","nodeType":"YulFunctionCall","src":"5511:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5458:43:9","nodeType":"YulIdentifier","src":"5458:43:9"},"nativeSrc":"5458:71:9","nodeType":"YulFunctionCall","src":"5458:71:9"},"nativeSrc":"5458:71:9","nodeType":"YulExpressionStatement","src":"5458:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5314:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5384:9:9","nodeType":"YulTypedName","src":"5384:9:9","type":""},{"name":"value0","nativeSrc":"5396:6:9","nodeType":"YulTypedName","src":"5396:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5407:4:9","nodeType":"YulTypedName","src":"5407:4:9","type":""}],"src":"5314:222:9"},{"body":{"nativeSrc":"5625:391:9","nodeType":"YulBlock","src":"5625:391:9","statements":[{"body":{"nativeSrc":"5671:83:9","nodeType":"YulBlock","src":"5671:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5673:77:9","nodeType":"YulIdentifier","src":"5673:77:9"},"nativeSrc":"5673:79:9","nodeType":"YulFunctionCall","src":"5673:79:9"},"nativeSrc":"5673:79:9","nodeType":"YulExpressionStatement","src":"5673:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5646:7:9","nodeType":"YulIdentifier","src":"5646:7:9"},{"name":"headStart","nativeSrc":"5655:9:9","nodeType":"YulIdentifier","src":"5655:9:9"}],"functionName":{"name":"sub","nativeSrc":"5642:3:9","nodeType":"YulIdentifier","src":"5642:3:9"},"nativeSrc":"5642:23:9","nodeType":"YulFunctionCall","src":"5642:23:9"},{"kind":"number","nativeSrc":"5667:2:9","nodeType":"YulLiteral","src":"5667:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5638:3:9","nodeType":"YulIdentifier","src":"5638:3:9"},"nativeSrc":"5638:32:9","nodeType":"YulFunctionCall","src":"5638:32:9"},"nativeSrc":"5635:119:9","nodeType":"YulIf","src":"5635:119:9"},{"nativeSrc":"5764:117:9","nodeType":"YulBlock","src":"5764:117:9","statements":[{"nativeSrc":"5779:15:9","nodeType":"YulVariableDeclaration","src":"5779:15:9","value":{"kind":"number","nativeSrc":"5793:1:9","nodeType":"YulLiteral","src":"5793:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5783:6:9","nodeType":"YulTypedName","src":"5783:6:9","type":""}]},{"nativeSrc":"5808:63:9","nodeType":"YulAssignment","src":"5808:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5843:9:9","nodeType":"YulIdentifier","src":"5843:9:9"},{"name":"offset","nativeSrc":"5854:6:9","nodeType":"YulIdentifier","src":"5854:6:9"}],"functionName":{"name":"add","nativeSrc":"5839:3:9","nodeType":"YulIdentifier","src":"5839:3:9"},"nativeSrc":"5839:22:9","nodeType":"YulFunctionCall","src":"5839:22:9"},{"name":"dataEnd","nativeSrc":"5863:7:9","nodeType":"YulIdentifier","src":"5863:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5818:20:9","nodeType":"YulIdentifier","src":"5818:20:9"},"nativeSrc":"5818:53:9","nodeType":"YulFunctionCall","src":"5818:53:9"},"variableNames":[{"name":"value0","nativeSrc":"5808:6:9","nodeType":"YulIdentifier","src":"5808:6:9"}]}]},{"nativeSrc":"5891:118:9","nodeType":"YulBlock","src":"5891:118:9","statements":[{"nativeSrc":"5906:16:9","nodeType":"YulVariableDeclaration","src":"5906:16:9","value":{"kind":"number","nativeSrc":"5920:2:9","nodeType":"YulLiteral","src":"5920:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5910:6:9","nodeType":"YulTypedName","src":"5910:6:9","type":""}]},{"nativeSrc":"5936:63:9","nodeType":"YulAssignment","src":"5936:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5971:9:9","nodeType":"YulIdentifier","src":"5971:9:9"},{"name":"offset","nativeSrc":"5982:6:9","nodeType":"YulIdentifier","src":"5982:6:9"}],"functionName":{"name":"add","nativeSrc":"5967:3:9","nodeType":"YulIdentifier","src":"5967:3:9"},"nativeSrc":"5967:22:9","nodeType":"YulFunctionCall","src":"5967:22:9"},{"name":"dataEnd","nativeSrc":"5991:7:9","nodeType":"YulIdentifier","src":"5991:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5946:20:9","nodeType":"YulIdentifier","src":"5946:20:9"},"nativeSrc":"5946:53:9","nodeType":"YulFunctionCall","src":"5946:53:9"},"variableNames":[{"name":"value1","nativeSrc":"5936:6:9","nodeType":"YulIdentifier","src":"5936:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5542:474:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5587:9:9","nodeType":"YulTypedName","src":"5587:9:9","type":""},{"name":"dataEnd","nativeSrc":"5598:7:9","nodeType":"YulTypedName","src":"5598:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5610:6:9","nodeType":"YulTypedName","src":"5610:6:9","type":""},{"name":"value1","nativeSrc":"5618:6:9","nodeType":"YulTypedName","src":"5618:6:9","type":""}],"src":"5542:474:9"},{"body":{"nativeSrc":"6050:152:9","nodeType":"YulBlock","src":"6050:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6067:1:9","nodeType":"YulLiteral","src":"6067:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6070:77:9","nodeType":"YulLiteral","src":"6070:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6060:6:9","nodeType":"YulIdentifier","src":"6060:6:9"},"nativeSrc":"6060:88:9","nodeType":"YulFunctionCall","src":"6060:88:9"},"nativeSrc":"6060:88:9","nodeType":"YulExpressionStatement","src":"6060:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6164:1:9","nodeType":"YulLiteral","src":"6164:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"6167:4:9","nodeType":"YulLiteral","src":"6167:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6157:6:9","nodeType":"YulIdentifier","src":"6157:6:9"},"nativeSrc":"6157:15:9","nodeType":"YulFunctionCall","src":"6157:15:9"},"nativeSrc":"6157:15:9","nodeType":"YulExpressionStatement","src":"6157:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6188:1:9","nodeType":"YulLiteral","src":"6188:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6191:4:9","nodeType":"YulLiteral","src":"6191:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6181:6:9","nodeType":"YulIdentifier","src":"6181:6:9"},"nativeSrc":"6181:15:9","nodeType":"YulFunctionCall","src":"6181:15:9"},"nativeSrc":"6181:15:9","nodeType":"YulExpressionStatement","src":"6181:15:9"}]},"name":"panic_error_0x22","nativeSrc":"6022:180:9","nodeType":"YulFunctionDefinition","src":"6022:180:9"},{"body":{"nativeSrc":"6259:269:9","nodeType":"YulBlock","src":"6259:269:9","statements":[{"nativeSrc":"6269:22:9","nodeType":"YulAssignment","src":"6269:22:9","value":{"arguments":[{"name":"data","nativeSrc":"6283:4:9","nodeType":"YulIdentifier","src":"6283:4:9"},{"kind":"number","nativeSrc":"6289:1:9","nodeType":"YulLiteral","src":"6289:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6279:3:9","nodeType":"YulIdentifier","src":"6279:3:9"},"nativeSrc":"6279:12:9","nodeType":"YulFunctionCall","src":"6279:12:9"},"variableNames":[{"name":"length","nativeSrc":"6269:6:9","nodeType":"YulIdentifier","src":"6269:6:9"}]},{"nativeSrc":"6300:38:9","nodeType":"YulVariableDeclaration","src":"6300:38:9","value":{"arguments":[{"name":"data","nativeSrc":"6330:4:9","nodeType":"YulIdentifier","src":"6330:4:9"},{"kind":"number","nativeSrc":"6336:1:9","nodeType":"YulLiteral","src":"6336:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6326:3:9","nodeType":"YulIdentifier","src":"6326:3:9"},"nativeSrc":"6326:12:9","nodeType":"YulFunctionCall","src":"6326:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6304:18:9","nodeType":"YulTypedName","src":"6304:18:9","type":""}]},{"body":{"nativeSrc":"6377:51:9","nodeType":"YulBlock","src":"6377:51:9","statements":[{"nativeSrc":"6391:27:9","nodeType":"YulAssignment","src":"6391:27:9","value":{"arguments":[{"name":"length","nativeSrc":"6405:6:9","nodeType":"YulIdentifier","src":"6405:6:9"},{"kind":"number","nativeSrc":"6413:4:9","nodeType":"YulLiteral","src":"6413:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6401:3:9","nodeType":"YulIdentifier","src":"6401:3:9"},"nativeSrc":"6401:17:9","nodeType":"YulFunctionCall","src":"6401:17:9"},"variableNames":[{"name":"length","nativeSrc":"6391:6:9","nodeType":"YulIdentifier","src":"6391:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6357:18:9","nodeType":"YulIdentifier","src":"6357:18:9"}],"functionName":{"name":"iszero","nativeSrc":"6350:6:9","nodeType":"YulIdentifier","src":"6350:6:9"},"nativeSrc":"6350:26:9","nodeType":"YulFunctionCall","src":"6350:26:9"},"nativeSrc":"6347:81:9","nodeType":"YulIf","src":"6347:81:9"},{"body":{"nativeSrc":"6480:42:9","nodeType":"YulBlock","src":"6480:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6494:16:9","nodeType":"YulIdentifier","src":"6494:16:9"},"nativeSrc":"6494:18:9","nodeType":"YulFunctionCall","src":"6494:18:9"},"nativeSrc":"6494:18:9","nodeType":"YulExpressionStatement","src":"6494:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6444:18:9","nodeType":"YulIdentifier","src":"6444:18:9"},{"arguments":[{"name":"length","nativeSrc":"6467:6:9","nodeType":"YulIdentifier","src":"6467:6:9"},{"kind":"number","nativeSrc":"6475:2:9","nodeType":"YulLiteral","src":"6475:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6464:2:9","nodeType":"YulIdentifier","src":"6464:2:9"},"nativeSrc":"6464:14:9","nodeType":"YulFunctionCall","src":"6464:14:9"}],"functionName":{"name":"eq","nativeSrc":"6441:2:9","nodeType":"YulIdentifier","src":"6441:2:9"},"nativeSrc":"6441:38:9","nodeType":"YulFunctionCall","src":"6441:38:9"},"nativeSrc":"6438:84:9","nodeType":"YulIf","src":"6438:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"6208:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6243:4:9","nodeType":"YulTypedName","src":"6243:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6252:6:9","nodeType":"YulTypedName","src":"6252:6:9","type":""}],"src":"6208:320:9"},{"body":{"nativeSrc":"6640:63:9","nodeType":"YulBlock","src":"6640:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6662:6:9","nodeType":"YulIdentifier","src":"6662:6:9"},{"kind":"number","nativeSrc":"6670:1:9","nodeType":"YulLiteral","src":"6670:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6658:3:9","nodeType":"YulIdentifier","src":"6658:3:9"},"nativeSrc":"6658:14:9","nodeType":"YulFunctionCall","src":"6658:14:9"},{"hexValue":"4f6e6c79206f776e65722063616e206d696e74","kind":"string","nativeSrc":"6674:21:9","nodeType":"YulLiteral","src":"6674:21:9","type":"","value":"Only owner can mint"}],"functionName":{"name":"mstore","nativeSrc":"6651:6:9","nodeType":"YulIdentifier","src":"6651:6:9"},"nativeSrc":"6651:45:9","nodeType":"YulFunctionCall","src":"6651:45:9"},"nativeSrc":"6651:45:9","nodeType":"YulExpressionStatement","src":"6651:45:9"}]},"name":"store_literal_in_memory_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac","nativeSrc":"6534:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6632:6:9","nodeType":"YulTypedName","src":"6632:6:9","type":""}],"src":"6534:169:9"},{"body":{"nativeSrc":"6855:220:9","nodeType":"YulBlock","src":"6855:220:9","statements":[{"nativeSrc":"6865:74:9","nodeType":"YulAssignment","src":"6865:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"6931:3:9","nodeType":"YulIdentifier","src":"6931:3:9"},{"kind":"number","nativeSrc":"6936:2:9","nodeType":"YulLiteral","src":"6936:2:9","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6872:58:9","nodeType":"YulIdentifier","src":"6872:58:9"},"nativeSrc":"6872:67:9","nodeType":"YulFunctionCall","src":"6872:67:9"},"variableNames":[{"name":"pos","nativeSrc":"6865:3:9","nodeType":"YulIdentifier","src":"6865:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7037:3:9","nodeType":"YulIdentifier","src":"7037:3:9"}],"functionName":{"name":"store_literal_in_memory_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac","nativeSrc":"6948:88:9","nodeType":"YulIdentifier","src":"6948:88:9"},"nativeSrc":"6948:93:9","nodeType":"YulFunctionCall","src":"6948:93:9"},"nativeSrc":"6948:93:9","nodeType":"YulExpressionStatement","src":"6948:93:9"},{"nativeSrc":"7050:19:9","nodeType":"YulAssignment","src":"7050:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"7061:3:9","nodeType":"YulIdentifier","src":"7061:3:9"},{"kind":"number","nativeSrc":"7066:2:9","nodeType":"YulLiteral","src":"7066:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7057:3:9","nodeType":"YulIdentifier","src":"7057:3:9"},"nativeSrc":"7057:12:9","nodeType":"YulFunctionCall","src":"7057:12:9"},"variableNames":[{"name":"end","nativeSrc":"7050:3:9","nodeType":"YulIdentifier","src":"7050:3:9"}]}]},"name":"abi_encode_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac_to_t_string_memory_ptr_fromStack","nativeSrc":"6709:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6843:3:9","nodeType":"YulTypedName","src":"6843:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6851:3:9","nodeType":"YulTypedName","src":"6851:3:9","type":""}],"src":"6709:366:9"},{"body":{"nativeSrc":"7252:248:9","nodeType":"YulBlock","src":"7252:248:9","statements":[{"nativeSrc":"7262:26:9","nodeType":"YulAssignment","src":"7262:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7274:9:9","nodeType":"YulIdentifier","src":"7274:9:9"},{"kind":"number","nativeSrc":"7285:2:9","nodeType":"YulLiteral","src":"7285:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7270:3:9","nodeType":"YulIdentifier","src":"7270:3:9"},"nativeSrc":"7270:18:9","nodeType":"YulFunctionCall","src":"7270:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7262:4:9","nodeType":"YulIdentifier","src":"7262:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7309:9:9","nodeType":"YulIdentifier","src":"7309:9:9"},{"kind":"number","nativeSrc":"7320:1:9","nodeType":"YulLiteral","src":"7320:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7305:3:9","nodeType":"YulIdentifier","src":"7305:3:9"},"nativeSrc":"7305:17:9","nodeType":"YulFunctionCall","src":"7305:17:9"},{"arguments":[{"name":"tail","nativeSrc":"7328:4:9","nodeType":"YulIdentifier","src":"7328:4:9"},{"name":"headStart","nativeSrc":"7334:9:9","nodeType":"YulIdentifier","src":"7334:9:9"}],"functionName":{"name":"sub","nativeSrc":"7324:3:9","nodeType":"YulIdentifier","src":"7324:3:9"},"nativeSrc":"7324:20:9","nodeType":"YulFunctionCall","src":"7324:20:9"}],"functionName":{"name":"mstore","nativeSrc":"7298:6:9","nodeType":"YulIdentifier","src":"7298:6:9"},"nativeSrc":"7298:47:9","nodeType":"YulFunctionCall","src":"7298:47:9"},"nativeSrc":"7298:47:9","nodeType":"YulExpressionStatement","src":"7298:47:9"},{"nativeSrc":"7354:139:9","nodeType":"YulAssignment","src":"7354:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"7488:4:9","nodeType":"YulIdentifier","src":"7488:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac_to_t_string_memory_ptr_fromStack","nativeSrc":"7362:124:9","nodeType":"YulIdentifier","src":"7362:124:9"},"nativeSrc":"7362:131:9","nodeType":"YulFunctionCall","src":"7362:131:9"},"variableNames":[{"name":"tail","nativeSrc":"7354:4:9","nodeType":"YulIdentifier","src":"7354:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7081:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7232:9:9","nodeType":"YulTypedName","src":"7232:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7247:4:9","nodeType":"YulTypedName","src":"7247:4:9","type":""}],"src":"7081:419:9"},{"body":{"nativeSrc":"7660:288:9","nodeType":"YulBlock","src":"7660:288:9","statements":[{"nativeSrc":"7670:26:9","nodeType":"YulAssignment","src":"7670:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7682:9:9","nodeType":"YulIdentifier","src":"7682:9:9"},{"kind":"number","nativeSrc":"7693:2:9","nodeType":"YulLiteral","src":"7693:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7678:3:9","nodeType":"YulIdentifier","src":"7678:3:9"},"nativeSrc":"7678:18:9","nodeType":"YulFunctionCall","src":"7678:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7670:4:9","nodeType":"YulIdentifier","src":"7670:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7750:6:9","nodeType":"YulIdentifier","src":"7750:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7763:9:9","nodeType":"YulIdentifier","src":"7763:9:9"},{"kind":"number","nativeSrc":"7774:1:9","nodeType":"YulLiteral","src":"7774:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7759:3:9","nodeType":"YulIdentifier","src":"7759:3:9"},"nativeSrc":"7759:17:9","nodeType":"YulFunctionCall","src":"7759:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7706:43:9","nodeType":"YulIdentifier","src":"7706:43:9"},"nativeSrc":"7706:71:9","nodeType":"YulFunctionCall","src":"7706:71:9"},"nativeSrc":"7706:71:9","nodeType":"YulExpressionStatement","src":"7706:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7831:6:9","nodeType":"YulIdentifier","src":"7831:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7844:9:9","nodeType":"YulIdentifier","src":"7844:9:9"},{"kind":"number","nativeSrc":"7855:2:9","nodeType":"YulLiteral","src":"7855:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7840:3:9","nodeType":"YulIdentifier","src":"7840:3:9"},"nativeSrc":"7840:18:9","nodeType":"YulFunctionCall","src":"7840:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7787:43:9","nodeType":"YulIdentifier","src":"7787:43:9"},"nativeSrc":"7787:72:9","nodeType":"YulFunctionCall","src":"7787:72:9"},"nativeSrc":"7787:72:9","nodeType":"YulExpressionStatement","src":"7787:72:9"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7913:6:9","nodeType":"YulIdentifier","src":"7913:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7926:9:9","nodeType":"YulIdentifier","src":"7926:9:9"},{"kind":"number","nativeSrc":"7937:2:9","nodeType":"YulLiteral","src":"7937:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7922:3:9","nodeType":"YulIdentifier","src":"7922:3:9"},"nativeSrc":"7922:18:9","nodeType":"YulFunctionCall","src":"7922:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7869:43:9","nodeType":"YulIdentifier","src":"7869:43:9"},"nativeSrc":"7869:72:9","nodeType":"YulFunctionCall","src":"7869:72:9"},"nativeSrc":"7869:72:9","nodeType":"YulExpressionStatement","src":"7869:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7506:442:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7616:9:9","nodeType":"YulTypedName","src":"7616:9:9","type":""},{"name":"value2","nativeSrc":"7628:6:9","nodeType":"YulTypedName","src":"7628:6:9","type":""},{"name":"value1","nativeSrc":"7636:6:9","nodeType":"YulTypedName","src":"7636:6:9","type":""},{"name":"value0","nativeSrc":"7644:6:9","nodeType":"YulTypedName","src":"7644:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7655:4:9","nodeType":"YulTypedName","src":"7655:4:9","type":""}],"src":"7506:442:9"},{"body":{"nativeSrc":"7982:152:9","nodeType":"YulBlock","src":"7982:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7999:1:9","nodeType":"YulLiteral","src":"7999:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"8002:77:9","nodeType":"YulLiteral","src":"8002:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7992:6:9","nodeType":"YulIdentifier","src":"7992:6:9"},"nativeSrc":"7992:88:9","nodeType":"YulFunctionCall","src":"7992:88:9"},"nativeSrc":"7992:88:9","nodeType":"YulExpressionStatement","src":"7992:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8096:1:9","nodeType":"YulLiteral","src":"8096:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"8099:4:9","nodeType":"YulLiteral","src":"8099:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8089:6:9","nodeType":"YulIdentifier","src":"8089:6:9"},"nativeSrc":"8089:15:9","nodeType":"YulFunctionCall","src":"8089:15:9"},"nativeSrc":"8089:15:9","nodeType":"YulExpressionStatement","src":"8089:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8120:1:9","nodeType":"YulLiteral","src":"8120:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"8123:4:9","nodeType":"YulLiteral","src":"8123:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8113:6:9","nodeType":"YulIdentifier","src":"8113:6:9"},"nativeSrc":"8113:15:9","nodeType":"YulFunctionCall","src":"8113:15:9"},"nativeSrc":"8113:15:9","nodeType":"YulExpressionStatement","src":"8113:15:9"}]},"name":"panic_error_0x11","nativeSrc":"7954:180:9","nodeType":"YulFunctionDefinition","src":"7954:180:9"},{"body":{"nativeSrc":"8184:147:9","nodeType":"YulBlock","src":"8184:147:9","statements":[{"nativeSrc":"8194:25:9","nodeType":"YulAssignment","src":"8194:25:9","value":{"arguments":[{"name":"x","nativeSrc":"8217:1:9","nodeType":"YulIdentifier","src":"8217:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8199:17:9","nodeType":"YulIdentifier","src":"8199:17:9"},"nativeSrc":"8199:20:9","nodeType":"YulFunctionCall","src":"8199:20:9"},"variableNames":[{"name":"x","nativeSrc":"8194:1:9","nodeType":"YulIdentifier","src":"8194:1:9"}]},{"nativeSrc":"8228:25:9","nodeType":"YulAssignment","src":"8228:25:9","value":{"arguments":[{"name":"y","nativeSrc":"8251:1:9","nodeType":"YulIdentifier","src":"8251:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8233:17:9","nodeType":"YulIdentifier","src":"8233:17:9"},"nativeSrc":"8233:20:9","nodeType":"YulFunctionCall","src":"8233:20:9"},"variableNames":[{"name":"y","nativeSrc":"8228:1:9","nodeType":"YulIdentifier","src":"8228:1:9"}]},{"nativeSrc":"8262:16:9","nodeType":"YulAssignment","src":"8262:16:9","value":{"arguments":[{"name":"x","nativeSrc":"8273:1:9","nodeType":"YulIdentifier","src":"8273:1:9"},{"name":"y","nativeSrc":"8276:1:9","nodeType":"YulIdentifier","src":"8276:1:9"}],"functionName":{"name":"add","nativeSrc":"8269:3:9","nodeType":"YulIdentifier","src":"8269:3:9"},"nativeSrc":"8269:9:9","nodeType":"YulFunctionCall","src":"8269:9:9"},"variableNames":[{"name":"sum","nativeSrc":"8262:3:9","nodeType":"YulIdentifier","src":"8262:3:9"}]},{"body":{"nativeSrc":"8302:22:9","nodeType":"YulBlock","src":"8302:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8304:16:9","nodeType":"YulIdentifier","src":"8304:16:9"},"nativeSrc":"8304:18:9","nodeType":"YulFunctionCall","src":"8304:18:9"},"nativeSrc":"8304:18:9","nodeType":"YulExpressionStatement","src":"8304:18:9"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8294:1:9","nodeType":"YulIdentifier","src":"8294:1:9"},{"name":"sum","nativeSrc":"8297:3:9","nodeType":"YulIdentifier","src":"8297:3:9"}],"functionName":{"name":"gt","nativeSrc":"8291:2:9","nodeType":"YulIdentifier","src":"8291:2:9"},"nativeSrc":"8291:10:9","nodeType":"YulFunctionCall","src":"8291:10:9"},"nativeSrc":"8288:36:9","nodeType":"YulIf","src":"8288:36:9"}]},"name":"checked_add_t_uint256","nativeSrc":"8140:191:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8171:1:9","nodeType":"YulTypedName","src":"8171:1:9","type":""},{"name":"y","nativeSrc":"8174:1:9","nodeType":"YulTypedName","src":"8174:1:9","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"8180:3:9","nodeType":"YulTypedName","src":"8180:3:9","type":""}],"src":"8140:191:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2ED PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FA DUP2 DUP6 DUP6 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31A PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x327 DUP6 DUP3 DUP6 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x332 DUP6 DUP6 DUP6 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x404 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 PUSH2 0x30F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0xE8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x514 PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x521 DUP2 DUP6 DUP6 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x756 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D9 DUP5 DUP5 PUSH2 0x52C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x65C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x64C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x643 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x756 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x746 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x751 DUP4 DUP4 DUP4 PUSH2 0x92D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x927 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x91E SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x973 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA0B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB4 DUP3 PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xBBE DUP2 DUP6 PUSH2 0xB5D JUMP JUMPDEST SWAP4 POP PUSH2 0xBCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB6E JUMP JUMPDEST PUSH2 0xBD7 DUP2 PUSH2 0xB98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBFC DUP2 DUP5 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC34 DUP3 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC44 DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP2 EQ PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC61 DUP2 PUSH2 0xC3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0xC67 JUMP JUMPDEST DUP2 EQ PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC97 DUP2 PUSH2 0xC71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCD3 DUP6 DUP3 DUP7 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF2 DUP2 PUSH2 0xCDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1C DUP2 PUSH2 0xC67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD64 DUP7 DUP3 DUP8 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD75 DUP7 DUP3 DUP8 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD86 DUP7 DUP3 DUP8 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 DUP2 PUSH2 0xD90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDD JUMPI PUSH2 0xDDC PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDEB DUP5 DUP3 DUP6 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE35 JUMPI PUSH2 0xE34 PUSH2 0xC04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE43 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE54 DUP6 DUP3 DUP7 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xE5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206D696E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF4 PUSH1 0x13 DUP4 PUSH2 0xB5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEFF DUP3 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF23 DUP2 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF3F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xF4C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xF59 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9B DUP3 PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA6 DUP4 PUSH2 0xC67 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xF61 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xD7 0xCB 0x24 CALLVALUE 0xC4 DUP6 PUSH21 0x613BE26BEAD682DCC7CBDC71916E734550DB03758C DUP12 LOG2 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"129:456:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;395:185:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;164:20:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;395:185:8:-;472:5;;;;;;;;;;;458:19;;:10;:19;;;454:79;;493:29;;;;;;;;;;:::i;:::-;;;;;;;;454:79;542:31;555:5;;;;;;;;;;;562:2;566:6;542:12;:31::i;:::-;;395:185;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;164:20:8:-;;;;;;;;;;;;;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:474::-;5610:6;5618;5667:2;5655:9;5646:7;5642:23;5638:32;5635:119;;;5673:79;;:::i;:::-;5635:119;5793:1;5818:53;5863:7;5854:6;5843:9;5839:22;5818:53;:::i;:::-;5808:63;;5764:117;5920:2;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5891:118;5542:474;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:320;6252:6;6289:1;6283:4;6279:12;6269:22;;6336:1;6330:4;6326:12;6357:18;6347:81;;6413:4;6405:6;6401:17;6391:27;;6347:81;6475:2;6467:6;6464:14;6444:18;6441:38;6438:84;;6494:18;;:::i;:::-;6438:84;6259:269;6208:320;;;:::o;6534:169::-;6674:21;6670:1;6662:6;6658:14;6651:45;6534:169;:::o;6709:366::-;6851:3;6872:67;6936:2;6931:3;6872:67;:::i;:::-;6865:74;;6948:93;7037:3;6948:93;:::i;:::-;7066:2;7061:3;7057:12;7050:19;;6709:366;;;:::o;7081:419::-;7247:4;7285:2;7274:9;7270:18;7262:26;;7334:9;7328:4;7324:20;7320:1;7309:9;7305:17;7298:47;7362:131;7488:4;7362:131;:::i;:::-;7354:139;;7081:419;;;:::o;7506:442::-;7655:4;7693:2;7682:9;7678:18;7670:26;;7706:71;7774:1;7763:9;7759:17;7750:6;7706:71;:::i;:::-;7787:72;7855:2;7844:9;7840:18;7831:6;7787:72;:::i;:::-;7869;7937:2;7926:9;7922:18;7913:6;7869:72;:::i;:::-;7506:442;;;;;;:::o;7954:180::-;8002:77;7999:1;7992:88;8099:4;8096:1;8089:15;8123:4;8120:1;8113:15;8140:191;8180:3;8199:20;8217:1;8199:20;:::i;:::-;8194:25;;8233:20;8251:1;8233:20;:::i;:::-;8228:25;;8276:1;8273;8269:9;8262:16;;8297:3;8294:1;8291:10;8288:36;;;8304:18;;:::i;:::-;8288:36;8140:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomERC20.sol\":\"ERC20Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CustomERC20.sol\":{\"keccak256\":\"0x0f8ea2edc7dc8ba847c302a228a75c421670f07e70c95b07451a31b8336f8a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d31fe653beddb60ad600db73eed7f656ff5537f14a09f742c1a26e6383cf307\",\"dweb:/ipfs/Qma8P3HrAxaQR9wMk5fLaFGQwUWEt3RSrR2JfrkAEwFARt\"]}},\"version\":1}"}}}}}