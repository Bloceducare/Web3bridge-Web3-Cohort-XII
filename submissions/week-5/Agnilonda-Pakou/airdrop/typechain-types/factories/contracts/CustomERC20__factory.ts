/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CustomERC20,
  CustomERC20Interface,
} from "../../contracts/CustomERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060400160405280600a81526020017f50616b6f75546f6b656e000000000000000000000000000000000000000000008152506000908161004891906103f8565b506040518060400160405280600381526020017f50414b00000000000000000000000000000000000000000000000000000000008152506001908161008d91906103f8565b506012600260006101000a81548160ff021916908360ff1602179055503480156100b657600080fd5b506040516119c03803806119c083398181016040528101906100d89190610675565b83600090816100e791906103f8565b5082600190816100f791906103f8565b5081600260006101000a81548160ff021916908360ff1602179055508060038190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050610714565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061022957607f821691505b60208210810361023c5761023b6101e2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610267565b6102ae8683610267565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006102f56102f06102eb846102c6565b6102d0565b6102c6565b9050919050565b6000819050919050565b61030f836102da565b61032361031b826102fc565b848454610274565b825550505050565b600090565b61033861032b565b610343818484610306565b505050565b5b818110156103675761035c600082610330565b600181019050610349565b5050565b601f8211156103ac5761037d81610242565b61038684610257565b81016020851015610395578190505b6103a96103a185610257565b830182610348565b50505b505050565b600082821c905092915050565b60006103cf600019846008026103b1565b1980831691505092915050565b60006103e883836103be565b9150826002028217905092915050565b610401826101a8565b67ffffffffffffffff81111561041a576104196101b3565b5b6104248254610211565b61042f82828561036b565b600060209050601f8311600181146104625760008415610450578287015190505b61045a85826103dc565b8655506104c2565b601f19841661047086610242565b60005b8281101561049857848901518255600182019150602085019450602081019050610473565b868310156104b557848901516104b1601f8916826103be565b8355505b6001600288020188555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610502826104e8565b810181811067ffffffffffffffff82111715610521576105206101b3565b5b80604052505050565b60006105346104ca565b905061054082826104f9565b919050565b600067ffffffffffffffff8211156105605761055f6101b3565b5b610569826104e8565b9050602081019050919050565b60005b83811015610594578082015181840152602081019050610579565b60008484015250505050565b60006105b36105ae84610545565b61052a565b9050828152602081018484840111156105cf576105ce6104e3565b5b6105da848285610576565b509392505050565b600082601f8301126105f7576105f66104de565b5b81516106078482602086016105a0565b91505092915050565b600060ff82169050919050565b61062681610610565b811461063157600080fd5b50565b6000815190506106438161061d565b92915050565b610652816102c6565b811461065d57600080fd5b50565b60008151905061066f81610649565b92915050565b6000806000806080858703121561068f5761068e6104d4565b5b600085015167ffffffffffffffff8111156106ad576106ac6104d9565b5b6106b9878288016105e2565b945050602085015167ffffffffffffffff8111156106da576106d96104d9565b5b6106e6878288016105e2565b93505060406106f787828801610634565b925050606061070887828801610660565b91505092959194509250565b61129d806107236000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461018f57806370a08231146101ab5780638da5cb5b146101db57806395d89b41146101f9578063a9059cbb14610217578063dd62ed3e14610247576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c1610277565b6040516100ce9190610d17565b60405180910390f35b6100f160048036038101906100ec9190610dd2565b610305565b6040516100fe9190610e2d565b60405180910390f35b61010f610419565b60405161011c9190610e57565b60405180910390f35b61013f600480360381019061013a9190610e72565b61041f565b60405161014c9190610e2d565b60405180910390f35b61015d61060a565b60405161016a9190610ee1565b60405180910390f35b61018d60048036038101906101889190610dd2565b61061d565b005b6101a960048036038101906101a49190610efc565b6106bb565b005b6101c560048036038101906101c09190610f29565b610863565b6040516101d29190610e57565b60405180910390f35b6101e361087b565b6040516101f09190610f65565b60405180910390f35b6102016108a1565b60405161020e9190610d17565b60405180910390f35b610231600480360381019061022c9190610dd2565b61092f565b60405161023e9190610e2d565b60405180910390f35b610261600480360381019061025c9190610f80565b610a37565b60405161026e9190610e57565b60405180910390f35b6000805461028490610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090610fef565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104079190610e57565b60405180910390a36001905092915050565b60035481565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a9061106c565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610561576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610558906110d8565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105ed9190611127565b925050819055506105ff848484610a5c565b600190509392505050565b600260009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a4906111a7565b60405180910390fd5b6106b78282610b72565b5050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561073d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107349061106c565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078c9190611127565b9250508190555080600360008282546107a59190611127565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516107f29190610e57565b60405180910390a2600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108589190610e57565b60405180910390a350565b60046020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180546108ae90610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546108da90610fef565b80156109275780601f106108fc57610100808354040283529160200191610927565b820191906000526020600020905b81548152906001019060200180831161090a57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109aa9061106c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1990611213565b60405180910390fd5b610a2d338484610a5c565b6001905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aab9190611127565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b019190611233565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b659190610e57565b60405180910390a3505050565b8060036000828254019250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051610c159190610e57565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c7b9190610e57565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cc1578082015181840152602081019050610ca6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ce982610c87565b610cf38185610c92565b9350610d03818560208601610ca3565b610d0c81610ccd565b840191505092915050565b60006020820190508181036000830152610d318184610cde565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d6982610d3e565b9050919050565b610d7981610d5e565b8114610d8457600080fd5b50565b600081359050610d9681610d70565b92915050565b6000819050919050565b610daf81610d9c565b8114610dba57600080fd5b50565b600081359050610dcc81610da6565b92915050565b60008060408385031215610de957610de8610d39565b5b6000610df785828601610d87565b9250506020610e0885828601610dbd565b9150509250929050565b60008115159050919050565b610e2781610e12565b82525050565b6000602082019050610e426000830184610e1e565b92915050565b610e5181610d9c565b82525050565b6000602082019050610e6c6000830184610e48565b92915050565b600080600060608486031215610e8b57610e8a610d39565b5b6000610e9986828701610d87565b9350506020610eaa86828701610d87565b9250506040610ebb86828701610dbd565b9150509250925092565b600060ff82169050919050565b610edb81610ec5565b82525050565b6000602082019050610ef66000830184610ed2565b92915050565b600060208284031215610f1257610f11610d39565b5b6000610f2084828501610dbd565b91505092915050565b600060208284031215610f3f57610f3e610d39565b5b6000610f4d84828501610d87565b91505092915050565b610f5f81610d5e565b82525050565b6000602082019050610f7a6000830184610f56565b92915050565b60008060408385031215610f9757610f96610d39565b5b6000610fa585828601610d87565b9250506020610fb685828601610d87565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061100757607f821691505b60208210810361101a57611019610fc0565b5b50919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000611056601483610c92565b915061106182611020565b602082019050919050565b6000602082019050818103600083015261108581611049565b9050919050565b7f496e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b60006110c2601683610c92565b91506110cd8261108c565b602082019050919050565b600060208201905081810360008301526110f1816110b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113282610d9c565b915061113d83610d9c565b9250828203905081811115611155576111546110f8565b5b92915050565b7f4e6f7420636f6e7472616374206f776e65720000000000000000000000000000600082015250565b6000611191601283610c92565b915061119c8261115b565b602082019050919050565b600060208201905081810360008301526111c081611184565b9050919050565b7f496e76616c696420726563697069656e74000000000000000000000000000000600082015250565b60006111fd601183610c92565b9150611208826111c7565b602082019050919050565b6000602082019050818103600083015261122c816111f0565b9050919050565b600061123e82610d9c565b915061124983610d9c565b9250828201905080821115611261576112606110f8565b5b9291505056fea264697066735822122086607f40b65447767b65e4bbce83548b5b8afef17a117c7556e6fc24983a644764736f6c634300081c0033";

type CustomERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomERC20__factory extends ContractFactory {
  constructor(...args: CustomERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    ) as Promise<
      CustomERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CustomERC20__factory {
    return super.connect(runner) as CustomERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomERC20Interface {
    return new Interface(_abi) as CustomERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): CustomERC20 {
    return new Contract(address, _abi, runner) as unknown as CustomERC20;
  }
}
