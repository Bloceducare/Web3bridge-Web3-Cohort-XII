/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EbubeStake,
  EbubeStakeInterface,
} from "../../contracts/EbubeStake";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ebubeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimumStakeInDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_STAKE_TIME_IN_DAYS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ebubeToken",
    outputs: [
      {
        internalType: "contract IEbubeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ebubeTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getStakeStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getStakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112d23803806112d2833981810160405281019061003291906101da565b6001600081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036100a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a09061028a565b60405180910390fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600581905550816004819055505050506102aa565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061017182610146565b9050919050565b61018181610166565b811461018c57600080fd5b50565b60008151905061019e81610178565b92915050565b6000819050919050565b6101b7816101a4565b81146101c257600080fd5b50565b6000815190506101d4816101ae565b92915050565b6000806000606084860312156101f3576101f2610141565b5b60006102018682870161018f565b9350506020610212868287016101c5565b9250506040610223868287016101c5565b9150509250925092565b600082825260208201905092915050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b600061027460158361022d565b915061027f8261023e565b602082019050919050565b600060208201905081810360008301526102a381610267565b9050919050565b611019806102b96000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80635997bb37116100665780635997bb371461015d5780638023b3161461017b578063974baf9f14610199578063a694fc3a146101b7578063d82e3962146101d35761009e565b80630eeea367146100a357806316934fc4146100d357806318d3b6dc146101055780633ccfd60b146101235780634da6a5561461012d575b600080fd5b6100bd60048036038101906100b8919061098e565b610203565b6040516100ca91906109d4565b60405180910390f35b6100ed60048036038101906100e8919061098e565b61024f565b6040516100fc93929190610a0a565b60405180910390f35b61010d610286565b60405161011a91906109d4565b60405180910390f35b61012b61028c565b005b6101476004803603810190610142919061098e565b6104eb565b60405161015491906109d4565b60405180910390f35b610165610537565b60405161017291906109d4565b60405180910390f35b61018361053d565b6040516101909190610aa0565b60405180910390f35b6101a1610563565b6040516101ae9190610aca565b60405180910390f35b6101d160048036038101906101cc9190610b11565b610589565b005b6101ed60048036038101906101e8919061098e565b6107eb565b6040516101fa91906109d4565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60036020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60045481565b6102946108d2565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020160009054906101000a900460ff16610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610b9b565b60405180910390fd5b6018603c8060045461033a9190610bea565b6103449190610bea565b61034e9190610bea565b816001015461035d9190610c2c565b42101561039f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039690610cac565b60405180910390fd5b60006103aa336107eb565b905060008183600001546103be9190610c2c565b905060008360020160006101000a81548160ff02191690831515021790555060008360000181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610444929190610ccc565b6020604051808303816000875af1158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610d21565b503373ffffffffffffffffffffffffffffffffffffffff167f75e161b3e824b114fc1a33274bd7091918dd4e639cede50b78b15a4eea956a21846000015484426040516104d693929190610d4e565b60405180910390a25050506104e9610921565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105916108d2565b600081116105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90610df7565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090610e63565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106b893929190610e83565b6020604051808303816000875af11580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190610d21565b50604051806060016040528082815260200142815260200160011515815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9082426040516107d8929190610eba565b60405180910390a26107e8610921565b50565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020160009054906101000a900460ff1661084f5760009150506108cd565b60008160010154426108619190610ee3565b90506000606460055484600001546108799190610bea565b6108839190610f46565b90506000603c80601861016d868661089b9190610bea565b6108a59190610f46565b6108af9190610bea565b6108b99190610bea565b6108c39190610bea565b9050809450505050505b919050565b600260005403610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90610fc3565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095b82610930565b9050919050565b61096b81610950565b811461097657600080fd5b50565b60008135905061098881610962565b92915050565b6000602082840312156109a4576109a361092b565b5b60006109b284828501610979565b91505092915050565b6000819050919050565b6109ce816109bb565b82525050565b60006020820190506109e960008301846109c5565b92915050565b60008115159050919050565b610a04816109ef565b82525050565b6000606082019050610a1f60008301866109c5565b610a2c60208301856109c5565b610a3960408301846109fb565b949350505050565b6000819050919050565b6000610a66610a61610a5c84610930565b610a41565b610930565b9050919050565b6000610a7882610a4b565b9050919050565b6000610a8a82610a6d565b9050919050565b610a9a81610a7f565b82525050565b6000602082019050610ab56000830184610a91565b92915050565b610ac481610950565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b610aee816109bb565b8114610af957600080fd5b50565b600081359050610b0b81610ae5565b92915050565b600060208284031215610b2757610b2661092b565b5b6000610b3584828501610afc565b91505092915050565b600082825260208201905092915050565b7f4e6f20616374697665207374616b650000000000000000000000000000000000600082015250565b6000610b85600f83610b3e565b9150610b9082610b4f565b602082019050919050565b60006020820190508181036000830152610bb481610b78565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bf5826109bb565b9150610c00836109bb565b9250828202610c0e816109bb565b91508282048414831517610c2557610c24610bbb565b5b5092915050565b6000610c37826109bb565b9150610c42836109bb565b9250828201905080821115610c5a57610c59610bbb565b5b92915050565b7f5374616b696e6720706572696f64206e6f74206d657400000000000000000000600082015250565b6000610c96601683610b3e565b9150610ca182610c60565b602082019050919050565b60006020820190508181036000830152610cc581610c89565b9050919050565b6000604082019050610ce16000830185610abb565b610cee60208301846109c5565b9392505050565b610cfe816109ef565b8114610d0957600080fd5b50565b600081519050610d1b81610cf5565b92915050565b600060208284031215610d3757610d3661092b565b5b6000610d4584828501610d0c565b91505092915050565b6000606082019050610d6360008301866109c5565b610d7060208301856109c5565b610d7d60408301846109c5565b949350505050565b7f5374616b6520616d6f756e74206d75737420626520677265617465722074686160008201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b6000610de1602683610b3e565b9150610dec82610d85565b604082019050919050565b60006020820190508181036000830152610e1081610dd4565b9050919050565b7f416c7265616479207374616b6564000000000000000000000000000000000000600082015250565b6000610e4d600e83610b3e565b9150610e5882610e17565b602082019050919050565b60006020820190508181036000830152610e7c81610e40565b9050919050565b6000606082019050610e986000830186610abb565b610ea56020830185610abb565b610eb260408301846109c5565b949350505050565b6000604082019050610ecf60008301856109c5565b610edc60208301846109c5565b9392505050565b6000610eee826109bb565b9150610ef9836109bb565b9250828203905081811115610f1157610f10610bbb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f51826109bb565b9150610f5c836109bb565b925082610f6c57610f6b610f17565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610fad601f83610b3e565b9150610fb882610f77565b602082019050919050565b60006020820190508181036000830152610fdc81610fa0565b905091905056fea2646970667358221220a9176f7d467302d489f641b3de3749fd9960d9917fd654574afa81a9672a0f6e64736f6c634300081c0033";

type EbubeStakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EbubeStakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EbubeStake__factory extends ContractFactory {
  constructor(...args: EbubeStakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ebubeToken: AddressLike,
    _minimumStakeInDays: BigNumberish,
    _rewardRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _ebubeToken,
      _minimumStakeInDays,
      _rewardRate,
      overrides || {}
    );
  }
  override deploy(
    _ebubeToken: AddressLike,
    _minimumStakeInDays: BigNumberish,
    _rewardRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _ebubeToken,
      _minimumStakeInDays,
      _rewardRate,
      overrides || {}
    ) as Promise<
      EbubeStake & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EbubeStake__factory {
    return super.connect(runner) as EbubeStake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EbubeStakeInterface {
    return new Interface(_abi) as EbubeStakeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EbubeStake {
    return new Contract(address, _abi, runner) as unknown as EbubeStake;
  }
}
