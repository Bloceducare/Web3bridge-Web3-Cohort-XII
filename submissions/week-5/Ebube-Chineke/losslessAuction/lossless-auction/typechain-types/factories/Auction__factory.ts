/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Auction, AuctionInterface } from "../Auction";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_item",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startingPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AuctionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewBid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Refund",
    type: "event",
  },
  {
    inputs: [],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "item",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516113a03803806113a0833981810160405281019061003291906102aa565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600190816100819190610544565b508260038190555080600281905550600060058190555050505050610616565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610108826100bf565b810181811067ffffffffffffffff82111715610127576101266100d0565b5b80604052505050565b600061013a6100a1565b905061014682826100ff565b919050565b600067ffffffffffffffff821115610166576101656100d0565b5b61016f826100bf565b9050602081019050919050565b60005b8381101561019a57808201518184015260208101905061017f565b60008484015250505050565b60006101b96101b48461014b565b610130565b9050828152602081018484840111156101d5576101d46100ba565b5b6101e084828561017c565b509392505050565b600082601f8301126101fd576101fc6100b5565b5b815161020d8482602086016101a6565b91505092915050565b6000819050919050565b61022981610216565b811461023457600080fd5b50565b60008151905061024681610220565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102778261024c565b9050919050565b6102878161026c565b811461029257600080fd5b50565b6000815190506102a48161027e565b92915050565b600080600080608085870312156102c4576102c36100ab565b5b600085015167ffffffffffffffff8111156102e2576102e16100b0565b5b6102ee878288016101e8565b94505060206102ff87828801610237565b935050604061031087828801610295565b925050606061032187828801610237565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061037f57607f821691505b60208210810361039257610391610338565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026103fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103bd565b61040486836103bd565b95508019841693508086168417925050509392505050565b6000819050919050565b600061044161043c61043784610216565b61041c565b610216565b9050919050565b6000819050919050565b61045b83610426565b61046f61046782610448565b8484546103ca565b825550505050565b600090565b610484610477565b61048f818484610452565b505050565b5b818110156104b3576104a860008261047c565b600181019050610495565b5050565b601f8211156104f8576104c981610398565b6104d2846103ad565b810160208510156104e1578190505b6104f56104ed856103ad565b830182610494565b50505b505050565b600082821c905092915050565b600061051b600019846008026104fd565b1980831691505092915050565b6000610534838361050a565b9150826002028217905092915050565b61054d8261032d565b67ffffffffffffffff811115610566576105656100d0565b5b6105708254610367565b61057b8282856104b7565b600060209050601f8311600181146105ae576000841561059c578287015190505b6105a68582610528565b86555061060e565b601f1984166105bc86610398565b60005b828110156105e4578489015182556001820191506020850194506020810190506105bf565b8683101561060157848901516105fd601f89168261050a565b8355505b6001600288020188555050505b505050505050565b610d7b806106256000396000f3fe6080604052600436106100865760003560e01c806391f901571161005957806391f9015714610123578063c5b636001461014e578063d57bde7914610179578063ecfc7ecc146101a4578063f2a4a82e146101ae57610086565b806308551a531461008b5780633197cbb6146100b65780633ccfd60b146100e15780638b7afe2e146100f8575b600080fd5b34801561009757600080fd5b506100a06101d9565b6040516100ad919061083c565b60405180910390f35b3480156100c257600080fd5b506100cb6101fd565b6040516100d89190610870565b60405180910390f35b3480156100ed57600080fd5b506100f6610203565b005b34801561010457600080fd5b5061010d6103ef565b60405161011a9190610870565b60405180910390f35b34801561012f57600080fd5b506101386103f5565b604051610145919061083c565b60405180910390f35b34801561015a57600080fd5b5061016361041b565b6040516101709190610870565b60405180910390f35b34801561018557600080fd5b5061018e61045d565b60405161019b9190610870565b60405180910390f35b6101ac610463565b005b3480156101ba57600080fd5b506101c361076d565b6040516101d0919061091b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028890610989565b60405180910390fd5b6002544210156102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd906109f5565b60405180910390fd5b60006005541161031b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031290610a61565b60405180910390fd5b60006005549050600060058190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610390573d6000803e3d6000fd5b507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040516103e4929190610a81565b60405180910390a150565b60055481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600a60035461042d9190610b08565b60055460035461043d9190610b39565b60055461044a9190610b6d565b6104549190610b6d565b90508091505090565b60035481565b60025442106104a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049e90610bed565b60405180910390fd5b600034116104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190610c59565b60405180910390fd5b60006104f461041b565b905080341015610539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053090610cc5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610695576000600a600354346105a19190610b39565b6105ab9190610b08565b6003546105b89190610b6d565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610622573d6000803e3d6000fd5b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d8260405161068b9190610870565b60405180910390a2505b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600381905550600a6003546106ec9190610b08565b600354346106fa9190610b39565b6107049190610b6d565b600560008282546107159190610b6d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fdd0b6c6a77960e2066c96171b4d7ac9e8b4c184011f38544afa36a5bb63ec59f346040516107629190610870565b60405180910390a250565b6001805461077a90610d14565b80601f01602080910402602001604051908101604052809291908181526020018280546107a690610d14565b80156107f35780601f106107c8576101008083540402835291602001916107f3565b820191906000526020600020905b8154815290600101906020018083116107d657829003601f168201915b505050505081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610826826107fb565b9050919050565b6108368161081b565b82525050565b6000602082019050610851600083018461082d565b92915050565b6000819050919050565b61086a81610857565b82525050565b60006020820190506108856000830184610861565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108c55780820151818401526020810190506108aa565b60008484015250505050565b6000601f19601f8301169050919050565b60006108ed8261088b565b6108f78185610896565b93506109078185602086016108a7565b610910816108d1565b840191505092915050565b6000602082019050818103600083015261093581846108e2565b905092915050565b7f4f6e6c792073656c6c65722063616e2063616c6c207468697300000000000000600082015250565b6000610973601983610896565b915061097e8261093d565b602082019050919050565b600060208201905081810360008301526109a281610966565b9050919050565b7f41756374696f6e206e6f742079657420656e6465640000000000000000000000600082015250565b60006109df601583610896565b91506109ea826109a9565b602082019050919050565b60006020820190508181036000830152610a0e816109d2565b9050919050565b7f4e6f7468696e6720746f20776974686472617700000000000000000000000000600082015250565b6000610a4b601383610896565b9150610a5682610a15565b602082019050919050565b60006020820190508181036000830152610a7a81610a3e565b9050919050565b6000604082019050610a96600083018561082d565b610aa36020830184610861565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b1382610857565b9150610b1e83610857565b925082610b2e57610b2d610aaa565b5b828204905092915050565b6000610b4482610857565b9150610b4f83610857565b9250828203905081811115610b6757610b66610ad9565b5b92915050565b6000610b7882610857565b9150610b8383610857565b9250828201905080821115610b9b57610b9a610ad9565b5b92915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000610bd7601183610896565b9150610be282610ba1565b602082019050919050565b60006020820190508181036000830152610c0681610bca565b9050919050565b7f426964206d7573742062652067726561746572207468616e207a65726f000000600082015250565b6000610c43601d83610896565b9150610c4e82610c0d565b602082019050919050565b60006020820190508181036000830152610c7281610c36565b9050919050565b7f42696420746f6f206c6f77000000000000000000000000000000000000000000600082015250565b6000610caf600b83610896565b9150610cba82610c79565b602082019050919050565b60006020820190508181036000830152610cde81610ca2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d2c57607f821691505b602082108103610d3f57610d3e610ce5565b5b5091905056fea26469706673582212208c109dfdd8448df7891bf8f3a1668c905502ff32b651bc20158b435781b2bc7564736f6c634300081c0033";

type AuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Auction__factory extends ContractFactory {
  constructor(...args: AuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _item: string,
    _startingPrice: BigNumberish,
    _seller: AddressLike,
    _endTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _item,
      _startingPrice,
      _seller,
      _endTime,
      overrides || {}
    );
  }
  override deploy(
    _item: string,
    _startingPrice: BigNumberish,
    _seller: AddressLike,
    _endTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _item,
      _startingPrice,
      _seller,
      _endTime,
      overrides || {}
    ) as Promise<
      Auction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Auction__factory {
    return super.connect(runner) as Auction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionInterface {
    return new Interface(_abi) as AuctionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Auction {
    return new Contract(address, _abi, runner) as unknown as Auction;
  }
}
