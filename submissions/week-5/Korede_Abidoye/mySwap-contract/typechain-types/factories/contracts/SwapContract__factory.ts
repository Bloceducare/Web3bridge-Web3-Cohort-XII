/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SwapContract,
  SwapContractInterface,
} from "../../contracts/SwapContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenX",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountXIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountYOut",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountY",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountX",
        type: "uint256",
      },
    ],
    name: "getAmountYForX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountXIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenX",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenY",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060405161068a38038061068a833981016040819052602c916077565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905560a5565b80516001600160a01b0381168114607257600080fd5b919050565b60008060408385031215608957600080fd5b609083605c565b9150609c60208401605c565b90509250929050565b6105d6806100b46000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639cd441da1161005b5780639cd441da146100de578063b7d19fc4146100f1578063fadfa65b14610104578063ff17b9231461010d57600080fd5b806308eabdda1461008257806316dc165b1461009e57806394b918de146100c9575b600080fd5b61008b60025481565b6040519081526020015b60405180910390f35b6000546100b1906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b6100dc6100d73660046104c1565b610120565b005b6100dc6100ec3660046104da565b6102e9565b6001546100b1906001600160a01b031681565b61008b60035481565b61008b61011b3660046104c1565b610475565b600061012b82610475565b600080546040516323b872dd60e01b81523360048201523060248201526044810186905292935090916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac91906104fc565b60015460405163a9059cbb60e01b8152336004820152602481018590529192506000916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610203573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022791906104fc565b90508180156102335750805b156102a857836002600082825461024a919061053b565b9250508190555082600360008282546102639190610554565b9091555050604080518581526020810185905233917f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758910160405180910390a26102e3565b60405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0819985a5b195960aa1b60448201526064015b60405180910390fd5b50505050565b600080546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036591906104fc565b6001546040516323b872dd60e01b8152336004820152306024820152604481018590529192506000916001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e691906104fc565b90508180156103f25750805b1561042d578360026000828254610409919061053b565b925050819055508260036000828254610422919061053b565b909155506102e39050565b60405162461bcd60e51b815260206004820152601960248201527f4c6971756964697479206164646974696f6e206661696c65640000000000000060448201526064016102da565b6000806003546002546104889190610567565b905060008360025461049a919061053b565b905060006104a8828461057e565b9050806003546104b89190610554565b95945050505050565b6000602082840312156104d357600080fd5b5035919050565b600080604083850312156104ed57600080fd5b50508035926020909101359150565b60006020828403121561050e57600080fd5b8151801515811461051e57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561054e5761054e610525565b92915050565b8181038181111561054e5761054e610525565b808202811582820484141761054e5761054e610525565b60008261059b57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200ded2e760578a219cbe3221986ce370bbe5a6dc11345e1019145e4e7631d6e9e64736f6c634300081c0033";

type SwapContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapContract__factory extends ContractFactory {
  constructor(...args: SwapContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenX: AddressLike,
    _tokenY: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenX, _tokenY, overrides || {});
  }
  override deploy(
    _tokenX: AddressLike,
    _tokenY: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenX, _tokenY, overrides || {}) as Promise<
      SwapContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapContract__factory {
    return super.connect(runner) as SwapContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapContractInterface {
    return new Interface(_abi) as SwapContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapContract {
    return new Contract(address, _abi, runner) as unknown as SwapContract;
  }
}
