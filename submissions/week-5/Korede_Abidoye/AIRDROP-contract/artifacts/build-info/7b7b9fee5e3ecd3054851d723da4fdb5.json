{"id":"7b7b9fee5e3ecd3054851d723da4fdb5","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Sorts the pair (a, b) and hashes the result.\n     */\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/AirdropMerkle.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract AirdropMerkle is Ownable {\r\n    IERC20 public immutable token;\r\n    bytes32 public merkleRoot;\r\n    \r\n    // Mapping to track which addresses have claimed their tokens\r\n    mapping(address => bool) public hasClaimed;\r\n    \r\n    // Amount of tokens each address can claim\r\n    mapping(address => uint256) public claimableAmounts;\r\n    \r\n    // Total amount of tokens allocated for the airdrop\r\n    uint256 public totalAirdropAmount;\r\n    \r\n    event TokensClaimed(address indexed claimer, uint256 amount);\r\n    \r\n    constructor(address _token, bytes32 _merkleRoot, address[] memory addresses, uint256[] memory amounts) \r\n        Ownable(msg.sender) \r\n    {\r\n        token = IERC20(_token);\r\n        require(_merkleRoot != bytes32(0), \"Invalid merkle root\");\r\n        require(addresses.length == amounts.length, \"Mismatched arrays\");\r\n        \r\n        merkleRoot = _merkleRoot;\r\n        uint256 total = 0;\r\n        \r\n        for(uint256 i = 0; i < addresses.length; i++) {\r\n            claimableAmounts[addresses[i]] = amounts[i];\r\n            total += amounts[i];\r\n        }\r\n        \r\n        totalAirdropAmount = total;\r\n    }\r\n    \r\n    // Function to check if an address is whitelisted\r\n    function isWhitelisted(\r\n        address account,\r\n        uint256 amount,\r\n        bytes32[] calldata merkleProof\r\n    ) public view returns (bool) {\r\n        // Create leaf node by hashing the account and amount\r\n        bytes32 leaf = keccak256(\r\n            bytes.concat(keccak256(abi.encode(account, amount)))\r\n        );\r\n        \r\n        // Verify the Merkle proof\r\n        return MerkleProof.verify(merkleProof, merkleRoot, leaf);\r\n    }\r\n    \r\n    // Function to claim tokens\r\n    function claim(\r\n        address account,\r\n        uint256 amount,\r\n        bytes32[] calldata merkleProof\r\n    ) external {\r\n        require(merkleRoot != bytes32(0), \"Airdrop not initialized\");\r\n        require(!hasClaimed[account], \"Already claimed\");\r\n        require(amount == claimableAmounts[account], \"Invalid claim amount\");\r\n        \r\n        // Verify the Merkle proof\r\n        require(\r\n            isWhitelisted(account, amount, merkleProof),\r\n            \"Invalid proof: Not whitelisted\"\r\n        );\r\n        \r\n        // Mark as claimed\r\n        hasClaimed[account] = true;\r\n        \r\n        // Transfer tokens\r\n        require(\r\n            token.transfer(account, amount),\r\n            \"Token transfer failed\"\r\n        );\r\n        \r\n        emit TokensClaimed(account, amount);\r\n    }\r\n}"},"contracts/AirdropToken.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract AirdropToken is ERC20, ERC20Burnable, Ownable {\n    uint256 public constant MAX_SUPPLY = 1_000_000_000 * 10**18; // 1 Billion tokens with 18 decimals\n    \n    constructor() \n        ERC20(\"Koded Token\", \"KTK\")\n        Ownable(msg.sender)\n    {\n        // Mint initial supply to owner\n        _mint(msg.sender, MAX_SUPPLY);\n    }\n    \n    // Function to allow owner to mint new tokens (if needed)\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\");\n        _mint(to, amount);\n    }\n    \n    // Function to recover tokens accidentally sent to contract\n    function recoverTokens(address tokenAddress, uint256 amount) external onlyOwner {\n        IERC20(tokenAddress).transfer(owner(), amount);\n    }\n    \n    // Function to recover ETH accidentally sent to contract\n    function recoverETH() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[979],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":980,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,979],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[979],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[949]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":950,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":980,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1428:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1428:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1428:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1437:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1437:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1437:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1445:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":949,"src":"1445:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1445:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1461:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1461:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1461:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:1052:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,949,877,979],"name":"ERC20","nameLocation":"1419:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1480:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1496:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1540:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1556:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1583:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1630:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1680:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1665:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1691:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1952:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1962:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1970:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1962:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1985:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1995:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1985:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1720:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1922:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1908:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1929:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1952:0:2"},"scope":799,"src":"1896:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[936],"body":{"id":344,"nodeType":"Block","src":"2134:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2151:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"2144:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"2015:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"2087:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"2119:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:2"},"scope":799,"src":"2074:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[942],"body":{"id":353,"nodeType":"Block","src":"2338:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2355:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2348:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"2169:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2291:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2323:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:2"},"scope":799,"src":"2276:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[948],"body":{"id":362,"nodeType":"Block","src":"3058:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"3068:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2375:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"3019:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"3051:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:2"},"scope":799,"src":"3002:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"3205:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3222:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"3215:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3090:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"3164:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"3196:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:2"},"scope":799,"src":"3144:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3373:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3390:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3400:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3383:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"3247:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3326:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3318:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3364:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:2"},"scope":799,"src":"3299:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3685:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3703:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3695:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"3711:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3743:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3750:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3754:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3733:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3733:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3770:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3421:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3636:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3628:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3648:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3679:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:2"},"scope":799,"src":"3610:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3935:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3952:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3964:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3971:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3945:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3794:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3873:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3865:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3888:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3880:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:2"},"scope":799,"src":"3846:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4372:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4390:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4382:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"4398:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4436:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4445:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4420:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4420:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4461:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3992:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4318:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4310:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4335:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4327:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4366:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:2"},"scope":799,"src":"4293:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"5132:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"5150:7:2","nodeType":"VariableDeclaration","scope":481,"src":"5142:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"5160:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5204:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5213:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5182:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"5182:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5239:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5245:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5229:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"5229:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5265:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4485:549:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"5069:4:2","nodeType":"VariableDeclaration","scope":482,"src":"5061:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"5083:2:2","nodeType":"VariableDeclaration","scope":482,"src":"5075:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"5095:5:2","nodeType":"VariableDeclaration","scope":482,"src":"5087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"5126:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:2"},"scope":799,"src":"5039:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5725:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5739:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5735:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5759:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5780:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":504,"nodeType":"RevertStatement","src":"5773:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5834:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5830:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5852:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5873:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":519,"nodeType":"RevertStatement","src":"5866:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5933:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5939:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5925:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5925:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5289:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5683:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5675:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5697:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5689:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5709:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5725:0:2"},"scope":799,"src":"5656:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6346:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6534:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6548:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6570:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6580:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6603:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6617:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6599:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6624:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6680:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6693:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6649:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":564,"nodeType":"RevertStatement","src":"6642:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6727:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6844:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6852:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6866:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6834:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6356:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6380:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6496:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6512:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6496:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6910:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"7125:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"7139:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7284:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7301:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7284:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6906:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6928:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6942:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7073:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"7073:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7355:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7361:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7365:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7346:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7341:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5962:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6296:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6288:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6310:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6302:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6322:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6314:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6346:0:2"},"scope":799,"src":"6271:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7777:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7791:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7787:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7814:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7835:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":626,"nodeType":"RevertStatement","src":"7828:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7907:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7916:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7887:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7887:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7384:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7744:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7736:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7761:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7753:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7777:0:2"},"scope":799,"src":"7721:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8303:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8317:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8313:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8340:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8361:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":659,"nodeType":"RevertStatement","src":"8354:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8419:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8411:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8411:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7935:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8270:7:2","nodeType":"VariableDeclaration","scope":672,"src":"8262:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8287:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8279:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8303:0:2"},"scope":799,"src":"8247:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"9063:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9082:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9089:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"9098:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"9073:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9073:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8459:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"9015:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9007:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"9030:7:2","nodeType":"VariableDeclaration","scope":690,"src":"9022:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"9047:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9039:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"9063:0:2"},"scope":799,"src":"8989:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"10047:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"10057:89:2","trueBody":{"id":715,"nodeType":"Block","src":"10082:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"10103:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":714,"nodeType":"RevertStatement","src":"10096:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"10155:90:2","trueBody":{"id":730,"nodeType":"Block","src":"10182:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10203:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":729,"nodeType":"RevertStatement","src":"10196:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10254:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10284:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10254:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10303:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10299:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10314:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10342:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10349:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10358:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10333:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10328:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"9123:821:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9975:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"10007:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9999:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:2","nodeType":"VariableDeclaration","scope":750,"src":"10014:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"10047:0:2"},"scope":799,"src":"9949:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10752:388:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10762:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10799:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10806:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10789:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:2","memberName":"max","nodeType":"MemberAccess","src":"10848:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10824:310:2","trueBody":{"id":795,"nodeType":"Block","src":"10867:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10885:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10904:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10881:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10911:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10963:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10972:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10990:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10936:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":782,"nodeType":"RevertStatement","src":"10929:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"11024:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"11061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"11068:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11096:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"11052:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"11052:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10387:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10696:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10688:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10711:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10728:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10720:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10752:0:2"},"scope":799,"src":"10663:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1401:9741:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:11038:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"213:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"226:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"395:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:3","nodeType":"VariableDeclaration","scope":811,"src":"404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:3","nodeType":"VariableDeclaration","scope":811,"src":"426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:3","nodeType":"VariableDeclaration","scope":811,"src":"446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:3"},"src":"389:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"467:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"626:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:3","nodeType":"VariableDeclaration","scope":820,"src":"635:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:3","nodeType":"VariableDeclaration","scope":820,"src":"658:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:3","nodeType":"VariableDeclaration","scope":820,"src":"683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:3"},"src":"620:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"704:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":877,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"835:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"938:7:3","nodeType":"VariableDeclaration","scope":834,"src":"930:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:3"},"scope":877,"src":"911:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"985:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1229:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1241:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1266:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:3"},"scope":877,"src":"1203:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1278:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1574:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1566:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1589:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1581:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:3"},"scope":877,"src":"1547:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1636:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2333:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2325:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2350:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2375:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:3"},"scope":877,"src":"2308:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2387:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2719:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2733:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2725:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2745:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2770:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:3"},"scope":877,"src":"2689:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"203:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2673:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[979],"ERC20":[799],"ERC20Burnable":[923]},"id":924,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":924,"sourceUnit":800,"src":"150:35:4","symbolAliases":[{"foreign":{"id":880,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"158:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":883,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":924,"sourceUnit":980,"src":"186:51:4","symbolAliases":[{"foreign":{"id":882,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"194:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":885,"name":"Context","nameLocations":["483:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"483:7:4"},"id":886,"nodeType":"InheritanceSpecifier","src":"483:7:4"},{"baseName":{"id":887,"name":"ERC20","nameLocations":["492:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"492:5:4"},"id":888,"nodeType":"InheritanceSpecifier","src":"492:5:4"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"239:208:4","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":923,"linearizedBaseContracts":[923,799,189,949,877,979],"name":"ERC20Burnable","nameLocation":"466:13:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":900,"nodeType":"Block","src":"662:43:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":895,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"678:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"692:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":894,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"672:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"ExpressionStatement","src":"672:26:4"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"504:109:4","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":901,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"value","nameLocation":"640:5:4","nodeType":"VariableDeclaration","scope":901,"src":"632:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:4"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"662:0:4"},"scope":923,"src":"618:87:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":921,"nodeType":"Block","src":"1086:93:4","statements":[{"expression":{"arguments":[{"id":910,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1112:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":911,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1121:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1135:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":909,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"1096:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"1096:45:4"},{"expression":{"arguments":[{"id":917,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1166:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":916,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"1151:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"ExpressionStatement","src":"1151:21:4"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"711:305:4","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":922,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:4","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"account","nameLocation":"1047:7:4","nodeType":"VariableDeclaration","scope":922,"src":"1039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"value","nameLocation":"1064:5:4","nodeType":"VariableDeclaration","scope":922,"src":"1056:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:4"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"1086:0:4"},"scope":923,"src":"1021:158:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":924,"src":"448:733:4","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"124:1058:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[949]},"id":950,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":925,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":927,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":950,"sourceUnit":878,"src":"151:37:5","symbolAliases":[{"foreign":{"id":926,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":929,"name":"IERC20","nameLocations":["305:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"305:6:5"},"id":930,"nodeType":"InheritanceSpecifier","src":"305:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"190:86:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":949,"linearizedBaseContracts":[949,877],"name":"IERC20Metadata","nameLocation":"287:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"318:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":936,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:5","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"390:2:5"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"416:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":933,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:5"},"scope":949,"src":"377:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"437:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":942,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:5","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"513:2:5"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"539:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":939,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:5"},"scope":949,"src":"498:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"560:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":948,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:5","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"647:2:5"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"673:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":945,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:5"},"scope":949,"src":"630:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":950,"src":"277:405:5","usedErrors":[],"usedEvents":[811,820]}],"src":"125:558:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[979]},"id":980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":951,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":979,"linearizedBaseContracts":[979],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":960,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":957,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":956,"id":959,"nodeType":"Return","src":"728:17:6"}]},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":961,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":979,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":969,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":966,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":965,"id":968,"nodeType":"Return","src":"835:15:6"}]},"id":970,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":970,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":963,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":979,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":974,"id":976,"nodeType":"Return","src":"945:8:6"}]},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":979,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":980,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1516]},"id":1517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":981,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"144:658:7","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1516,"linearizedBaseContracts":[1516],"name":"MerkleProof","nameLocation":"811:11:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"829:60:7","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":985,"name":"MerkleProofInvalidMultiproof","nameLocation":"900:28:7","nodeType":"ErrorDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"928:2:7"},"src":"894:37:7"},{"body":{"id":1005,"nodeType":"Block","src":"1362:57:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":999,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"1392:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1000,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1399:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":998,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"1379:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1379:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1002,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"1408:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1379:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":997,"id":1004,"nodeType":"Return","src":"1372:40:7"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"937:323:7","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1274:6:7","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"proof","nameLocation":"1298:5:7","nodeType":"VariableDeclaration","scope":1006,"src":"1281:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1281:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":988,"nodeType":"ArrayTypeName","src":"1281:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"root","nameLocation":"1313:4:7","nodeType":"VariableDeclaration","scope":1006,"src":"1305:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1305:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"leaf","nameLocation":"1327:4:7","nodeType":"VariableDeclaration","scope":1006,"src":"1319:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1280:52:7"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"1356:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":995,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:7"},"scope":1516,"src":"1265:154:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"1589:65:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1020,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"1627:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1021,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1634:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1019,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1606:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1023,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1643:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1606:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1018,"id":1025,"nodeType":"Return","src":"1599:48:7"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"1425:52:7","text":" @dev Calldata version of {verify}"},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1491:14:7","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"proof","nameLocation":"1525:5:7","nodeType":"VariableDeclaration","scope":1027,"src":"1506:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1506:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1009,"nodeType":"ArrayTypeName","src":"1506:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"root","nameLocation":"1540:4:7","nodeType":"VariableDeclaration","scope":1027,"src":"1532:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"leaf","nameLocation":"1554:4:7","nodeType":"VariableDeclaration","scope":1027,"src":"1546:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1546:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1505:54:7"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"1583:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1016,"name":"bool","nodeType":"ElementaryTypeName","src":"1583:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1582:6:7"},"scope":1516,"src":"1482:172:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1066,"nodeType":"Block","src":"2059:198:7","statements":[{"assignments":[1039],"declarations":[{"constant":false,"id":1039,"mutability":"mutable","name":"computedHash","nameLocation":"2077:12:7","nodeType":"VariableDeclaration","scope":1066,"src":"2069:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1041,"initialValue":{"id":1040,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2092:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2069:27:7"},{"body":{"id":1062,"nodeType":"Block","src":"2149:73:7","statements":[{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1053,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2163:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1055,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2188:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1056,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2202:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1058,"indexExpression":{"id":1057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2208:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2202:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1054,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2178:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2163:48:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1061,"nodeType":"ExpressionStatement","src":"2163:48:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2126:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1047,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2130:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2136:6:7","memberName":"length","nodeType":"MemberAccess","src":"2130:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"initializationExpression":{"assignments":[1043],"declarations":[{"constant":false,"id":1043,"mutability":"mutable","name":"i","nameLocation":"2119:1:7","nodeType":"VariableDeclaration","scope":1063,"src":"2111:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1045,"initialValue":{"hexValue":"30","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2123:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2111:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2144:3:7","subExpression":{"id":1050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2144:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1052,"nodeType":"ExpressionStatement","src":"2144:3:7"},"nodeType":"ForStatement","src":"2106:116:7"},{"expression":{"id":1064,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2238:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1037,"id":1065,"nodeType":"Return","src":"2231:19:7"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"1660:302:7","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted."},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1976:12:7","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"proof","nameLocation":"2006:5:7","nodeType":"VariableDeclaration","scope":1067,"src":"1989:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1030,"nodeType":"ArrayTypeName","src":"1989:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"leaf","nameLocation":"2021:4:7","nodeType":"VariableDeclaration","scope":1067,"src":"2013:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1988:38:7"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1067,"src":"2050:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2050:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2049:9:7"},"scope":1516,"src":"1967:290:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1106,"nodeType":"Block","src":"2428:198:7","statements":[{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"computedHash","nameLocation":"2446:12:7","nodeType":"VariableDeclaration","scope":1106,"src":"2438:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1081,"initialValue":{"id":1080,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"2461:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2438:27:7"},{"body":{"id":1102,"nodeType":"Block","src":"2518:73:7","statements":[{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1093,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2532:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1095,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2557:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1096,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2571:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1098,"indexExpression":{"id":1097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2577:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2571:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1094,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2547:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2532:48:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1101,"nodeType":"ExpressionStatement","src":"2532:48:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2495:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1087,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2499:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2505:6:7","memberName":"length","nodeType":"MemberAccess","src":"2499:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1103,"initializationExpression":{"assignments":[1083],"declarations":[{"constant":false,"id":1083,"mutability":"mutable","name":"i","nameLocation":"2488:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"2480:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1085,"initialValue":{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2480:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2513:3:7","subExpression":{"id":1090,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2513:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1092,"nodeType":"ExpressionStatement","src":"2513:3:7"},"nodeType":"ForStatement","src":"2475:116:7"},{"expression":{"id":1104,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2607:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1077,"id":1105,"nodeType":"Return","src":"2600:19:7"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"2263:58:7","text":" @dev Calldata version of {processProof}"},"id":1107,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2335:20:7","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"proof","nameLocation":"2375:5:7","nodeType":"VariableDeclaration","scope":1107,"src":"2356:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2356:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1070,"nodeType":"ArrayTypeName","src":"2356:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"leaf","nameLocation":"2390:4:7","nodeType":"VariableDeclaration","scope":1107,"src":"2382:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2382:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2355:40:7"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"2419:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2419:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2418:9:7"},"scope":1516,"src":"2326:300:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"3131:76:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1125,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3166:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1126,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"3173:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1127,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"3185:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1124,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3148:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1129,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"3196:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1123,"id":1131,"nodeType":"Return","src":"3141:59:7"}]},"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"2632:312:7","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2958:16:7","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"proof","nameLocation":"3001:5:7","nodeType":"VariableDeclaration","scope":1133,"src":"2984:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2984:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1110,"nodeType":"ArrayTypeName","src":"2984:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"proofFlags","nameLocation":"3030:10:7","nodeType":"VariableDeclaration","scope":1133,"src":"3016:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1112,"name":"bool","nodeType":"ElementaryTypeName","src":"3016:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1113,"nodeType":"ArrayTypeName","src":"3016:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"root","nameLocation":"3058:4:7","nodeType":"VariableDeclaration","scope":1133,"src":"3050:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3050:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"leaves","nameLocation":"3089:6:7","nodeType":"VariableDeclaration","scope":1133,"src":"3072:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3072:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1118,"nodeType":"ArrayTypeName","src":"3072:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2974:127:7"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"3125:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1121,"name":"bool","nodeType":"ElementaryTypeName","src":"3125:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3124:6:7"},"scope":1516,"src":"2949:258:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"3574:84:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1151,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"3617:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1152,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3624:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1153,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3636:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1150,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3591:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1155,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"3647:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3591:60:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1149,"id":1157,"nodeType":"Return","src":"3584:67:7"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"3213:162:7","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3389:24:7","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"proof","nameLocation":"3442:5:7","nodeType":"VariableDeclaration","scope":1159,"src":"3423:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1136,"nodeType":"ArrayTypeName","src":"3423:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"proofFlags","nameLocation":"3473:10:7","nodeType":"VariableDeclaration","scope":1159,"src":"3457:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1139,"nodeType":"ArrayTypeName","src":"3457:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"root","nameLocation":"3501:4:7","nodeType":"VariableDeclaration","scope":1159,"src":"3493:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3493:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"leaves","nameLocation":"3532:6:7","nodeType":"VariableDeclaration","scope":1159,"src":"3515:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1144,"nodeType":"ArrayTypeName","src":"3515:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3413:131:7"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"3568:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1147,"name":"bool","nodeType":"ElementaryTypeName","src":"3568:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3567:6:7"},"scope":1516,"src":"3380:278:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1318,"nodeType":"Block","src":"4574:2107:7","statements":[{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"leavesLen","nameLocation":"4966:9:7","nodeType":"VariableDeclaration","scope":1318,"src":"4958:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1178,"initialValue":{"expression":{"id":1176,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4978:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4985:6:7","memberName":"length","nodeType":"MemberAccess","src":"4978:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4958:33:7"},{"assignments":[1180],"declarations":[{"constant":false,"id":1180,"mutability":"mutable","name":"proofLen","nameLocation":"5009:8:7","nodeType":"VariableDeclaration","scope":1318,"src":"5001:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5001:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1183,"initialValue":{"expression":{"id":1181,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"5020:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5026:6:7","memberName":"length","nodeType":"MemberAccess","src":"5020:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5001:31:7"},{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"totalHashes","nameLocation":"5050:11:7","nodeType":"VariableDeclaration","scope":1318,"src":"5042:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5042:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1188,"initialValue":{"expression":{"id":1186,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5064:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:7","memberName":"length","nodeType":"MemberAccess","src":"5064:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5042:39:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1189,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"5129:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1190,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5141:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5153:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5167:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5153:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"5125:107:7","trueBody":{"id":1199,"nodeType":"Block","src":"5170:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1196,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5191:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1198,"nodeType":"RevertStatement","src":"5184:37:7"}]}},{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"hashes","nameLocation":"5493:6:7","nodeType":"VariableDeclaration","scope":1318,"src":"5476:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5476:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1204,"nodeType":"ArrayTypeName","src":"5476:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1211,"initialValue":{"arguments":[{"id":1209,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5516:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5502:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5506:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1207,"nodeType":"ArrayTypeName","src":"5506:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5476:52:7"},{"assignments":[1213],"declarations":[{"constant":false,"id":1213,"mutability":"mutable","name":"leafPos","nameLocation":"5546:7:7","nodeType":"VariableDeclaration","scope":1318,"src":"5538:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5538:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1215,"initialValue":{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5556:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5538:19:7"},{"assignments":[1217],"declarations":[{"constant":false,"id":1217,"mutability":"mutable","name":"hashPos","nameLocation":"5575:7:7","nodeType":"VariableDeclaration","scope":1318,"src":"5567:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5567:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1219,"initialValue":{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5567:19:7"},{"assignments":[1221],"declarations":[{"constant":false,"id":1221,"mutability":"mutable","name":"proofPos","nameLocation":"5604:8:7","nodeType":"VariableDeclaration","scope":1318,"src":"5596:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1223,"initialValue":{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5596:20:7"},{"body":{"id":1282,"nodeType":"Block","src":"6034:292:7","statements":[{"assignments":[1235],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"a","nameLocation":"6056:1:7","nodeType":"VariableDeclaration","scope":1282,"src":"6048:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6048:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1248,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6060:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1237,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"6070:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1243,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"6102:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1246,"indexExpression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6109:9:7","subExpression":{"id":1244,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6109:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6102:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6060:59:7","trueExpression":{"baseExpression":{"id":1239,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6082:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1242,"indexExpression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6089:9:7","subExpression":{"id":1240,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6089:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6082:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6048:71:7"},{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"b","nameLocation":"6141:1:7","nodeType":"VariableDeclaration","scope":1282,"src":"6133:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6133:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1272,"initialValue":{"condition":{"baseExpression":{"id":1251,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"6145:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1253,"indexExpression":{"id":1252,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"6156:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6145:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1267,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"6257:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1270,"indexExpression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6263:10:7","subExpression":{"id":1268,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6263:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6257:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6145:129:7","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1254,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1255,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"6188:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6178:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1261,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"6220:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1264,"indexExpression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6227:9:7","subExpression":{"id":1262,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6220:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6178:59:7","trueExpression":{"baseExpression":{"id":1257,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6200:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1260,"indexExpression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6207:9:7","subExpression":{"id":1258,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6207:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6200:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6177:61:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6133:141:7"},{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1273,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"6288:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1275,"indexExpression":{"id":1274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"6295:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6288:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1277,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"6310:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1278,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"6313:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1276,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"6300:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6288:27:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1281,"nodeType":"ExpressionStatement","src":"6288:27:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"6012:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1229,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6016:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6012:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1283,"initializationExpression":{"assignments":[1225],"declarations":[{"constant":false,"id":1225,"mutability":"mutable","name":"i","nameLocation":"6005:1:7","nodeType":"VariableDeclaration","scope":1283,"src":"5997:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1227,"initialValue":{"hexValue":"30","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6009:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5997:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6029:3:7","subExpression":{"id":1231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"6029:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ExpressionStatement","src":"6029:3:7"},"nodeType":"ForStatement","src":"5992:334:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6340:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6340:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"6573:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6573:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1315,"nodeType":"Block","src":"6635:40:7","statements":[{"expression":{"baseExpression":{"id":1311,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"6656:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1313,"indexExpression":{"hexValue":"30","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6662:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6656:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1173,"id":1314,"nodeType":"Return","src":"6649:15:7"}]},"id":1316,"nodeType":"IfStatement","src":"6569:106:7","trueBody":{"id":1310,"nodeType":"Block","src":"6588:41:7","statements":[{"expression":{"baseExpression":{"id":1306,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"6609:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1308,"indexExpression":{"hexValue":"30","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6616:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6609:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1173,"id":1309,"nodeType":"Return","src":"6602:16:7"}]}},"id":1317,"nodeType":"IfStatement","src":"6336:339:7","trueBody":{"id":1302,"nodeType":"Block","src":"6357:206:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6375:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1288,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6387:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1294,"nodeType":"IfStatement","src":"6371:96:7","trueBody":{"id":1293,"nodeType":"Block","src":"6397:70:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6422:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1292,"nodeType":"RevertStatement","src":"6415:37:7"}]}},{"id":1301,"nodeType":"UncheckedBlock","src":"6480:73:7","statements":[{"expression":{"baseExpression":{"id":1295,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"6515:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1299,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1296,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"6522:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6536:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6522:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6515:23:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1173,"id":1300,"nodeType":"Return","src":"6508:30:7"}]}]}}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"3664:730:7","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer)."},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4408:17:7","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"proof","nameLocation":"4452:5:7","nodeType":"VariableDeclaration","scope":1319,"src":"4435:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4435:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1162,"nodeType":"ArrayTypeName","src":"4435:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"proofFlags","nameLocation":"4481:10:7","nodeType":"VariableDeclaration","scope":1319,"src":"4467:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1164,"name":"bool","nodeType":"ElementaryTypeName","src":"4467:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1165,"nodeType":"ArrayTypeName","src":"4467:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"leaves","nameLocation":"4518:6:7","nodeType":"VariableDeclaration","scope":1319,"src":"4501:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4501:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1168,"nodeType":"ArrayTypeName","src":"4501:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4425:105:7"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"merkleRoot","nameLocation":"4562:10:7","nodeType":"VariableDeclaration","scope":1319,"src":"4554:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4553:20:7"},"scope":1516,"src":"4399:2282:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"7043:2107:7","statements":[{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"leavesLen","nameLocation":"7435:9:7","nodeType":"VariableDeclaration","scope":1478,"src":"7427:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7427:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1338,"initialValue":{"expression":{"id":1336,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"7447:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7454:6:7","memberName":"length","nodeType":"MemberAccess","src":"7447:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7427:33:7"},{"assignments":[1340],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"proofLen","nameLocation":"7478:8:7","nodeType":"VariableDeclaration","scope":1478,"src":"7470:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"7470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1343,"initialValue":{"expression":{"id":1341,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"7489:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7495:6:7","memberName":"length","nodeType":"MemberAccess","src":"7489:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7470:31:7"},{"assignments":[1345],"declarations":[{"constant":false,"id":1345,"mutability":"mutable","name":"totalHashes","nameLocation":"7519:11:7","nodeType":"VariableDeclaration","scope":1478,"src":"7511:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1348,"initialValue":{"expression":{"id":1346,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"7533:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:6:7","memberName":"length","nodeType":"MemberAccess","src":"7533:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7511:39:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7598:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1350,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"7610:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7622:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7636:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7622:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1360,"nodeType":"IfStatement","src":"7594:107:7","trueBody":{"id":1359,"nodeType":"Block","src":"7639:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1356,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"7660:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7660:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1358,"nodeType":"RevertStatement","src":"7653:37:7"}]}},{"assignments":[1365],"declarations":[{"constant":false,"id":1365,"mutability":"mutable","name":"hashes","nameLocation":"7962:6:7","nodeType":"VariableDeclaration","scope":1478,"src":"7945:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7945:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1364,"nodeType":"ArrayTypeName","src":"7945:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1371,"initialValue":{"arguments":[{"id":1369,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7985:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7971:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7975:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1367,"nodeType":"ArrayTypeName","src":"7975:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7971:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7945:52:7"},{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"leafPos","nameLocation":"8015:7:7","nodeType":"VariableDeclaration","scope":1478,"src":"8007:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1375,"initialValue":{"hexValue":"30","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8025:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8007:19:7"},{"assignments":[1377],"declarations":[{"constant":false,"id":1377,"mutability":"mutable","name":"hashPos","nameLocation":"8044:7:7","nodeType":"VariableDeclaration","scope":1478,"src":"8036:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1379,"initialValue":{"hexValue":"30","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8036:19:7"},{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"proofPos","nameLocation":"8073:8:7","nodeType":"VariableDeclaration","scope":1478,"src":"8065:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1383,"initialValue":{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8065:20:7"},{"body":{"id":1442,"nodeType":"Block","src":"8503:292:7","statements":[{"assignments":[1395],"declarations":[{"constant":false,"id":1395,"mutability":"mutable","name":"a","nameLocation":"8525:1:7","nodeType":"VariableDeclaration","scope":1442,"src":"8517:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8517:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1408,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"8529:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1397,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8539:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8529:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1403,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"8571:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1406,"indexExpression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:9:7","subExpression":{"id":1404,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8578:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8571:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8529:59:7","trueExpression":{"baseExpression":{"id":1399,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"8551:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1402,"indexExpression":{"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8558:9:7","subExpression":{"id":1400,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"8558:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8551:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8517:71:7"},{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"b","nameLocation":"8610:1:7","nodeType":"VariableDeclaration","scope":1442,"src":"8602:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8602:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1432,"initialValue":{"condition":{"baseExpression":{"id":1411,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"8614:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1413,"indexExpression":{"id":1412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8625:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8614:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1427,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"8726:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1430,"indexExpression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8732:10:7","subExpression":{"id":1428,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8732:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8726:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8614:129:7","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1414,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"8647:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1415,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8657:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8647:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1421,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"8689:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1424,"indexExpression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8696:9:7","subExpression":{"id":1422,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8696:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8689:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8647:59:7","trueExpression":{"baseExpression":{"id":1417,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"8669:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1420,"indexExpression":{"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8676:9:7","subExpression":{"id":1418,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"8676:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8669:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8646:61:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8602:141:7"},{"expression":{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1433,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"8757:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1435,"indexExpression":{"id":1434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8764:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8757:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"8779:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"8782:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1436,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"8769:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8757:27:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1441,"nodeType":"ExpressionStatement","src":"8757:27:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8481:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1389,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"8485:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8481:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1443,"initializationExpression":{"assignments":[1385],"declarations":[{"constant":false,"id":1385,"mutability":"mutable","name":"i","nameLocation":"8474:1:7","nodeType":"VariableDeclaration","scope":1443,"src":"8466:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"8466:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1387,"initialValue":{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8478:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8466:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8498:3:7","subExpression":{"id":1391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8498:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ExpressionStatement","src":"8498:3:7"},"nodeType":"ForStatement","src":"8461:334:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"8809:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8823:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8809:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"9042:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9042:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1475,"nodeType":"Block","src":"9104:40:7","statements":[{"expression":{"baseExpression":{"id":1471,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"9125:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1473,"indexExpression":{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9131:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9125:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1333,"id":1474,"nodeType":"Return","src":"9118:15:7"}]},"id":1476,"nodeType":"IfStatement","src":"9038:106:7","trueBody":{"id":1470,"nodeType":"Block","src":"9057:41:7","statements":[{"expression":{"baseExpression":{"id":1466,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9078:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1468,"indexExpression":{"hexValue":"30","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9078:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1333,"id":1469,"nodeType":"Return","src":"9071:16:7"}]}},"id":1477,"nodeType":"IfStatement","src":"8805:339:7","trueBody":{"id":1462,"nodeType":"Block","src":"8826:206:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"8844:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1448,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"8856:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8844:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"8840:96:7","trueBody":{"id":1453,"nodeType":"Block","src":"8866:70:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1450,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"8891:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1452,"nodeType":"RevertStatement","src":"8884:37:7"}]}},{"id":1461,"nodeType":"UncheckedBlock","src":"8949:73:7","statements":[{"expression":{"baseExpression":{"id":1455,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"8984:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1459,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"8991:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9005:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8991:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8984:23:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1333,"id":1460,"nodeType":"Return","src":"8977:30:7"}]}]}}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"6687:164:7","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6865:25:7","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"proof","nameLocation":"6919:5:7","nodeType":"VariableDeclaration","scope":1479,"src":"6900:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6900:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1322,"nodeType":"ArrayTypeName","src":"6900:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"proofFlags","nameLocation":"6950:10:7","nodeType":"VariableDeclaration","scope":1479,"src":"6934:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1324,"name":"bool","nodeType":"ElementaryTypeName","src":"6934:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1325,"nodeType":"ArrayTypeName","src":"6934:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"leaves","nameLocation":"6987:6:7","nodeType":"VariableDeclaration","scope":1479,"src":"6970:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6970:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1328,"nodeType":"ArrayTypeName","src":"6970:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6890:109:7"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"merkleRoot","nameLocation":"7031:10:7","nodeType":"VariableDeclaration","scope":1479,"src":"7023:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7023:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7022:20:7"},"scope":1516,"src":"6856:2294:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"9301:75:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"9318:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1490,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"9322:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9318:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1497,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"9364:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"9367:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1496,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"9349:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9349:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9318:51:7","trueExpression":{"arguments":[{"id":1493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"9341:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"9344:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1492,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"9326:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1488,"id":1501,"nodeType":"Return","src":"9311:58:7"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"9156:68:7","text":" @dev Sorts the pair (a, b) and hashes the result."},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9238:9:7","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"a","nameLocation":"9256:1:7","nodeType":"VariableDeclaration","scope":1503,"src":"9248:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9248:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"b","nameLocation":"9267:1:7","nodeType":"VariableDeclaration","scope":1503,"src":"9259:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9259:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9247:22:7"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"9292:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9292:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9291:9:7"},"scope":1516,"src":"9229:147:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1514,"nodeType":"Block","src":"9579:178:7","statements":[{"AST":{"nativeSrc":"9641:110:7","nodeType":"YulBlock","src":"9641:110:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9662:4:7","nodeType":"YulLiteral","src":"9662:4:7","type":"","value":"0x00"},{"name":"a","nativeSrc":"9668:1:7","nodeType":"YulIdentifier","src":"9668:1:7"}],"functionName":{"name":"mstore","nativeSrc":"9655:6:7","nodeType":"YulIdentifier","src":"9655:6:7"},"nativeSrc":"9655:15:7","nodeType":"YulFunctionCall","src":"9655:15:7"},"nativeSrc":"9655:15:7","nodeType":"YulExpressionStatement","src":"9655:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9690:4:7","nodeType":"YulLiteral","src":"9690:4:7","type":"","value":"0x20"},{"name":"b","nativeSrc":"9696:1:7","nodeType":"YulIdentifier","src":"9696:1:7"}],"functionName":{"name":"mstore","nativeSrc":"9683:6:7","nodeType":"YulIdentifier","src":"9683:6:7"},"nativeSrc":"9683:15:7","nodeType":"YulFunctionCall","src":"9683:15:7"},"nativeSrc":"9683:15:7","nodeType":"YulExpressionStatement","src":"9683:15:7"},{"nativeSrc":"9711:30:7","nodeType":"YulAssignment","src":"9711:30:7","value":{"arguments":[{"kind":"number","nativeSrc":"9730:4:7","nodeType":"YulLiteral","src":"9730:4:7","type":"","value":"0x00"},{"kind":"number","nativeSrc":"9736:4:7","nodeType":"YulLiteral","src":"9736:4:7","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"9720:9:7","nodeType":"YulIdentifier","src":"9720:9:7"},"nativeSrc":"9720:21:7","nodeType":"YulFunctionCall","src":"9720:21:7"},"variableNames":[{"name":"value","nativeSrc":"9711:5:7","nodeType":"YulIdentifier","src":"9711:5:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1506,"isOffset":false,"isSlot":false,"src":"9668:1:7","valueSize":1},{"declaration":1508,"isOffset":false,"isSlot":false,"src":"9696:1:7","valueSize":1},{"declaration":1511,"isOffset":false,"isSlot":false,"src":"9711:5:7","valueSize":1}],"id":1513,"nodeType":"InlineAssembly","src":"9632:119:7"}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"9382:109:7","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":1515,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9505:14:7","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"a","nameLocation":"9528:1:7","nodeType":"VariableDeclaration","scope":1515,"src":"9520:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9520:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"b","nameLocation":"9539:1:7","nodeType":"VariableDeclaration","scope":1515,"src":"9531:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9531:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9519:22:7"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"value","nameLocation":"9572:5:7","nodeType":"VariableDeclaration","scope":1515,"src":"9564:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9564:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9563:15:7"},"scope":1516,"src":"9496:261:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1517,"src":"803:8956:7","usedErrors":[985],"usedEvents":[]}],"src":"118:9642:7"},"id":7},"contracts/AirdropMerkle.sol":{"ast":{"absolutePath":"contracts/AirdropMerkle.sol","exportedSymbols":{"AirdropMerkle":[1732],"Context":[979],"IERC20":[877],"MerkleProof":[1516],"Ownable":[147]},"id":1733,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1518,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"40:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":1517,"src":"68:68:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":878,"src":"138:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1733,"sourceUnit":148,"src":"196:52:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1522,"name":"Ownable","nameLocations":["278:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"278:7:8"},"id":1523,"nodeType":"InheritanceSpecifier","src":"278:7:8"}],"canonicalName":"AirdropMerkle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1732,"linearizedBaseContracts":[1732,147,979],"name":"AirdropMerkle","nameLocation":"261:13:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":1526,"mutability":"immutable","name":"token","nameLocation":"317:5:8","nodeType":"VariableDeclaration","scope":1732,"src":"293:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":1525,"nodeType":"UserDefinedTypeName","pathNode":{"id":1524,"name":"IERC20","nameLocations":["293:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"293:6:8"},"referencedDeclaration":877,"src":"293:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":1528,"mutability":"mutable","name":"merkleRoot","nameLocation":"344:10:8","nodeType":"VariableDeclaration","scope":1732,"src":"329:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"329:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"73b2e80e","id":1532,"mutability":"mutable","name":"hasClaimed","nameLocation":"466:10:8","nodeType":"VariableDeclaration","scope":1732,"src":"434:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1531,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"434:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1530,"name":"bool","nodeType":"ElementaryTypeName","src":"453:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"2bc79c12","id":1536,"mutability":"mutable","name":"claimableAmounts","nameLocation":"572:16:8","nodeType":"VariableDeclaration","scope":1732,"src":"537:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1535,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"537:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"b073f687","id":1538,"mutability":"mutable","name":"totalAirdropAmount","nameLocation":"673:18:8","nodeType":"VariableDeclaration","scope":1732,"src":"658:33:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430","id":1544,"name":"TokensClaimed","nameLocation":"710:13:8","nodeType":"EventDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"740:7:8","nodeType":"VariableDeclaration","scope":1544,"src":"724:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1542,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"757:6:8","nodeType":"VariableDeclaration","scope":1544,"src":"749:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:41:8"},"src":"704:61:8"},{"body":{"id":1627,"nodeType":"Block","src":"916:474:8","statements":[{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"927:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1563,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"942:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1562,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"935:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"935:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"src":"927:22:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1566,"nodeType":"ExpressionStatement","src":"927:22:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"968:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"991:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"983:7:8","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"983:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"968:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d65726b6c6520726f6f74","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"995:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5","typeString":"literal_string \"Invalid merkle root\""},"value":"Invalid merkle root"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5","typeString":"literal_string \"Invalid merkle root\""}],"id":1567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"960:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"960:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"ExpressionStatement","src":"960:57:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1578,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"1036:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1046:6:8","memberName":"length","nodeType":"MemberAccess","src":"1036:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1580,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"1056:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1064:6:8","memberName":"length","nodeType":"MemberAccess","src":"1056:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1036:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d69736d61746368656420617272617973","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1072:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481","typeString":"literal_string \"Mismatched arrays\""},"value":"Mismatched arrays"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481","typeString":"literal_string \"Mismatched arrays\""}],"id":1577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1028:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"1028:64:8"},{"expression":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1586,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"1113:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1587,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"1126:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1113:24:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1589,"nodeType":"ExpressionStatement","src":"1113:24:8"},{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"total","nameLocation":"1156:5:8","nodeType":"VariableDeclaration","scope":1627,"src":"1148:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1593,"initialValue":{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1164:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1148:17:8"},{"body":{"id":1621,"nodeType":"Block","src":"1232:104:8","statements":[{"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1605,"name":"claimableAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1247:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1609,"indexExpression":{"baseExpression":{"id":1606,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"1264:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1608,"indexExpression":{"id":1607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1274:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1264:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1247:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1610,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"1280:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1612,"indexExpression":{"id":1611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1288:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1280:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1247:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1614,"nodeType":"ExpressionStatement","src":"1247:43:8"},{"expression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1615,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"1305:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1616,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"1314:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1618,"indexExpression":{"id":1617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1322:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1314:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1305:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1620,"nodeType":"ExpressionStatement","src":"1305:19:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1205:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1599,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"1209:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1219:6:8","memberName":"length","nodeType":"MemberAccess","src":"1209:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1205:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1622,"initializationExpression":{"assignments":[1595],"declarations":[{"constant":false,"id":1595,"mutability":"mutable","name":"i","nameLocation":"1198:1:8","nodeType":"VariableDeclaration","scope":1622,"src":"1190:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1597,"initialValue":{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1202:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1190:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1227:3:8","subExpression":{"id":1602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1227:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1604,"nodeType":"ExpressionStatement","src":"1227:3:8"},"nodeType":"ForStatement","src":"1186:150:8"},{"expression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1623,"name":"totalAirdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1356:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1624,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"1377:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1356:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1626,"nodeType":"ExpressionStatement","src":"1356:26:8"}]},"id":1628,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1557,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"898:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"902:6:8","memberName":"sender","nodeType":"MemberAccess","src":"898:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1559,"kind":"baseConstructorSpecifier","modifierName":{"id":1556,"name":"Ownable","nameLocations":["890:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"890:7:8"},"nodeType":"ModifierInvocation","src":"890:19:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"_token","nameLocation":"797:6:8","nodeType":"VariableDeclaration","scope":1628,"src":"789:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"_merkleRoot","nameLocation":"813:11:8","nodeType":"VariableDeclaration","scope":1628,"src":"805:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"805:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"addresses","nameLocation":"843:9:8","nodeType":"VariableDeclaration","scope":1628,"src":"826:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1550,"nodeType":"ArrayTypeName","src":"826:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"amounts","nameLocation":"871:7:8","nodeType":"VariableDeclaration","scope":1628,"src":"854:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"854:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ArrayTypeName","src":"854:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"788:91:8"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[],"src":"916:0:8"},"scope":1732,"src":"777:613:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1663,"nodeType":"Block","src":"1606:297:8","statements":[{"assignments":[1641],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"leaf","nameLocation":"1688:4:8","nodeType":"VariableDeclaration","scope":1663,"src":"1680:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1680:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1655,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1649,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1753:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1650,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1762:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1647,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1742:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1746:6:8","memberName":"encode","nodeType":"MemberAccess","src":"1742:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1742:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1646,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1732:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1719:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1643,"name":"bytes","nodeType":"ElementaryTypeName","src":"1719:5:8","typeDescriptions":{}}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:6:8","memberName":"concat","nodeType":"MemberAccess","src":"1719:12:8","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1642,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1695:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1695:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1680:102:8"},{"expression":{"arguments":[{"id":1658,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1865:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1659,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"1878:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1660,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"1890:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1656,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"1846:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1516_$","typeString":"type(library MerkleProof)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1858:6:8","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":1006,"src":"1846:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1639,"id":1662,"nodeType":"Return","src":"1839:56:8"}]},"functionSelector":"faf7a826","id":1664,"implemented":true,"kind":"function","modifiers":[],"name":"isWhitelisted","nameLocation":"1466:13:8","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"account","nameLocation":"1498:7:8","nodeType":"VariableDeclaration","scope":1664,"src":"1490:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"1490:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"amount","nameLocation":"1524:6:8","nodeType":"VariableDeclaration","scope":1664,"src":"1516:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1516:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"merkleProof","nameLocation":"1560:11:8","nodeType":"VariableDeclaration","scope":1664,"src":"1541:30:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1541:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1634,"nodeType":"ArrayTypeName","src":"1541:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1479:99:8"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1664,"src":"1600:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1637,"name":"bool","nodeType":"ElementaryTypeName","src":"1600:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1599:6:8"},"scope":1732,"src":"1457:446:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1730,"nodeType":"Block","src":"2071:679:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2090:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2104:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:8","typeDescriptions":{}}},"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2104:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2090:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f70206e6f7420696e697469616c697a6564","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2116:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f51c67bfafd54ff3bd71f5458e2d3bac4ca1c229624798d4a19f981f45d3f26f","typeString":"literal_string \"Airdrop not initialized\""},"value":"Airdrop not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f51c67bfafd54ff3bd71f5458e2d3bac4ca1c229624798d4a19f981f45d3f26f","typeString":"literal_string \"Airdrop not initialized\""}],"id":1674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2082:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2082:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"ExpressionStatement","src":"2082:60:8"},{"expression":{"arguments":[{"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2161:20:8","subExpression":{"baseExpression":{"id":1685,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2162:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1687,"indexExpression":{"id":1686,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2173:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d6564","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2183:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""},"value":"Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""}],"id":1684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2153:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1691,"nodeType":"ExpressionStatement","src":"2153:48:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2220:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":1694,"name":"claimableAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2230:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1696,"indexExpression":{"id":1695,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2247:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2230:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2220:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636c61696d20616d6f756e74","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2257:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2174c1737f7cb6c21957e39702561f246cc9bd66d84735975199b1061c55180","typeString":"literal_string \"Invalid claim amount\""},"value":"Invalid claim amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2174c1737f7cb6c21957e39702561f246cc9bd66d84735975199b1061c55180","typeString":"literal_string \"Invalid claim amount\""}],"id":1692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2212:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"ExpressionStatement","src":"2212:68:8"},{"expression":{"arguments":[{"arguments":[{"id":1703,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2373:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2382:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1705,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"2390:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":1702,"name":"isWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2359:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes32[] calldata) view returns (bool)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f663a204e6f742077686974656c6973746564","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2417:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d91c9f8f131c19ac5048986a8b04473e0f524e32284651e09801d68efa145ca2","typeString":"literal_string \"Invalid proof: Not whitelisted\""},"value":"Invalid proof: Not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d91c9f8f131c19ac5048986a8b04473e0f524e32284651e09801d68efa145ca2","typeString":"literal_string \"Invalid proof: Not whitelisted\""}],"id":1701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2337:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2337:123:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"2337:123:8"},{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1710,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2509:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1712,"indexExpression":{"id":1711,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2520:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2509:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2531:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2509:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1715,"nodeType":"ExpressionStatement","src":"2509:26:8"},{"expression":{"arguments":[{"arguments":[{"id":1719,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2621:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1720,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2630:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1717,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"2606:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2612:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"2606:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2652:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":1716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2584:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2584:102:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"ExpressionStatement","src":"2584:102:8"},{"eventCall":{"arguments":[{"id":1726,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2726:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1727,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2735:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1725,"name":"TokensClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2712:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1729,"nodeType":"EmitStatement","src":"2707:35:8"}]},"functionSelector":"3d13f874","id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1957:5:8","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"account","nameLocation":"1981:7:8","nodeType":"VariableDeclaration","scope":1731,"src":"1973:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"amount","nameLocation":"2007:6:8","nodeType":"VariableDeclaration","scope":1731,"src":"1999:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"merkleProof","nameLocation":"2043:11:8","nodeType":"VariableDeclaration","scope":1731,"src":"2024:30:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2024:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1670,"nodeType":"ArrayTypeName","src":"2024:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1962:99:8"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"2071:0:8"},"scope":1732,"src":"1948:802:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1733,"src":"252:2501:8","usedErrors":[13,18],"usedEvents":[24,1544]}],"src":"40:2713:8"},"id":8},"contracts/AirdropToken.sol":{"ast":{"absolutePath":"contracts/AirdropToken.sol","exportedSymbols":{"AirdropToken":[1832],"Context":[979],"ERC20":[799],"ERC20Burnable":[923],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[949],"Ownable":[147]},"id":1833,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1734,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"39:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1833,"sourceUnit":800,"src":"65:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":1736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1833,"sourceUnit":924,"src":"121:74:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1833,"sourceUnit":148,"src":"196:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1738,"name":"ERC20","nameLocations":["275:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"275:5:9"},"id":1739,"nodeType":"InheritanceSpecifier","src":"275:5:9"},{"baseName":{"id":1740,"name":"ERC20Burnable","nameLocations":["282:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":923,"src":"282:13:9"},"id":1741,"nodeType":"InheritanceSpecifier","src":"282:13:9"},{"baseName":{"id":1742,"name":"Ownable","nameLocations":["297:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"297:7:9"},"id":1743,"nodeType":"InheritanceSpecifier","src":"297:7:9"}],"canonicalName":"AirdropToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1832,"linearizedBaseContracts":[1832,147,923,799,189,949,877,979],"name":"AirdropToken","nameLocation":"259:12:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"32cb6b0c","id":1750,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"335:10:9","nodeType":"VariableDeclaration","scope":1832,"src":"311:59:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":1749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f3030305f303030","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"348:13:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"364:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"368:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"364:6:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"348:22:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"visibility":"public"},{"body":{"id":1767,"nodeType":"Block","src":"501:86:9","statements":[{"expression":{"arguments":[{"expression":{"id":1762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"557:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"561:6:9","memberName":"sender","nodeType":"MemberAccess","src":"557:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1764,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"569:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1761,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"551:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"551:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1766,"nodeType":"ExpressionStatement","src":"551:29:9"}]},"id":1768,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4b6f64656420546f6b656e","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"447:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5096f1b1d430dffc7fb55e47d1c77472213f22aa00a31e95843171a0224eba44","typeString":"literal_string \"Koded Token\""},"value":"Koded Token"},{"hexValue":"4b544b","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"462:5:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5445f60932521ee222a77c1aefdb2efd8b197bbc321f4746c3b2d12a305b5a","typeString":"literal_string \"KTK\""},"value":"KTK"}],"id":1755,"kind":"baseConstructorSpecifier","modifierName":{"id":1752,"name":"ERC20","nameLocations":["441:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"441:5:9"},"nodeType":"ModifierInvocation","src":"441:27:9"},{"arguments":[{"expression":{"id":1757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"485:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"489:6:9","memberName":"sender","nodeType":"MemberAccess","src":"485:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1759,"kind":"baseConstructorSpecifier","modifierName":{"id":1756,"name":"Ownable","nameLocations":["477:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"477:7:9"},"nodeType":"ModifierInvocation","src":"477:19:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"429:2:9"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"501:0:9"},"scope":1832,"src":"418:169:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1792,"nodeType":"Block","src":"718:111:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1778,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"736:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"736:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1780,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"752:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"736:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1782,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"762:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"736:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d617820737570706c79","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"774:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611","typeString":"literal_string \"Exceeds max supply\""},"value":"Exceeds max supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611","typeString":"literal_string \"Exceeds max supply\""}],"id":1777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1786,"nodeType":"ExpressionStatement","src":"728:67:9"},{"expression":{"arguments":[{"id":1788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"811:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"815:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1787,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"805:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"805:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"ExpressionStatement","src":"805:17:9"}]},"functionSelector":"40c10f19","id":1793,"implemented":true,"kind":"function","modifiers":[{"id":1775,"kind":"modifierInvocation","modifierName":{"id":1774,"name":"onlyOwner","nameLocations":["708:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"708:9:9"},"nodeType":"ModifierInvocation","src":"708:9:9"}],"name":"mint","nameLocation":"668:4:9","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"to","nameLocation":"681:2:9","nodeType":"VariableDeclaration","scope":1793,"src":"673:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"673:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"amount","nameLocation":"693:6:9","nodeType":"VariableDeclaration","scope":1793,"src":"685:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"672:28:9"},"returnParameters":{"id":1776,"nodeType":"ParameterList","parameters":[],"src":"718:0:9"},"scope":1832,"src":"659:170:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1811,"nodeType":"Block","src":"983:63:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1023:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1808,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"1032:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1803,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1000:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1802,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"993:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1014:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"993:29:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"ExpressionStatement","src":"993:46:9"}]},"functionSelector":"069c9fae","id":1812,"implemented":true,"kind":"function","modifiers":[{"id":1800,"kind":"modifierInvocation","modifierName":{"id":1799,"name":"onlyOwner","nameLocations":["973:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"973:9:9"},"nodeType":"ModifierInvocation","src":"973:9:9"}],"name":"recoverTokens","nameLocation":"912:13:9","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"tokenAddress","nameLocation":"934:12:9","nodeType":"VariableDeclaration","scope":1812,"src":"926:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"amount","nameLocation":"956:6:9","nodeType":"VariableDeclaration","scope":1812,"src":"948:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"948:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:38:9"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[],"src":"983:0:9"},"scope":1832,"src":"903:143:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1830,"nodeType":"Block","src":"1158:65:9","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":1825,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1202:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropToken_$1832","typeString":"contract AirdropToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropToken_$1832","typeString":"contract AirdropToken"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1194:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"1194:7:9","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1194:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:7:9","memberName":"balance","nodeType":"MemberAccess","src":"1194:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1176:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1168:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"1168:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1168:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1185:8:9","memberName":"transfer","nodeType":"MemberAccess","src":"1168:25:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1168:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"ExpressionStatement","src":"1168:48:9"}]},"functionSelector":"0614117a","id":1831,"implemented":true,"kind":"function","modifiers":[{"id":1815,"kind":"modifierInvocation","modifierName":{"id":1814,"name":"onlyOwner","nameLocations":["1148:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1148:9:9"},"nodeType":"ModifierInvocation","src":"1148:9:9"}],"name":"recoverETH","nameLocation":"1126:10:9","nodeType":"FunctionDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"1136:2:9"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"1158:0:9"},"scope":1832,"src":"1117:106:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1833,"src":"250:975:9","usedErrors":[13,18,159,164,169,178,183,188],"usedEvents":[24,811,820]}],"src":"39:1186:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f831926e6d7fd7ce81b3a6172a30c7923449c9b680f7cd0c23a68fc679da2a464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x831926E6D7FD7CE81B3A6172A30C7923449C9B680F7CD0C23A68FC679DA2A464 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"803:8956:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;803:8956:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f831926e6d7fd7ce81b3a6172a30c7923449c9b680f7cd0c23a68fc679da2a464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x831926E6D7FD7CE81B3A6172A30C7923449C9B680F7CD0C23A68FC679DA2A464 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"803:8956:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]}},\"version\":1}"}},"contracts/AirdropMerkle.sol":{"AirdropMerkle":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"},{"internalType":"address[]","name":"addresses","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"claimer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensClaimed","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimableAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAirdropAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1628":{"entryPoint":null,"id":1628,"parameterSlots":4,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":426,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":506,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":748,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":556,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":604,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":998,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":976,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":534,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4023:10","nodeType":"YulBlock","src":"0:4023:10","statements":[{"nativeSrc":"6:3:10","nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nativeSrc":"74:117:10","nodeType":"YulBlock","src":"74:117:10","statements":[{"nativeSrc":"84:22:10","nodeType":"YulAssignment","src":"84:22:10","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:10","nodeType":"YulIdentifier","src":"99:6:10"}],"functionName":{"name":"mload","nativeSrc":"93:5:10","nodeType":"YulIdentifier","src":"93:5:10"},"nativeSrc":"93:13:10","nodeType":"YulFunctionCall","src":"93:13:10"},"variableNames":[{"name":"value","nativeSrc":"84:5:10","nodeType":"YulIdentifier","src":"84:5:10"}]},{"body":{"nativeSrc":"169:16:10","nodeType":"YulBlock","src":"169:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:10","nodeType":"YulLiteral","src":"178:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:10","nodeType":"YulLiteral","src":"181:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:10","nodeType":"YulIdentifier","src":"171:6:10"},"nativeSrc":"171:12:10","nodeType":"YulFunctionCall","src":"171:12:10"},"nativeSrc":"171:12:10","nodeType":"YulExpressionStatement","src":"171:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:10","nodeType":"YulIdentifier","src":"128:5:10"},{"arguments":[{"name":"value","nativeSrc":"139:5:10","nodeType":"YulIdentifier","src":"139:5:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:10","nodeType":"YulLiteral","src":"154:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:10","nodeType":"YulLiteral","src":"159:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:10","nodeType":"YulIdentifier","src":"150:3:10"},"nativeSrc":"150:11:10","nodeType":"YulFunctionCall","src":"150:11:10"},{"kind":"number","nativeSrc":"163:1:10","nodeType":"YulLiteral","src":"163:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:10","nodeType":"YulIdentifier","src":"146:3:10"},"nativeSrc":"146:19:10","nodeType":"YulFunctionCall","src":"146:19:10"}],"functionName":{"name":"and","nativeSrc":"135:3:10","nodeType":"YulIdentifier","src":"135:3:10"},"nativeSrc":"135:31:10","nodeType":"YulFunctionCall","src":"135:31:10"}],"functionName":{"name":"eq","nativeSrc":"125:2:10","nodeType":"YulIdentifier","src":"125:2:10"},"nativeSrc":"125:42:10","nodeType":"YulFunctionCall","src":"125:42:10"}],"functionName":{"name":"iszero","nativeSrc":"118:6:10","nodeType":"YulIdentifier","src":"118:6:10"},"nativeSrc":"118:50:10","nodeType":"YulFunctionCall","src":"118:50:10"},"nativeSrc":"115:70:10","nodeType":"YulIf","src":"115:70:10"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:10","nodeType":"YulTypedName","src":"53:6:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:10","nodeType":"YulTypedName","src":"64:5:10","type":""}],"src":"14:177:10"},{"body":{"nativeSrc":"228:95:10","nodeType":"YulBlock","src":"228:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"245:1:10","nodeType":"YulLiteral","src":"245:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"252:3:10","nodeType":"YulLiteral","src":"252:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"257:10:10","nodeType":"YulLiteral","src":"257:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"248:3:10","nodeType":"YulIdentifier","src":"248:3:10"},"nativeSrc":"248:20:10","nodeType":"YulFunctionCall","src":"248:20:10"}],"functionName":{"name":"mstore","nativeSrc":"238:6:10","nodeType":"YulIdentifier","src":"238:6:10"},"nativeSrc":"238:31:10","nodeType":"YulFunctionCall","src":"238:31:10"},"nativeSrc":"238:31:10","nodeType":"YulExpressionStatement","src":"238:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"285:1:10","nodeType":"YulLiteral","src":"285:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"288:4:10","nodeType":"YulLiteral","src":"288:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"278:6:10","nodeType":"YulIdentifier","src":"278:6:10"},"nativeSrc":"278:15:10","nodeType":"YulFunctionCall","src":"278:15:10"},"nativeSrc":"278:15:10","nodeType":"YulExpressionStatement","src":"278:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"309:1:10","nodeType":"YulLiteral","src":"309:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"312:4:10","nodeType":"YulLiteral","src":"312:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"302:6:10","nodeType":"YulIdentifier","src":"302:6:10"},"nativeSrc":"302:15:10","nodeType":"YulFunctionCall","src":"302:15:10"},"nativeSrc":"302:15:10","nodeType":"YulExpressionStatement","src":"302:15:10"}]},"name":"panic_error_0x41","nativeSrc":"196:127:10","nodeType":"YulFunctionDefinition","src":"196:127:10"},{"body":{"nativeSrc":"373:230:10","nodeType":"YulBlock","src":"373:230:10","statements":[{"nativeSrc":"383:19:10","nodeType":"YulAssignment","src":"383:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"399:2:10","nodeType":"YulLiteral","src":"399:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"393:5:10","nodeType":"YulIdentifier","src":"393:5:10"},"nativeSrc":"393:9:10","nodeType":"YulFunctionCall","src":"393:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"383:6:10","nodeType":"YulIdentifier","src":"383:6:10"}]},{"nativeSrc":"411:58:10","nodeType":"YulVariableDeclaration","src":"411:58:10","value":{"arguments":[{"name":"memPtr","nativeSrc":"433:6:10","nodeType":"YulIdentifier","src":"433:6:10"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"449:4:10","nodeType":"YulIdentifier","src":"449:4:10"},{"kind":"number","nativeSrc":"455:2:10","nodeType":"YulLiteral","src":"455:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"445:3:10","nodeType":"YulIdentifier","src":"445:3:10"},"nativeSrc":"445:13:10","nodeType":"YulFunctionCall","src":"445:13:10"},{"arguments":[{"kind":"number","nativeSrc":"464:2:10","nodeType":"YulLiteral","src":"464:2:10","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"460:3:10","nodeType":"YulIdentifier","src":"460:3:10"},"nativeSrc":"460:7:10","nodeType":"YulFunctionCall","src":"460:7:10"}],"functionName":{"name":"and","nativeSrc":"441:3:10","nodeType":"YulIdentifier","src":"441:3:10"},"nativeSrc":"441:27:10","nodeType":"YulFunctionCall","src":"441:27:10"}],"functionName":{"name":"add","nativeSrc":"429:3:10","nodeType":"YulIdentifier","src":"429:3:10"},"nativeSrc":"429:40:10","nodeType":"YulFunctionCall","src":"429:40:10"},"variables":[{"name":"newFreePtr","nativeSrc":"415:10:10","nodeType":"YulTypedName","src":"415:10:10","type":""}]},{"body":{"nativeSrc":"544:22:10","nodeType":"YulBlock","src":"544:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"546:16:10","nodeType":"YulIdentifier","src":"546:16:10"},"nativeSrc":"546:18:10","nodeType":"YulFunctionCall","src":"546:18:10"},"nativeSrc":"546:18:10","nodeType":"YulExpressionStatement","src":"546:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"487:10:10","nodeType":"YulIdentifier","src":"487:10:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"507:2:10","nodeType":"YulLiteral","src":"507:2:10","type":"","value":"64"},{"kind":"number","nativeSrc":"511:1:10","nodeType":"YulLiteral","src":"511:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"503:3:10","nodeType":"YulIdentifier","src":"503:3:10"},"nativeSrc":"503:10:10","nodeType":"YulFunctionCall","src":"503:10:10"},{"kind":"number","nativeSrc":"515:1:10","nodeType":"YulLiteral","src":"515:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"499:3:10","nodeType":"YulIdentifier","src":"499:3:10"},"nativeSrc":"499:18:10","nodeType":"YulFunctionCall","src":"499:18:10"}],"functionName":{"name":"gt","nativeSrc":"484:2:10","nodeType":"YulIdentifier","src":"484:2:10"},"nativeSrc":"484:34:10","nodeType":"YulFunctionCall","src":"484:34:10"},{"arguments":[{"name":"newFreePtr","nativeSrc":"523:10:10","nodeType":"YulIdentifier","src":"523:10:10"},{"name":"memPtr","nativeSrc":"535:6:10","nodeType":"YulIdentifier","src":"535:6:10"}],"functionName":{"name":"lt","nativeSrc":"520:2:10","nodeType":"YulIdentifier","src":"520:2:10"},"nativeSrc":"520:22:10","nodeType":"YulFunctionCall","src":"520:22:10"}],"functionName":{"name":"or","nativeSrc":"481:2:10","nodeType":"YulIdentifier","src":"481:2:10"},"nativeSrc":"481:62:10","nodeType":"YulFunctionCall","src":"481:62:10"},"nativeSrc":"478:88:10","nodeType":"YulIf","src":"478:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"582:2:10","nodeType":"YulLiteral","src":"582:2:10","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"586:10:10","nodeType":"YulIdentifier","src":"586:10:10"}],"functionName":{"name":"mstore","nativeSrc":"575:6:10","nodeType":"YulIdentifier","src":"575:6:10"},"nativeSrc":"575:22:10","nodeType":"YulFunctionCall","src":"575:22:10"},"nativeSrc":"575:22:10","nodeType":"YulExpressionStatement","src":"575:22:10"}]},"name":"allocate_memory","nativeSrc":"328:275:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"353:4:10","nodeType":"YulTypedName","src":"353:4:10","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"362:6:10","nodeType":"YulTypedName","src":"362:6:10","type":""}],"src":"328:275:10"},{"body":{"nativeSrc":"677:114:10","nodeType":"YulBlock","src":"677:114:10","statements":[{"body":{"nativeSrc":"721:22:10","nodeType":"YulBlock","src":"721:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"723:16:10","nodeType":"YulIdentifier","src":"723:16:10"},"nativeSrc":"723:18:10","nodeType":"YulFunctionCall","src":"723:18:10"},"nativeSrc":"723:18:10","nodeType":"YulExpressionStatement","src":"723:18:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"693:6:10","nodeType":"YulIdentifier","src":"693:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"709:2:10","nodeType":"YulLiteral","src":"709:2:10","type":"","value":"64"},{"kind":"number","nativeSrc":"713:1:10","nodeType":"YulLiteral","src":"713:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"705:3:10","nodeType":"YulIdentifier","src":"705:3:10"},"nativeSrc":"705:10:10","nodeType":"YulFunctionCall","src":"705:10:10"},{"kind":"number","nativeSrc":"717:1:10","nodeType":"YulLiteral","src":"717:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"701:3:10","nodeType":"YulIdentifier","src":"701:3:10"},"nativeSrc":"701:18:10","nodeType":"YulFunctionCall","src":"701:18:10"}],"functionName":{"name":"gt","nativeSrc":"690:2:10","nodeType":"YulIdentifier","src":"690:2:10"},"nativeSrc":"690:30:10","nodeType":"YulFunctionCall","src":"690:30:10"},"nativeSrc":"687:56:10","nodeType":"YulIf","src":"687:56:10"},{"nativeSrc":"752:33:10","nodeType":"YulAssignment","src":"752:33:10","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"768:1:10","nodeType":"YulLiteral","src":"768:1:10","type":"","value":"5"},{"name":"length","nativeSrc":"771:6:10","nodeType":"YulIdentifier","src":"771:6:10"}],"functionName":{"name":"shl","nativeSrc":"764:3:10","nodeType":"YulIdentifier","src":"764:3:10"},"nativeSrc":"764:14:10","nodeType":"YulFunctionCall","src":"764:14:10"},{"kind":"number","nativeSrc":"780:4:10","nodeType":"YulLiteral","src":"780:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"760:3:10","nodeType":"YulIdentifier","src":"760:3:10"},"nativeSrc":"760:25:10","nodeType":"YulFunctionCall","src":"760:25:10"},"variableNames":[{"name":"size","nativeSrc":"752:4:10","nodeType":"YulIdentifier","src":"752:4:10"}]}]},"name":"array_allocation_size_array_address_dyn","nativeSrc":"608:183:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"657:6:10","nodeType":"YulTypedName","src":"657:6:10","type":""}],"returnVariables":[{"name":"size","nativeSrc":"668:4:10","nodeType":"YulTypedName","src":"668:4:10","type":""}],"src":"608:183:10"},{"body":{"nativeSrc":"871:591:10","nodeType":"YulBlock","src":"871:591:10","statements":[{"body":{"nativeSrc":"920:16:10","nodeType":"YulBlock","src":"920:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"929:1:10","nodeType":"YulLiteral","src":"929:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"932:1:10","nodeType":"YulLiteral","src":"932:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"922:6:10","nodeType":"YulIdentifier","src":"922:6:10"},"nativeSrc":"922:12:10","nodeType":"YulFunctionCall","src":"922:12:10"},"nativeSrc":"922:12:10","nodeType":"YulExpressionStatement","src":"922:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"899:6:10","nodeType":"YulIdentifier","src":"899:6:10"},{"kind":"number","nativeSrc":"907:4:10","nodeType":"YulLiteral","src":"907:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"895:3:10","nodeType":"YulIdentifier","src":"895:3:10"},"nativeSrc":"895:17:10","nodeType":"YulFunctionCall","src":"895:17:10"},{"name":"end","nativeSrc":"914:3:10","nodeType":"YulIdentifier","src":"914:3:10"}],"functionName":{"name":"slt","nativeSrc":"891:3:10","nodeType":"YulIdentifier","src":"891:3:10"},"nativeSrc":"891:27:10","nodeType":"YulFunctionCall","src":"891:27:10"}],"functionName":{"name":"iszero","nativeSrc":"884:6:10","nodeType":"YulIdentifier","src":"884:6:10"},"nativeSrc":"884:35:10","nodeType":"YulFunctionCall","src":"884:35:10"},"nativeSrc":"881:55:10","nodeType":"YulIf","src":"881:55:10"},{"nativeSrc":"945:27:10","nodeType":"YulVariableDeclaration","src":"945:27:10","value":{"arguments":[{"name":"offset","nativeSrc":"965:6:10","nodeType":"YulIdentifier","src":"965:6:10"}],"functionName":{"name":"mload","nativeSrc":"959:5:10","nodeType":"YulIdentifier","src":"959:5:10"},"nativeSrc":"959:13:10","nodeType":"YulFunctionCall","src":"959:13:10"},"variables":[{"name":"length","nativeSrc":"949:6:10","nodeType":"YulTypedName","src":"949:6:10","type":""}]},{"nativeSrc":"981:75:10","nodeType":"YulVariableDeclaration","src":"981:75:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1048:6:10","nodeType":"YulIdentifier","src":"1048:6:10"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"1008:39:10","nodeType":"YulIdentifier","src":"1008:39:10"},"nativeSrc":"1008:47:10","nodeType":"YulFunctionCall","src":"1008:47:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"992:15:10","nodeType":"YulIdentifier","src":"992:15:10"},"nativeSrc":"992:64:10","nodeType":"YulFunctionCall","src":"992:64:10"},"variables":[{"name":"dst","nativeSrc":"985:3:10","nodeType":"YulTypedName","src":"985:3:10","type":""}]},{"nativeSrc":"1065:18:10","nodeType":"YulVariableDeclaration","src":"1065:18:10","value":{"name":"dst","nativeSrc":"1080:3:10","nodeType":"YulIdentifier","src":"1080:3:10"},"variables":[{"name":"array_1","nativeSrc":"1069:7:10","nodeType":"YulTypedName","src":"1069:7:10","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"1099:3:10","nodeType":"YulIdentifier","src":"1099:3:10"},{"name":"length","nativeSrc":"1104:6:10","nodeType":"YulIdentifier","src":"1104:6:10"}],"functionName":{"name":"mstore","nativeSrc":"1092:6:10","nodeType":"YulIdentifier","src":"1092:6:10"},"nativeSrc":"1092:19:10","nodeType":"YulFunctionCall","src":"1092:19:10"},"nativeSrc":"1092:19:10","nodeType":"YulExpressionStatement","src":"1092:19:10"},{"nativeSrc":"1120:21:10","nodeType":"YulAssignment","src":"1120:21:10","value":{"arguments":[{"name":"dst","nativeSrc":"1131:3:10","nodeType":"YulIdentifier","src":"1131:3:10"},{"kind":"number","nativeSrc":"1136:4:10","nodeType":"YulLiteral","src":"1136:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1127:3:10","nodeType":"YulIdentifier","src":"1127:3:10"},"nativeSrc":"1127:14:10","nodeType":"YulFunctionCall","src":"1127:14:10"},"variableNames":[{"name":"dst","nativeSrc":"1120:3:10","nodeType":"YulIdentifier","src":"1120:3:10"}]},{"nativeSrc":"1150:52:10","nodeType":"YulVariableDeclaration","src":"1150:52:10","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1172:6:10","nodeType":"YulIdentifier","src":"1172:6:10"},{"arguments":[{"kind":"number","nativeSrc":"1184:1:10","nodeType":"YulLiteral","src":"1184:1:10","type":"","value":"5"},{"name":"length","nativeSrc":"1187:6:10","nodeType":"YulIdentifier","src":"1187:6:10"}],"functionName":{"name":"shl","nativeSrc":"1180:3:10","nodeType":"YulIdentifier","src":"1180:3:10"},"nativeSrc":"1180:14:10","nodeType":"YulFunctionCall","src":"1180:14:10"}],"functionName":{"name":"add","nativeSrc":"1168:3:10","nodeType":"YulIdentifier","src":"1168:3:10"},"nativeSrc":"1168:27:10","nodeType":"YulFunctionCall","src":"1168:27:10"},{"kind":"number","nativeSrc":"1197:4:10","nodeType":"YulLiteral","src":"1197:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1164:3:10","nodeType":"YulIdentifier","src":"1164:3:10"},"nativeSrc":"1164:38:10","nodeType":"YulFunctionCall","src":"1164:38:10"},"variables":[{"name":"srcEnd","nativeSrc":"1154:6:10","nodeType":"YulTypedName","src":"1154:6:10","type":""}]},{"body":{"nativeSrc":"1230:16:10","nodeType":"YulBlock","src":"1230:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1239:1:10","nodeType":"YulLiteral","src":"1239:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1242:1:10","nodeType":"YulLiteral","src":"1242:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1232:6:10","nodeType":"YulIdentifier","src":"1232:6:10"},"nativeSrc":"1232:12:10","nodeType":"YulFunctionCall","src":"1232:12:10"},"nativeSrc":"1232:12:10","nodeType":"YulExpressionStatement","src":"1232:12:10"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"1217:6:10","nodeType":"YulIdentifier","src":"1217:6:10"},{"name":"end","nativeSrc":"1225:3:10","nodeType":"YulIdentifier","src":"1225:3:10"}],"functionName":{"name":"gt","nativeSrc":"1214:2:10","nodeType":"YulIdentifier","src":"1214:2:10"},"nativeSrc":"1214:15:10","nodeType":"YulFunctionCall","src":"1214:15:10"},"nativeSrc":"1211:35:10","nodeType":"YulIf","src":"1211:35:10"},{"nativeSrc":"1255:28:10","nodeType":"YulVariableDeclaration","src":"1255:28:10","value":{"arguments":[{"name":"offset","nativeSrc":"1270:6:10","nodeType":"YulIdentifier","src":"1270:6:10"},{"kind":"number","nativeSrc":"1278:4:10","nodeType":"YulLiteral","src":"1278:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1266:3:10","nodeType":"YulIdentifier","src":"1266:3:10"},"nativeSrc":"1266:17:10","nodeType":"YulFunctionCall","src":"1266:17:10"},"variables":[{"name":"src","nativeSrc":"1259:3:10","nodeType":"YulTypedName","src":"1259:3:10","type":""}]},{"body":{"nativeSrc":"1350:81:10","nodeType":"YulBlock","src":"1350:81:10","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"1371:3:10","nodeType":"YulIdentifier","src":"1371:3:10"},{"arguments":[{"name":"src","nativeSrc":"1382:3:10","nodeType":"YulIdentifier","src":"1382:3:10"}],"functionName":{"name":"mload","nativeSrc":"1376:5:10","nodeType":"YulIdentifier","src":"1376:5:10"},"nativeSrc":"1376:10:10","nodeType":"YulFunctionCall","src":"1376:10:10"}],"functionName":{"name":"mstore","nativeSrc":"1364:6:10","nodeType":"YulIdentifier","src":"1364:6:10"},"nativeSrc":"1364:23:10","nodeType":"YulFunctionCall","src":"1364:23:10"},"nativeSrc":"1364:23:10","nodeType":"YulExpressionStatement","src":"1364:23:10"},{"nativeSrc":"1400:21:10","nodeType":"YulAssignment","src":"1400:21:10","value":{"arguments":[{"name":"dst","nativeSrc":"1411:3:10","nodeType":"YulIdentifier","src":"1411:3:10"},{"kind":"number","nativeSrc":"1416:4:10","nodeType":"YulLiteral","src":"1416:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1407:3:10","nodeType":"YulIdentifier","src":"1407:3:10"},"nativeSrc":"1407:14:10","nodeType":"YulFunctionCall","src":"1407:14:10"},"variableNames":[{"name":"dst","nativeSrc":"1400:3:10","nodeType":"YulIdentifier","src":"1400:3:10"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"1303:3:10","nodeType":"YulIdentifier","src":"1303:3:10"},{"name":"srcEnd","nativeSrc":"1308:6:10","nodeType":"YulIdentifier","src":"1308:6:10"}],"functionName":{"name":"lt","nativeSrc":"1300:2:10","nodeType":"YulIdentifier","src":"1300:2:10"},"nativeSrc":"1300:15:10","nodeType":"YulFunctionCall","src":"1300:15:10"},"nativeSrc":"1292:139:10","nodeType":"YulForLoop","post":{"nativeSrc":"1316:25:10","nodeType":"YulBlock","src":"1316:25:10","statements":[{"nativeSrc":"1318:21:10","nodeType":"YulAssignment","src":"1318:21:10","value":{"arguments":[{"name":"src","nativeSrc":"1329:3:10","nodeType":"YulIdentifier","src":"1329:3:10"},{"kind":"number","nativeSrc":"1334:4:10","nodeType":"YulLiteral","src":"1334:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1325:3:10","nodeType":"YulIdentifier","src":"1325:3:10"},"nativeSrc":"1325:14:10","nodeType":"YulFunctionCall","src":"1325:14:10"},"variableNames":[{"name":"src","nativeSrc":"1318:3:10","nodeType":"YulIdentifier","src":"1318:3:10"}]}]},"pre":{"nativeSrc":"1296:3:10","nodeType":"YulBlock","src":"1296:3:10","statements":[]},"src":"1292:139:10"},{"nativeSrc":"1440:16:10","nodeType":"YulAssignment","src":"1440:16:10","value":{"name":"array_1","nativeSrc":"1449:7:10","nodeType":"YulIdentifier","src":"1449:7:10"},"variableNames":[{"name":"array","nativeSrc":"1440:5:10","nodeType":"YulIdentifier","src":"1440:5:10"}]}]},"name":"abi_decode_array_uint256_dyn_fromMemory","nativeSrc":"796:666:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"845:6:10","nodeType":"YulTypedName","src":"845:6:10","type":""},{"name":"end","nativeSrc":"853:3:10","nodeType":"YulTypedName","src":"853:3:10","type":""}],"returnVariables":[{"name":"array","nativeSrc":"861:5:10","nodeType":"YulTypedName","src":"861:5:10","type":""}],"src":"796:666:10"},{"body":{"nativeSrc":"1649:1111:10","nodeType":"YulBlock","src":"1649:1111:10","statements":[{"body":{"nativeSrc":"1696:16:10","nodeType":"YulBlock","src":"1696:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1705:1:10","nodeType":"YulLiteral","src":"1705:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1708:1:10","nodeType":"YulLiteral","src":"1708:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1698:6:10","nodeType":"YulIdentifier","src":"1698:6:10"},"nativeSrc":"1698:12:10","nodeType":"YulFunctionCall","src":"1698:12:10"},"nativeSrc":"1698:12:10","nodeType":"YulExpressionStatement","src":"1698:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1670:7:10","nodeType":"YulIdentifier","src":"1670:7:10"},{"name":"headStart","nativeSrc":"1679:9:10","nodeType":"YulIdentifier","src":"1679:9:10"}],"functionName":{"name":"sub","nativeSrc":"1666:3:10","nodeType":"YulIdentifier","src":"1666:3:10"},"nativeSrc":"1666:23:10","nodeType":"YulFunctionCall","src":"1666:23:10"},{"kind":"number","nativeSrc":"1691:3:10","nodeType":"YulLiteral","src":"1691:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1662:3:10","nodeType":"YulIdentifier","src":"1662:3:10"},"nativeSrc":"1662:33:10","nodeType":"YulFunctionCall","src":"1662:33:10"},"nativeSrc":"1659:53:10","nodeType":"YulIf","src":"1659:53:10"},{"nativeSrc":"1721:50:10","nodeType":"YulAssignment","src":"1721:50:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1761:9:10","nodeType":"YulIdentifier","src":"1761:9:10"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"1731:29:10","nodeType":"YulIdentifier","src":"1731:29:10"},"nativeSrc":"1731:40:10","nodeType":"YulFunctionCall","src":"1731:40:10"},"variableNames":[{"name":"value0","nativeSrc":"1721:6:10","nodeType":"YulIdentifier","src":"1721:6:10"}]},{"nativeSrc":"1780:35:10","nodeType":"YulAssignment","src":"1780:35:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1800:9:10","nodeType":"YulIdentifier","src":"1800:9:10"},{"kind":"number","nativeSrc":"1811:2:10","nodeType":"YulLiteral","src":"1811:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1796:3:10","nodeType":"YulIdentifier","src":"1796:3:10"},"nativeSrc":"1796:18:10","nodeType":"YulFunctionCall","src":"1796:18:10"}],"functionName":{"name":"mload","nativeSrc":"1790:5:10","nodeType":"YulIdentifier","src":"1790:5:10"},"nativeSrc":"1790:25:10","nodeType":"YulFunctionCall","src":"1790:25:10"},"variableNames":[{"name":"value1","nativeSrc":"1780:6:10","nodeType":"YulIdentifier","src":"1780:6:10"}]},{"nativeSrc":"1824:39:10","nodeType":"YulVariableDeclaration","src":"1824:39:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1848:9:10","nodeType":"YulIdentifier","src":"1848:9:10"},{"kind":"number","nativeSrc":"1859:2:10","nodeType":"YulLiteral","src":"1859:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1844:3:10","nodeType":"YulIdentifier","src":"1844:3:10"},"nativeSrc":"1844:18:10","nodeType":"YulFunctionCall","src":"1844:18:10"}],"functionName":{"name":"mload","nativeSrc":"1838:5:10","nodeType":"YulIdentifier","src":"1838:5:10"},"nativeSrc":"1838:25:10","nodeType":"YulFunctionCall","src":"1838:25:10"},"variables":[{"name":"offset","nativeSrc":"1828:6:10","nodeType":"YulTypedName","src":"1828:6:10","type":""}]},{"body":{"nativeSrc":"1906:16:10","nodeType":"YulBlock","src":"1906:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1915:1:10","nodeType":"YulLiteral","src":"1915:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1918:1:10","nodeType":"YulLiteral","src":"1918:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1908:6:10","nodeType":"YulIdentifier","src":"1908:6:10"},"nativeSrc":"1908:12:10","nodeType":"YulFunctionCall","src":"1908:12:10"},"nativeSrc":"1908:12:10","nodeType":"YulExpressionStatement","src":"1908:12:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1878:6:10","nodeType":"YulIdentifier","src":"1878:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1894:2:10","nodeType":"YulLiteral","src":"1894:2:10","type":"","value":"64"},{"kind":"number","nativeSrc":"1898:1:10","nodeType":"YulLiteral","src":"1898:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1890:3:10","nodeType":"YulIdentifier","src":"1890:3:10"},"nativeSrc":"1890:10:10","nodeType":"YulFunctionCall","src":"1890:10:10"},{"kind":"number","nativeSrc":"1902:1:10","nodeType":"YulLiteral","src":"1902:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1886:3:10","nodeType":"YulIdentifier","src":"1886:3:10"},"nativeSrc":"1886:18:10","nodeType":"YulFunctionCall","src":"1886:18:10"}],"functionName":{"name":"gt","nativeSrc":"1875:2:10","nodeType":"YulIdentifier","src":"1875:2:10"},"nativeSrc":"1875:30:10","nodeType":"YulFunctionCall","src":"1875:30:10"},"nativeSrc":"1872:50:10","nodeType":"YulIf","src":"1872:50:10"},{"nativeSrc":"1931:32:10","nodeType":"YulVariableDeclaration","src":"1931:32:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1945:9:10","nodeType":"YulIdentifier","src":"1945:9:10"},{"name":"offset","nativeSrc":"1956:6:10","nodeType":"YulIdentifier","src":"1956:6:10"}],"functionName":{"name":"add","nativeSrc":"1941:3:10","nodeType":"YulIdentifier","src":"1941:3:10"},"nativeSrc":"1941:22:10","nodeType":"YulFunctionCall","src":"1941:22:10"},"variables":[{"name":"_1","nativeSrc":"1935:2:10","nodeType":"YulTypedName","src":"1935:2:10","type":""}]},{"body":{"nativeSrc":"2011:16:10","nodeType":"YulBlock","src":"2011:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2020:1:10","nodeType":"YulLiteral","src":"2020:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2023:1:10","nodeType":"YulLiteral","src":"2023:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2013:6:10","nodeType":"YulIdentifier","src":"2013:6:10"},"nativeSrc":"2013:12:10","nodeType":"YulFunctionCall","src":"2013:12:10"},"nativeSrc":"2013:12:10","nodeType":"YulExpressionStatement","src":"2013:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1990:2:10","nodeType":"YulIdentifier","src":"1990:2:10"},{"kind":"number","nativeSrc":"1994:4:10","nodeType":"YulLiteral","src":"1994:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1986:3:10","nodeType":"YulIdentifier","src":"1986:3:10"},"nativeSrc":"1986:13:10","nodeType":"YulFunctionCall","src":"1986:13:10"},{"name":"dataEnd","nativeSrc":"2001:7:10","nodeType":"YulIdentifier","src":"2001:7:10"}],"functionName":{"name":"slt","nativeSrc":"1982:3:10","nodeType":"YulIdentifier","src":"1982:3:10"},"nativeSrc":"1982:27:10","nodeType":"YulFunctionCall","src":"1982:27:10"}],"functionName":{"name":"iszero","nativeSrc":"1975:6:10","nodeType":"YulIdentifier","src":"1975:6:10"},"nativeSrc":"1975:35:10","nodeType":"YulFunctionCall","src":"1975:35:10"},"nativeSrc":"1972:55:10","nodeType":"YulIf","src":"1972:55:10"},{"nativeSrc":"2036:23:10","nodeType":"YulVariableDeclaration","src":"2036:23:10","value":{"arguments":[{"name":"_1","nativeSrc":"2056:2:10","nodeType":"YulIdentifier","src":"2056:2:10"}],"functionName":{"name":"mload","nativeSrc":"2050:5:10","nodeType":"YulIdentifier","src":"2050:5:10"},"nativeSrc":"2050:9:10","nodeType":"YulFunctionCall","src":"2050:9:10"},"variables":[{"name":"length","nativeSrc":"2040:6:10","nodeType":"YulTypedName","src":"2040:6:10","type":""}]},{"nativeSrc":"2068:75:10","nodeType":"YulVariableDeclaration","src":"2068:75:10","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2135:6:10","nodeType":"YulIdentifier","src":"2135:6:10"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"2095:39:10","nodeType":"YulIdentifier","src":"2095:39:10"},"nativeSrc":"2095:47:10","nodeType":"YulFunctionCall","src":"2095:47:10"}],"functionName":{"name":"allocate_memory","nativeSrc":"2079:15:10","nodeType":"YulIdentifier","src":"2079:15:10"},"nativeSrc":"2079:64:10","nodeType":"YulFunctionCall","src":"2079:64:10"},"variables":[{"name":"dst","nativeSrc":"2072:3:10","nodeType":"YulTypedName","src":"2072:3:10","type":""}]},{"nativeSrc":"2152:16:10","nodeType":"YulVariableDeclaration","src":"2152:16:10","value":{"name":"dst","nativeSrc":"2165:3:10","nodeType":"YulIdentifier","src":"2165:3:10"},"variables":[{"name":"array","nativeSrc":"2156:5:10","nodeType":"YulTypedName","src":"2156:5:10","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2184:3:10","nodeType":"YulIdentifier","src":"2184:3:10"},{"name":"length","nativeSrc":"2189:6:10","nodeType":"YulIdentifier","src":"2189:6:10"}],"functionName":{"name":"mstore","nativeSrc":"2177:6:10","nodeType":"YulIdentifier","src":"2177:6:10"},"nativeSrc":"2177:19:10","nodeType":"YulFunctionCall","src":"2177:19:10"},"nativeSrc":"2177:19:10","nodeType":"YulExpressionStatement","src":"2177:19:10"},{"nativeSrc":"2205:19:10","nodeType":"YulAssignment","src":"2205:19:10","value":{"arguments":[{"name":"dst","nativeSrc":"2216:3:10","nodeType":"YulIdentifier","src":"2216:3:10"},{"kind":"number","nativeSrc":"2221:2:10","nodeType":"YulLiteral","src":"2221:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2212:3:10","nodeType":"YulIdentifier","src":"2212:3:10"},"nativeSrc":"2212:12:10","nodeType":"YulFunctionCall","src":"2212:12:10"},"variableNames":[{"name":"dst","nativeSrc":"2205:3:10","nodeType":"YulIdentifier","src":"2205:3:10"}]},{"nativeSrc":"2233:46:10","nodeType":"YulVariableDeclaration","src":"2233:46:10","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"2255:2:10","nodeType":"YulIdentifier","src":"2255:2:10"},{"arguments":[{"kind":"number","nativeSrc":"2263:1:10","nodeType":"YulLiteral","src":"2263:1:10","type":"","value":"5"},{"name":"length","nativeSrc":"2266:6:10","nodeType":"YulIdentifier","src":"2266:6:10"}],"functionName":{"name":"shl","nativeSrc":"2259:3:10","nodeType":"YulIdentifier","src":"2259:3:10"},"nativeSrc":"2259:14:10","nodeType":"YulFunctionCall","src":"2259:14:10"}],"functionName":{"name":"add","nativeSrc":"2251:3:10","nodeType":"YulIdentifier","src":"2251:3:10"},"nativeSrc":"2251:23:10","nodeType":"YulFunctionCall","src":"2251:23:10"},{"kind":"number","nativeSrc":"2276:2:10","nodeType":"YulLiteral","src":"2276:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2247:3:10","nodeType":"YulIdentifier","src":"2247:3:10"},"nativeSrc":"2247:32:10","nodeType":"YulFunctionCall","src":"2247:32:10"},"variables":[{"name":"srcEnd","nativeSrc":"2237:6:10","nodeType":"YulTypedName","src":"2237:6:10","type":""}]},{"body":{"nativeSrc":"2311:16:10","nodeType":"YulBlock","src":"2311:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2320:1:10","nodeType":"YulLiteral","src":"2320:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2323:1:10","nodeType":"YulLiteral","src":"2323:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2313:6:10","nodeType":"YulIdentifier","src":"2313:6:10"},"nativeSrc":"2313:12:10","nodeType":"YulFunctionCall","src":"2313:12:10"},"nativeSrc":"2313:12:10","nodeType":"YulExpressionStatement","src":"2313:12:10"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2294:6:10","nodeType":"YulIdentifier","src":"2294:6:10"},{"name":"dataEnd","nativeSrc":"2302:7:10","nodeType":"YulIdentifier","src":"2302:7:10"}],"functionName":{"name":"gt","nativeSrc":"2291:2:10","nodeType":"YulIdentifier","src":"2291:2:10"},"nativeSrc":"2291:19:10","nodeType":"YulFunctionCall","src":"2291:19:10"},"nativeSrc":"2288:39:10","nodeType":"YulIf","src":"2288:39:10"},{"nativeSrc":"2336:22:10","nodeType":"YulVariableDeclaration","src":"2336:22:10","value":{"arguments":[{"name":"_1","nativeSrc":"2351:2:10","nodeType":"YulIdentifier","src":"2351:2:10"},{"kind":"number","nativeSrc":"2355:2:10","nodeType":"YulLiteral","src":"2355:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2347:3:10","nodeType":"YulIdentifier","src":"2347:3:10"},"nativeSrc":"2347:11:10","nodeType":"YulFunctionCall","src":"2347:11:10"},"variables":[{"name":"src","nativeSrc":"2340:3:10","nodeType":"YulTypedName","src":"2340:3:10","type":""}]},{"body":{"nativeSrc":"2423:103:10","nodeType":"YulBlock","src":"2423:103:10","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"2444:3:10","nodeType":"YulIdentifier","src":"2444:3:10"},{"arguments":[{"name":"src","nativeSrc":"2479:3:10","nodeType":"YulIdentifier","src":"2479:3:10"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"2449:29:10","nodeType":"YulIdentifier","src":"2449:29:10"},"nativeSrc":"2449:34:10","nodeType":"YulFunctionCall","src":"2449:34:10"}],"functionName":{"name":"mstore","nativeSrc":"2437:6:10","nodeType":"YulIdentifier","src":"2437:6:10"},"nativeSrc":"2437:47:10","nodeType":"YulFunctionCall","src":"2437:47:10"},"nativeSrc":"2437:47:10","nodeType":"YulExpressionStatement","src":"2437:47:10"},{"nativeSrc":"2497:19:10","nodeType":"YulAssignment","src":"2497:19:10","value":{"arguments":[{"name":"dst","nativeSrc":"2508:3:10","nodeType":"YulIdentifier","src":"2508:3:10"},{"kind":"number","nativeSrc":"2513:2:10","nodeType":"YulLiteral","src":"2513:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2504:3:10","nodeType":"YulIdentifier","src":"2504:3:10"},"nativeSrc":"2504:12:10","nodeType":"YulFunctionCall","src":"2504:12:10"},"variableNames":[{"name":"dst","nativeSrc":"2497:3:10","nodeType":"YulIdentifier","src":"2497:3:10"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2378:3:10","nodeType":"YulIdentifier","src":"2378:3:10"},{"name":"srcEnd","nativeSrc":"2383:6:10","nodeType":"YulIdentifier","src":"2383:6:10"}],"functionName":{"name":"lt","nativeSrc":"2375:2:10","nodeType":"YulIdentifier","src":"2375:2:10"},"nativeSrc":"2375:15:10","nodeType":"YulFunctionCall","src":"2375:15:10"},"nativeSrc":"2367:159:10","nodeType":"YulForLoop","post":{"nativeSrc":"2391:23:10","nodeType":"YulBlock","src":"2391:23:10","statements":[{"nativeSrc":"2393:19:10","nodeType":"YulAssignment","src":"2393:19:10","value":{"arguments":[{"name":"src","nativeSrc":"2404:3:10","nodeType":"YulIdentifier","src":"2404:3:10"},{"kind":"number","nativeSrc":"2409:2:10","nodeType":"YulLiteral","src":"2409:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2400:3:10","nodeType":"YulIdentifier","src":"2400:3:10"},"nativeSrc":"2400:12:10","nodeType":"YulFunctionCall","src":"2400:12:10"},"variableNames":[{"name":"src","nativeSrc":"2393:3:10","nodeType":"YulIdentifier","src":"2393:3:10"}]}]},"pre":{"nativeSrc":"2371:3:10","nodeType":"YulBlock","src":"2371:3:10","statements":[]},"src":"2367:159:10"},{"nativeSrc":"2535:15:10","nodeType":"YulAssignment","src":"2535:15:10","value":{"name":"array","nativeSrc":"2545:5:10","nodeType":"YulIdentifier","src":"2545:5:10"},"variableNames":[{"name":"value2","nativeSrc":"2535:6:10","nodeType":"YulIdentifier","src":"2535:6:10"}]},{"nativeSrc":"2559:41:10","nodeType":"YulVariableDeclaration","src":"2559:41:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2585:9:10","nodeType":"YulIdentifier","src":"2585:9:10"},{"kind":"number","nativeSrc":"2596:2:10","nodeType":"YulLiteral","src":"2596:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2581:3:10","nodeType":"YulIdentifier","src":"2581:3:10"},"nativeSrc":"2581:18:10","nodeType":"YulFunctionCall","src":"2581:18:10"}],"functionName":{"name":"mload","nativeSrc":"2575:5:10","nodeType":"YulIdentifier","src":"2575:5:10"},"nativeSrc":"2575:25:10","nodeType":"YulFunctionCall","src":"2575:25:10"},"variables":[{"name":"offset_1","nativeSrc":"2563:8:10","nodeType":"YulTypedName","src":"2563:8:10","type":""}]},{"body":{"nativeSrc":"2645:16:10","nodeType":"YulBlock","src":"2645:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2654:1:10","nodeType":"YulLiteral","src":"2654:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2657:1:10","nodeType":"YulLiteral","src":"2657:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2647:6:10","nodeType":"YulIdentifier","src":"2647:6:10"},"nativeSrc":"2647:12:10","nodeType":"YulFunctionCall","src":"2647:12:10"},"nativeSrc":"2647:12:10","nodeType":"YulExpressionStatement","src":"2647:12:10"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2615:8:10","nodeType":"YulIdentifier","src":"2615:8:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2633:2:10","nodeType":"YulLiteral","src":"2633:2:10","type":"","value":"64"},{"kind":"number","nativeSrc":"2637:1:10","nodeType":"YulLiteral","src":"2637:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2629:3:10","nodeType":"YulIdentifier","src":"2629:3:10"},"nativeSrc":"2629:10:10","nodeType":"YulFunctionCall","src":"2629:10:10"},{"kind":"number","nativeSrc":"2641:1:10","nodeType":"YulLiteral","src":"2641:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2625:3:10","nodeType":"YulIdentifier","src":"2625:3:10"},"nativeSrc":"2625:18:10","nodeType":"YulFunctionCall","src":"2625:18:10"}],"functionName":{"name":"gt","nativeSrc":"2612:2:10","nodeType":"YulIdentifier","src":"2612:2:10"},"nativeSrc":"2612:32:10","nodeType":"YulFunctionCall","src":"2612:32:10"},"nativeSrc":"2609:52:10","nodeType":"YulIf","src":"2609:52:10"},{"nativeSrc":"2670:84:10","nodeType":"YulAssignment","src":"2670:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2724:9:10","nodeType":"YulIdentifier","src":"2724:9:10"},{"name":"offset_1","nativeSrc":"2735:8:10","nodeType":"YulIdentifier","src":"2735:8:10"}],"functionName":{"name":"add","nativeSrc":"2720:3:10","nodeType":"YulIdentifier","src":"2720:3:10"},"nativeSrc":"2720:24:10","nodeType":"YulFunctionCall","src":"2720:24:10"},{"name":"dataEnd","nativeSrc":"2746:7:10","nodeType":"YulIdentifier","src":"2746:7:10"}],"functionName":{"name":"abi_decode_array_uint256_dyn_fromMemory","nativeSrc":"2680:39:10","nodeType":"YulIdentifier","src":"2680:39:10"},"nativeSrc":"2680:74:10","nodeType":"YulFunctionCall","src":"2680:74:10"},"variableNames":[{"name":"value3","nativeSrc":"2670:6:10","nodeType":"YulIdentifier","src":"2670:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory","nativeSrc":"1467:1293:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1591:9:10","nodeType":"YulTypedName","src":"1591:9:10","type":""},{"name":"dataEnd","nativeSrc":"1602:7:10","nodeType":"YulTypedName","src":"1602:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1614:6:10","nodeType":"YulTypedName","src":"1614:6:10","type":""},{"name":"value1","nativeSrc":"1622:6:10","nodeType":"YulTypedName","src":"1622:6:10","type":""},{"name":"value2","nativeSrc":"1630:6:10","nodeType":"YulTypedName","src":"1630:6:10","type":""},{"name":"value3","nativeSrc":"1638:6:10","nodeType":"YulTypedName","src":"1638:6:10","type":""}],"src":"1467:1293:10"},{"body":{"nativeSrc":"2866:102:10","nodeType":"YulBlock","src":"2866:102:10","statements":[{"nativeSrc":"2876:26:10","nodeType":"YulAssignment","src":"2876:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2888:9:10","nodeType":"YulIdentifier","src":"2888:9:10"},{"kind":"number","nativeSrc":"2899:2:10","nodeType":"YulLiteral","src":"2899:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2884:3:10","nodeType":"YulIdentifier","src":"2884:3:10"},"nativeSrc":"2884:18:10","nodeType":"YulFunctionCall","src":"2884:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2876:4:10","nodeType":"YulIdentifier","src":"2876:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2918:9:10","nodeType":"YulIdentifier","src":"2918:9:10"},{"arguments":[{"name":"value0","nativeSrc":"2933:6:10","nodeType":"YulIdentifier","src":"2933:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2949:3:10","nodeType":"YulLiteral","src":"2949:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"2954:1:10","nodeType":"YulLiteral","src":"2954:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2945:3:10","nodeType":"YulIdentifier","src":"2945:3:10"},"nativeSrc":"2945:11:10","nodeType":"YulFunctionCall","src":"2945:11:10"},{"kind":"number","nativeSrc":"2958:1:10","nodeType":"YulLiteral","src":"2958:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2941:3:10","nodeType":"YulIdentifier","src":"2941:3:10"},"nativeSrc":"2941:19:10","nodeType":"YulFunctionCall","src":"2941:19:10"}],"functionName":{"name":"and","nativeSrc":"2929:3:10","nodeType":"YulIdentifier","src":"2929:3:10"},"nativeSrc":"2929:32:10","nodeType":"YulFunctionCall","src":"2929:32:10"}],"functionName":{"name":"mstore","nativeSrc":"2911:6:10","nodeType":"YulIdentifier","src":"2911:6:10"},"nativeSrc":"2911:51:10","nodeType":"YulFunctionCall","src":"2911:51:10"},"nativeSrc":"2911:51:10","nodeType":"YulExpressionStatement","src":"2911:51:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2765:203:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2835:9:10","nodeType":"YulTypedName","src":"2835:9:10","type":""},{"name":"value0","nativeSrc":"2846:6:10","nodeType":"YulTypedName","src":"2846:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2857:4:10","nodeType":"YulTypedName","src":"2857:4:10","type":""}],"src":"2765:203:10"},{"body":{"nativeSrc":"3147:169:10","nodeType":"YulBlock","src":"3147:169:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3164:9:10","nodeType":"YulIdentifier","src":"3164:9:10"},{"kind":"number","nativeSrc":"3175:2:10","nodeType":"YulLiteral","src":"3175:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3157:6:10","nodeType":"YulIdentifier","src":"3157:6:10"},"nativeSrc":"3157:21:10","nodeType":"YulFunctionCall","src":"3157:21:10"},"nativeSrc":"3157:21:10","nodeType":"YulExpressionStatement","src":"3157:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3198:9:10","nodeType":"YulIdentifier","src":"3198:9:10"},{"kind":"number","nativeSrc":"3209:2:10","nodeType":"YulLiteral","src":"3209:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3194:3:10","nodeType":"YulIdentifier","src":"3194:3:10"},"nativeSrc":"3194:18:10","nodeType":"YulFunctionCall","src":"3194:18:10"},{"kind":"number","nativeSrc":"3214:2:10","nodeType":"YulLiteral","src":"3214:2:10","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"3187:6:10","nodeType":"YulIdentifier","src":"3187:6:10"},"nativeSrc":"3187:30:10","nodeType":"YulFunctionCall","src":"3187:30:10"},"nativeSrc":"3187:30:10","nodeType":"YulExpressionStatement","src":"3187:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3237:9:10","nodeType":"YulIdentifier","src":"3237:9:10"},{"kind":"number","nativeSrc":"3248:2:10","nodeType":"YulLiteral","src":"3248:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3233:3:10","nodeType":"YulIdentifier","src":"3233:3:10"},"nativeSrc":"3233:18:10","nodeType":"YulFunctionCall","src":"3233:18:10"},{"hexValue":"496e76616c6964206d65726b6c6520726f6f74","kind":"string","nativeSrc":"3253:21:10","nodeType":"YulLiteral","src":"3253:21:10","type":"","value":"Invalid merkle root"}],"functionName":{"name":"mstore","nativeSrc":"3226:6:10","nodeType":"YulIdentifier","src":"3226:6:10"},"nativeSrc":"3226:49:10","nodeType":"YulFunctionCall","src":"3226:49:10"},"nativeSrc":"3226:49:10","nodeType":"YulExpressionStatement","src":"3226:49:10"},{"nativeSrc":"3284:26:10","nodeType":"YulAssignment","src":"3284:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3296:9:10","nodeType":"YulIdentifier","src":"3296:9:10"},{"kind":"number","nativeSrc":"3307:2:10","nodeType":"YulLiteral","src":"3307:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3292:3:10","nodeType":"YulIdentifier","src":"3292:3:10"},"nativeSrc":"3292:18:10","nodeType":"YulFunctionCall","src":"3292:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3284:4:10","nodeType":"YulIdentifier","src":"3284:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2973:343:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3124:9:10","nodeType":"YulTypedName","src":"3124:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3138:4:10","nodeType":"YulTypedName","src":"3138:4:10","type":""}],"src":"2973:343:10"},{"body":{"nativeSrc":"3495:167:10","nodeType":"YulBlock","src":"3495:167:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3512:9:10","nodeType":"YulIdentifier","src":"3512:9:10"},{"kind":"number","nativeSrc":"3523:2:10","nodeType":"YulLiteral","src":"3523:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3505:6:10","nodeType":"YulIdentifier","src":"3505:6:10"},"nativeSrc":"3505:21:10","nodeType":"YulFunctionCall","src":"3505:21:10"},"nativeSrc":"3505:21:10","nodeType":"YulExpressionStatement","src":"3505:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3546:9:10","nodeType":"YulIdentifier","src":"3546:9:10"},{"kind":"number","nativeSrc":"3557:2:10","nodeType":"YulLiteral","src":"3557:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3542:3:10","nodeType":"YulIdentifier","src":"3542:3:10"},"nativeSrc":"3542:18:10","nodeType":"YulFunctionCall","src":"3542:18:10"},{"kind":"number","nativeSrc":"3562:2:10","nodeType":"YulLiteral","src":"3562:2:10","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"3535:6:10","nodeType":"YulIdentifier","src":"3535:6:10"},"nativeSrc":"3535:30:10","nodeType":"YulFunctionCall","src":"3535:30:10"},"nativeSrc":"3535:30:10","nodeType":"YulExpressionStatement","src":"3535:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3585:9:10","nodeType":"YulIdentifier","src":"3585:9:10"},{"kind":"number","nativeSrc":"3596:2:10","nodeType":"YulLiteral","src":"3596:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3581:3:10","nodeType":"YulIdentifier","src":"3581:3:10"},"nativeSrc":"3581:18:10","nodeType":"YulFunctionCall","src":"3581:18:10"},{"hexValue":"4d69736d61746368656420617272617973","kind":"string","nativeSrc":"3601:19:10","nodeType":"YulLiteral","src":"3601:19:10","type":"","value":"Mismatched arrays"}],"functionName":{"name":"mstore","nativeSrc":"3574:6:10","nodeType":"YulIdentifier","src":"3574:6:10"},"nativeSrc":"3574:47:10","nodeType":"YulFunctionCall","src":"3574:47:10"},"nativeSrc":"3574:47:10","nodeType":"YulExpressionStatement","src":"3574:47:10"},{"nativeSrc":"3630:26:10","nodeType":"YulAssignment","src":"3630:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3642:9:10","nodeType":"YulIdentifier","src":"3642:9:10"},{"kind":"number","nativeSrc":"3653:2:10","nodeType":"YulLiteral","src":"3653:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3638:3:10","nodeType":"YulIdentifier","src":"3638:3:10"},"nativeSrc":"3638:18:10","nodeType":"YulFunctionCall","src":"3638:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3630:4:10","nodeType":"YulIdentifier","src":"3630:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3321:341:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3472:9:10","nodeType":"YulTypedName","src":"3472:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3486:4:10","nodeType":"YulTypedName","src":"3486:4:10","type":""}],"src":"3321:341:10"},{"body":{"nativeSrc":"3699:95:10","nodeType":"YulBlock","src":"3699:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3716:1:10","nodeType":"YulLiteral","src":"3716:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3723:3:10","nodeType":"YulLiteral","src":"3723:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"3728:10:10","nodeType":"YulLiteral","src":"3728:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3719:3:10","nodeType":"YulIdentifier","src":"3719:3:10"},"nativeSrc":"3719:20:10","nodeType":"YulFunctionCall","src":"3719:20:10"}],"functionName":{"name":"mstore","nativeSrc":"3709:6:10","nodeType":"YulIdentifier","src":"3709:6:10"},"nativeSrc":"3709:31:10","nodeType":"YulFunctionCall","src":"3709:31:10"},"nativeSrc":"3709:31:10","nodeType":"YulExpressionStatement","src":"3709:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3756:1:10","nodeType":"YulLiteral","src":"3756:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"3759:4:10","nodeType":"YulLiteral","src":"3759:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"3749:6:10","nodeType":"YulIdentifier","src":"3749:6:10"},"nativeSrc":"3749:15:10","nodeType":"YulFunctionCall","src":"3749:15:10"},"nativeSrc":"3749:15:10","nodeType":"YulExpressionStatement","src":"3749:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3780:1:10","nodeType":"YulLiteral","src":"3780:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3783:4:10","nodeType":"YulLiteral","src":"3783:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3773:6:10","nodeType":"YulIdentifier","src":"3773:6:10"},"nativeSrc":"3773:15:10","nodeType":"YulFunctionCall","src":"3773:15:10"},"nativeSrc":"3773:15:10","nodeType":"YulExpressionStatement","src":"3773:15:10"}]},"name":"panic_error_0x32","nativeSrc":"3667:127:10","nodeType":"YulFunctionDefinition","src":"3667:127:10"},{"body":{"nativeSrc":"3847:174:10","nodeType":"YulBlock","src":"3847:174:10","statements":[{"nativeSrc":"3857:16:10","nodeType":"YulAssignment","src":"3857:16:10","value":{"arguments":[{"name":"x","nativeSrc":"3868:1:10","nodeType":"YulIdentifier","src":"3868:1:10"},{"name":"y","nativeSrc":"3871:1:10","nodeType":"YulIdentifier","src":"3871:1:10"}],"functionName":{"name":"add","nativeSrc":"3864:3:10","nodeType":"YulIdentifier","src":"3864:3:10"},"nativeSrc":"3864:9:10","nodeType":"YulFunctionCall","src":"3864:9:10"},"variableNames":[{"name":"sum","nativeSrc":"3857:3:10","nodeType":"YulIdentifier","src":"3857:3:10"}]},{"body":{"nativeSrc":"3904:111:10","nodeType":"YulBlock","src":"3904:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3925:1:10","nodeType":"YulLiteral","src":"3925:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3932:3:10","nodeType":"YulLiteral","src":"3932:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"3937:10:10","nodeType":"YulLiteral","src":"3937:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3928:3:10","nodeType":"YulIdentifier","src":"3928:3:10"},"nativeSrc":"3928:20:10","nodeType":"YulFunctionCall","src":"3928:20:10"}],"functionName":{"name":"mstore","nativeSrc":"3918:6:10","nodeType":"YulIdentifier","src":"3918:6:10"},"nativeSrc":"3918:31:10","nodeType":"YulFunctionCall","src":"3918:31:10"},"nativeSrc":"3918:31:10","nodeType":"YulExpressionStatement","src":"3918:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3969:1:10","nodeType":"YulLiteral","src":"3969:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"3972:4:10","nodeType":"YulLiteral","src":"3972:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3962:6:10","nodeType":"YulIdentifier","src":"3962:6:10"},"nativeSrc":"3962:15:10","nodeType":"YulFunctionCall","src":"3962:15:10"},"nativeSrc":"3962:15:10","nodeType":"YulExpressionStatement","src":"3962:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3997:1:10","nodeType":"YulLiteral","src":"3997:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"4000:4:10","nodeType":"YulLiteral","src":"4000:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3990:6:10","nodeType":"YulIdentifier","src":"3990:6:10"},"nativeSrc":"3990:15:10","nodeType":"YulFunctionCall","src":"3990:15:10"},"nativeSrc":"3990:15:10","nodeType":"YulExpressionStatement","src":"3990:15:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3888:1:10","nodeType":"YulIdentifier","src":"3888:1:10"},{"name":"sum","nativeSrc":"3891:3:10","nodeType":"YulIdentifier","src":"3891:3:10"}],"functionName":{"name":"gt","nativeSrc":"3885:2:10","nodeType":"YulIdentifier","src":"3885:2:10"},"nativeSrc":"3885:10:10","nodeType":"YulFunctionCall","src":"3885:10:10"},"nativeSrc":"3882:133:10","nodeType":"YulIf","src":"3882:133:10"}]},"name":"checked_add_t_uint256","nativeSrc":"3799:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3830:1:10","nodeType":"YulTypedName","src":"3830:1:10","type":""},{"name":"y","nativeSrc":"3833:1:10","nodeType":"YulTypedName","src":"3833:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3839:3:10","nodeType":"YulTypedName","src":"3839:3:10","type":""}],"src":"3799:222:10"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(length))\n        let array_1 := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, length)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, 0x20)\n        }\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(length))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 32)\n        let srcEnd := add(add(_1, shl(5, length)), 32)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 32)\n        for { } lt(src, srcEnd) { src := add(src, 32) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, 32)\n        }\n        value2 := array\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid merkle root\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4fa02d1b88050f6a6a5d285d3489cc4bb24e4d1924dee6d5a2f903a871e4e481__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Mismatched arrays\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50604051610ba9380380610ba983398101604081905261002f916102ec565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816101aa565b506001600160a01b038416608052826100ba5760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206d65726b6c6520726f6f7400000000000000000000000000604482015260640161004d565b80518251146100ff5760405162461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b604482015260640161004d565b60018390556000805b835181101561019c57828181518110610123576101236103d0565b602002602001015160036000868481518110610141576101416103d0565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555082818151811061017f5761017f6103d0565b60200260200101518261019291906103e6565b9150600101610108565b506004555061040d92505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461021157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561025457610254610216565b604052919050565b60006001600160401b0382111561027557610275610216565b5060051b60200190565b600082601f83011261029057600080fd5b81516102a361029e8261025c565b61022c565b8082825260208201915060208360051b8601019250858311156102c557600080fd5b602085015b838110156102e25780518352602092830192016102ca565b5095945050505050565b6000806000806080858703121561030257600080fd5b61030b856101fa565b6020860151604087015191955093506001600160401b0381111561032e57600080fd5b8501601f8101871361033f57600080fd5b805161034d61029e8261025c565b8082825260208201915060208360051b85010192508983111561036f57600080fd5b6020840193505b8284101561039857610387846101fa565b825260209384019390910190610376565b6060890151909550925050506001600160401b038111156103b857600080fd5b6103c48782880161027f565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b8082018082111561040757634e487b7160e01b600052601160045260246000fd5b92915050565b60805161077a61042f600039600081816101880152610351015261077a6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012f578063b073f68714610154578063f2fde38b1461015d578063faf7a82614610170578063fc0c546a1461018357600080fd5b80632bc79c12146100a35780632eb4a7ab146100d65780633d13f874146100df578063715018a6146100f457806373b2e80e146100fc575b600080fd5b6100c36100b1366004610664565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c360015481565b6100f26100ed36600461067f565b6101aa565b005b6100f261044d565b61011f61010a366004610664565b60026020526000908152604090205460ff1681565b60405190151581526020016100cd565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cd565b6100c360045481565b6100f261016b366004610664565b610461565b61011f61017e36600461067f565b61049f565b61013c7f000000000000000000000000000000000000000000000000000000000000000081565b6001546101fe5760405162461bcd60e51b815260206004820152601760248201527f41697264726f70206e6f7420696e697469616c697a656400000000000000000060448201526064015b60405180910390fd5b6001600160a01b03841660009081526002602052604090205460ff16156102595760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016101f5565b6001600160a01b03841660009081526003602052604090205483146102b75760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a590818db185a5b48185b5bdd5b9d60621b60448201526064016101f5565b6102c38484848461049f565b61030f5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642070726f6f663a204e6f742077686974656c6973746564000060448201526064016101f5565b6001600160a01b0384811660008181526002602052604090819020805460ff191660011790555163a9059cbb60e01b81526004810191909152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af115801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c0919061070c565b6104045760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016101f5565b836001600160a01b03167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4308460405161043f91815260200190565b60405180910390a250505050565b610455610540565b61045f600061056d565b565b610469610540565b6001600160a01b03811661049357604051631e4fbdf760e01b8152600060048201526024016101f5565b61049c8161056d565b50565b604080516001600160a01b0386166020820152908101849052600090819060600160408051601f19818403018152828252805160209182012090830152016040516020818303038152906040528051906020012090506105368484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506105bd565b9695505050505050565b6000546001600160a01b0316331461045f5760405163118cdaa760e01b81523360048201526024016101f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826105ca85846105d3565b14949350505050565b600081815b845181101561060e57610604828683815181106105f7576105f761072e565b6020026020010151610616565b91506001016105d8565b509392505050565b6000818310610632576000828152602084905260409020610641565b60008381526020839052604090205b9392505050565b80356001600160a01b038116811461065f57600080fd5b919050565b60006020828403121561067657600080fd5b61064182610648565b6000806000806060858703121561069557600080fd5b61069e85610648565b935060208501359250604085013567ffffffffffffffff8111156106c157600080fd5b8501601f810187136106d257600080fd5b803567ffffffffffffffff8111156106e957600080fd5b8760208260051b84010111156106fe57600080fd5b949793965060200194505050565b60006020828403121561071e57600080fd5b8151801515811461064157600080fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b7e3fa30d5f54d00d4f33f246a1d59f239e536e6dd213a601fa3d05317c8634064736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBA9 CODESIZE SUB DUP1 PUSH2 0xBA9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x2EC JUMP JUMPDEST CALLER DUP1 PUSH2 0x56 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F DUP2 PUSH2 0x1AA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x80 MSTORE DUP3 PUSH2 0xBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D65726B6C6520726F6F7400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D69736D61746368656420617272617973 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x1 DUP4 SWAP1 SSTORE PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x19C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x123 JUMPI PUSH2 0x123 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x141 JUMPI PUSH2 0x141 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x17F JUMPI PUSH2 0x17F PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x4 SSTORE POP PUSH2 0x40D SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x254 JUMPI PUSH2 0x254 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x275 JUMPI PUSH2 0x275 PUSH2 0x216 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A3 PUSH2 0x29E DUP3 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2CA JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30B DUP6 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x34D PUSH2 0x29E DUP3 PUSH2 0x25C JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP10 DUP4 GT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x398 JUMPI PUSH2 0x387 DUP5 PUSH2 0x1FA JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x376 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP6 POP SWAP3 POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C4 DUP8 DUP3 DUP9 ADD PUSH2 0x27F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x407 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x77A PUSH2 0x42F PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x188 ADD MSTORE PUSH2 0x351 ADD MSTORE PUSH2 0x77A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB073F687 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xFAF7A826 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BC79C12 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x3D13F874 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x11F PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xC3 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x13C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F70206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A590818DB185A5B48185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x2C3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F663A204E6F742077686974656C69737465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP5 PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x45F PUSH1 0x0 PUSH2 0x56D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x469 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x49C DUP2 PUSH2 0x56D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x536 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x1 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0x5BD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5CA DUP6 DUP5 PUSH2 0x5D3 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x60E JUMPI PUSH2 0x604 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F7 JUMPI PUSH2 0x5F7 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x616 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x5D8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x632 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x641 DUP3 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69E DUP6 PUSH2 0x648 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xE3 STATICCALL ADDRESS 0xD5 CREATE2 0x4D STOP 0xD4 RETURN EXTCODEHASH 0x24 PUSH11 0x1D59F239E536E6DD213A60 0x1F LOG3 0xD0 MSTORE8 OR 0xC8 PUSH4 0x4064736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"252:2501:8:-:0;;;777:613;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;898:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2911:51:10;2884:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;927:22:8;::::1;;::::0;968:11;960:57:::1;;;::::0;-1:-1:-1;;;960:57:8;;3175:2:10;960:57:8::1;::::0;::::1;3157:21:10::0;3214:2;3194:18;;;3187:30;3253:21;3233:18;;;3226:49;3292:18;;960:57:8::1;2973:343:10::0;960:57:8::1;1056:7;:14;1036:9;:16;:34;1028:64;;;::::0;-1:-1:-1;;;1028:64:8;;3523:2:10;1028:64:8::1;::::0;::::1;3505:21:10::0;3562:2;3542:18;;;3535:30;-1:-1:-1;;;3581:18:10;;;3574:47;3638:18;;1028:64:8::1;3321:341:10::0;1028:64:8::1;1113:10;:24:::0;;;1148:13:::1;::::0;1186:150:::1;1209:9;:16;1205:1;:20;1186:150;;;1280:7;1288:1;1280:10;;;;;;;;:::i;:::-;;;;;;;1247:16;:30;1264:9;1274:1;1264:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;1247:30:8::1;-1:-1:-1::0;;;;;1247:30:8::1;;;;;;;;;;;;:43;;;;1314:7;1322:1;1314:10;;;;;;;;:::i;:::-;;;;;;;1305:19;;;;;:::i;:::-;::::0;-1:-1:-1;1227:3:8::1;;1186:150;;;-1:-1:-1::0;1356:18:8::1;:26:::0;-1:-1:-1;252:2501:8;;-1:-1:-1;;;252:2501:8;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:275;399:2;393:9;464:2;445:13;;-1:-1:-1;;441:27:10;429:40;;-1:-1:-1;;;;;484:34:10;;520:22;;;481:62;478:88;;;546:18;;:::i;:::-;582:2;575:22;328:275;;-1:-1:-1;328:275:10:o;608:183::-;668:4;-1:-1:-1;;;;;690:30:10;;687:56;;;723:18;;:::i;:::-;-1:-1:-1;768:1:10;764:14;780:4;760:25;;608:183::o;796:666::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;965:6;959:13;992:64;1008:47;1048:6;1008:47;:::i;:::-;992:64;:::i;:::-;1080:3;1104:6;1099:3;1092:19;1136:4;1131:3;1127:14;1120:21;;1197:4;1187:6;1184:1;1180:14;1172:6;1168:27;1164:38;1150:52;;1225:3;1217:6;1214:15;1211:35;;;1242:1;1239;1232:12;1211:35;1278:4;1270:6;1266:17;1292:139;1308:6;1303:3;1300:15;1292:139;;;1376:10;;1364:23;;1416:4;1407:14;;;;1325;1292:139;;;-1:-1:-1;1449:7:10;796:666;-1:-1:-1;;;;;796:666:10:o;1467:1293::-;1614:6;1622;1630;1638;1691:3;1679:9;1670:7;1666:23;1662:33;1659:53;;;1708:1;1705;1698:12;1659:53;1731:40;1761:9;1731:40;:::i;:::-;1811:2;1796:18;;1790:25;1859:2;1844:18;;1838:25;1721:50;;-1:-1:-1;1790:25:10;-1:-1:-1;;;;;;1875:30:10;;1872:50;;;1918:1;1915;1908:12;1872:50;1941:22;;1994:4;1986:13;;1982:27;-1:-1:-1;1972:55:10;;2023:1;2020;2013:12;1972:55;2056:2;2050:9;2079:64;2095:47;2135:6;2095:47;:::i;2079:64::-;2165:3;2189:6;2184:3;2177:19;2221:2;2216:3;2212:12;2205:19;;2276:2;2266:6;2263:1;2259:14;2255:2;2251:23;2247:32;2233:46;;2302:7;2294:6;2291:19;2288:39;;;2323:1;2320;2313:12;2288:39;2355:2;2351;2347:11;2336:22;;2367:159;2383:6;2378:3;2375:15;2367:159;;;2449:34;2479:3;2449:34;:::i;:::-;2437:47;;2513:2;2400:12;;;;2504;;;;2367:159;;;2596:2;2581:18;;2575:25;2545:5;;-1:-1:-1;2575:25:10;-1:-1:-1;;;;;;;;2612:32:10;;2609:52;;;2657:1;2654;2647:12;2609:52;2680:74;2746:7;2735:8;2724:9;2720:24;2680:74;:::i;:::-;2670:84;;;1467:1293;;;;;;;:::o;3667:127::-;3728:10;3723:3;3719:20;3716:1;3709:31;3759:4;3756:1;3749:15;3783:4;3780:1;3773:15;3799:222;3864:9;;;3885:10;;;3882:133;;;3937:10;3932:3;3928:20;3925:1;3918:31;3972:4;3969:1;3962:15;4000:4;3997:1;3990:15;3882:133;3799:222;;;;:::o;:::-;252:2501:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1344,"id":84,"parameterSlots":0,"returnSlots":0},"@_efficientHash_1515":{"entryPoint":null,"id":1515,"parameterSlots":2,"returnSlots":1},"@_hashPair_1503":{"entryPoint":1558,"id":1503,"parameterSlots":2,"returnSlots":1},"@_msgSender_961":{"entryPoint":null,"id":961,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1389,"id":146,"parameterSlots":1,"returnSlots":0},"@claim_1731":{"entryPoint":426,"id":1731,"parameterSlots":4,"returnSlots":0},"@claimableAmounts_1536":{"entryPoint":null,"id":1536,"parameterSlots":0,"returnSlots":0},"@hasClaimed_1532":{"entryPoint":null,"id":1532,"parameterSlots":0,"returnSlots":0},"@isWhitelisted_1664":{"entryPoint":1183,"id":1664,"parameterSlots":4,"returnSlots":1},"@merkleRoot_1528":{"entryPoint":null,"id":1528,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@processProof_1067":{"entryPoint":1491,"id":1067,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1101,"id":98,"parameterSlots":0,"returnSlots":0},"@token_1526":{"entryPoint":null,"id":1526,"parameterSlots":0,"returnSlots":0},"@totalAirdropAmount_1538":{"entryPoint":null,"id":1538,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1121,"id":126,"parameterSlots":1,"returnSlots":0},"@verify_1006":{"entryPoint":1469,"id":1006,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":1608,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1636,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":1663,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2174c1737f7cb6c21957e39702561f246cc9bd66d84735975199b1061c55180__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d91c9f8f131c19ac5048986a8b04473e0f524e32284651e09801d68efa145ca2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f51c67bfafd54ff3bd71f5458e2d3bac4ca1c229624798d4a19f981f45d3f26f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":1838,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4757:10","nodeType":"YulBlock","src":"0:4757:10","statements":[{"nativeSrc":"6:3:10","nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nativeSrc":"63:124:10","nodeType":"YulBlock","src":"63:124:10","statements":[{"nativeSrc":"73:29:10","nodeType":"YulAssignment","src":"73:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:10","nodeType":"YulIdentifier","src":"95:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:10","nodeType":"YulIdentifier","src":"82:12:10"},"nativeSrc":"82:20:10","nodeType":"YulFunctionCall","src":"82:20:10"},"variableNames":[{"name":"value","nativeSrc":"73:5:10","nodeType":"YulIdentifier","src":"73:5:10"}]},{"body":{"nativeSrc":"165:16:10","nodeType":"YulBlock","src":"165:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:10","nodeType":"YulLiteral","src":"174:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:10","nodeType":"YulLiteral","src":"177:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:10","nodeType":"YulIdentifier","src":"167:6:10"},"nativeSrc":"167:12:10","nodeType":"YulFunctionCall","src":"167:12:10"},"nativeSrc":"167:12:10","nodeType":"YulExpressionStatement","src":"167:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:10","nodeType":"YulIdentifier","src":"124:5:10"},{"arguments":[{"name":"value","nativeSrc":"135:5:10","nodeType":"YulIdentifier","src":"135:5:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:10","nodeType":"YulLiteral","src":"150:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:10","nodeType":"YulLiteral","src":"155:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:10","nodeType":"YulIdentifier","src":"146:3:10"},"nativeSrc":"146:11:10","nodeType":"YulFunctionCall","src":"146:11:10"},{"kind":"number","nativeSrc":"159:1:10","nodeType":"YulLiteral","src":"159:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:10","nodeType":"YulIdentifier","src":"142:3:10"},"nativeSrc":"142:19:10","nodeType":"YulFunctionCall","src":"142:19:10"}],"functionName":{"name":"and","nativeSrc":"131:3:10","nodeType":"YulIdentifier","src":"131:3:10"},"nativeSrc":"131:31:10","nodeType":"YulFunctionCall","src":"131:31:10"}],"functionName":{"name":"eq","nativeSrc":"121:2:10","nodeType":"YulIdentifier","src":"121:2:10"},"nativeSrc":"121:42:10","nodeType":"YulFunctionCall","src":"121:42:10"}],"functionName":{"name":"iszero","nativeSrc":"114:6:10","nodeType":"YulIdentifier","src":"114:6:10"},"nativeSrc":"114:50:10","nodeType":"YulFunctionCall","src":"114:50:10"},"nativeSrc":"111:70:10","nodeType":"YulIf","src":"111:70:10"}]},"name":"abi_decode_address","nativeSrc":"14:173:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:10","nodeType":"YulTypedName","src":"42:6:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:10","nodeType":"YulTypedName","src":"53:5:10","type":""}],"src":"14:173:10"},{"body":{"nativeSrc":"262:116:10","nodeType":"YulBlock","src":"262:116:10","statements":[{"body":{"nativeSrc":"308:16:10","nodeType":"YulBlock","src":"308:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:10","nodeType":"YulLiteral","src":"317:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:10","nodeType":"YulLiteral","src":"320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:10","nodeType":"YulIdentifier","src":"310:6:10"},"nativeSrc":"310:12:10","nodeType":"YulFunctionCall","src":"310:12:10"},"nativeSrc":"310:12:10","nodeType":"YulExpressionStatement","src":"310:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"283:7:10","nodeType":"YulIdentifier","src":"283:7:10"},{"name":"headStart","nativeSrc":"292:9:10","nodeType":"YulIdentifier","src":"292:9:10"}],"functionName":{"name":"sub","nativeSrc":"279:3:10","nodeType":"YulIdentifier","src":"279:3:10"},"nativeSrc":"279:23:10","nodeType":"YulFunctionCall","src":"279:23:10"},{"kind":"number","nativeSrc":"304:2:10","nodeType":"YulLiteral","src":"304:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"275:3:10","nodeType":"YulIdentifier","src":"275:3:10"},"nativeSrc":"275:32:10","nodeType":"YulFunctionCall","src":"275:32:10"},"nativeSrc":"272:52:10","nodeType":"YulIf","src":"272:52:10"},{"nativeSrc":"333:39:10","nodeType":"YulAssignment","src":"333:39:10","value":{"arguments":[{"name":"headStart","nativeSrc":"362:9:10","nodeType":"YulIdentifier","src":"362:9:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"343:18:10","nodeType":"YulIdentifier","src":"343:18:10"},"nativeSrc":"343:29:10","nodeType":"YulFunctionCall","src":"343:29:10"},"variableNames":[{"name":"value0","nativeSrc":"333:6:10","nodeType":"YulIdentifier","src":"333:6:10"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"192:186:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"228:9:10","nodeType":"YulTypedName","src":"228:9:10","type":""},{"name":"dataEnd","nativeSrc":"239:7:10","nodeType":"YulTypedName","src":"239:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"251:6:10","nodeType":"YulTypedName","src":"251:6:10","type":""}],"src":"192:186:10"},{"body":{"nativeSrc":"484:76:10","nodeType":"YulBlock","src":"484:76:10","statements":[{"nativeSrc":"494:26:10","nodeType":"YulAssignment","src":"494:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"506:9:10","nodeType":"YulIdentifier","src":"506:9:10"},{"kind":"number","nativeSrc":"517:2:10","nodeType":"YulLiteral","src":"517:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"502:3:10","nodeType":"YulIdentifier","src":"502:3:10"},"nativeSrc":"502:18:10","nodeType":"YulFunctionCall","src":"502:18:10"},"variableNames":[{"name":"tail","nativeSrc":"494:4:10","nodeType":"YulIdentifier","src":"494:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"536:9:10","nodeType":"YulIdentifier","src":"536:9:10"},{"name":"value0","nativeSrc":"547:6:10","nodeType":"YulIdentifier","src":"547:6:10"}],"functionName":{"name":"mstore","nativeSrc":"529:6:10","nodeType":"YulIdentifier","src":"529:6:10"},"nativeSrc":"529:25:10","nodeType":"YulFunctionCall","src":"529:25:10"},"nativeSrc":"529:25:10","nodeType":"YulExpressionStatement","src":"529:25:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"383:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"453:9:10","nodeType":"YulTypedName","src":"453:9:10","type":""},{"name":"value0","nativeSrc":"464:6:10","nodeType":"YulTypedName","src":"464:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"475:4:10","nodeType":"YulTypedName","src":"475:4:10","type":""}],"src":"383:177:10"},{"body":{"nativeSrc":"666:76:10","nodeType":"YulBlock","src":"666:76:10","statements":[{"nativeSrc":"676:26:10","nodeType":"YulAssignment","src":"676:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"688:9:10","nodeType":"YulIdentifier","src":"688:9:10"},{"kind":"number","nativeSrc":"699:2:10","nodeType":"YulLiteral","src":"699:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"684:3:10","nodeType":"YulIdentifier","src":"684:3:10"},"nativeSrc":"684:18:10","nodeType":"YulFunctionCall","src":"684:18:10"},"variableNames":[{"name":"tail","nativeSrc":"676:4:10","nodeType":"YulIdentifier","src":"676:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"718:9:10","nodeType":"YulIdentifier","src":"718:9:10"},{"name":"value0","nativeSrc":"729:6:10","nodeType":"YulIdentifier","src":"729:6:10"}],"functionName":{"name":"mstore","nativeSrc":"711:6:10","nodeType":"YulIdentifier","src":"711:6:10"},"nativeSrc":"711:25:10","nodeType":"YulFunctionCall","src":"711:25:10"},"nativeSrc":"711:25:10","nodeType":"YulExpressionStatement","src":"711:25:10"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"565:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"635:9:10","nodeType":"YulTypedName","src":"635:9:10","type":""},{"name":"value0","nativeSrc":"646:6:10","nodeType":"YulTypedName","src":"646:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"657:4:10","nodeType":"YulTypedName","src":"657:4:10","type":""}],"src":"565:177:10"},{"body":{"nativeSrc":"886:613:10","nodeType":"YulBlock","src":"886:613:10","statements":[{"body":{"nativeSrc":"932:16:10","nodeType":"YulBlock","src":"932:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"941:1:10","nodeType":"YulLiteral","src":"941:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"944:1:10","nodeType":"YulLiteral","src":"944:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"934:6:10","nodeType":"YulIdentifier","src":"934:6:10"},"nativeSrc":"934:12:10","nodeType":"YulFunctionCall","src":"934:12:10"},"nativeSrc":"934:12:10","nodeType":"YulExpressionStatement","src":"934:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"907:7:10","nodeType":"YulIdentifier","src":"907:7:10"},{"name":"headStart","nativeSrc":"916:9:10","nodeType":"YulIdentifier","src":"916:9:10"}],"functionName":{"name":"sub","nativeSrc":"903:3:10","nodeType":"YulIdentifier","src":"903:3:10"},"nativeSrc":"903:23:10","nodeType":"YulFunctionCall","src":"903:23:10"},{"kind":"number","nativeSrc":"928:2:10","nodeType":"YulLiteral","src":"928:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"899:3:10","nodeType":"YulIdentifier","src":"899:3:10"},"nativeSrc":"899:32:10","nodeType":"YulFunctionCall","src":"899:32:10"},"nativeSrc":"896:52:10","nodeType":"YulIf","src":"896:52:10"},{"nativeSrc":"957:39:10","nodeType":"YulAssignment","src":"957:39:10","value":{"arguments":[{"name":"headStart","nativeSrc":"986:9:10","nodeType":"YulIdentifier","src":"986:9:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"967:18:10","nodeType":"YulIdentifier","src":"967:18:10"},"nativeSrc":"967:29:10","nodeType":"YulFunctionCall","src":"967:29:10"},"variableNames":[{"name":"value0","nativeSrc":"957:6:10","nodeType":"YulIdentifier","src":"957:6:10"}]},{"nativeSrc":"1005:42:10","nodeType":"YulAssignment","src":"1005:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1032:9:10","nodeType":"YulIdentifier","src":"1032:9:10"},{"kind":"number","nativeSrc":"1043:2:10","nodeType":"YulLiteral","src":"1043:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1028:3:10","nodeType":"YulIdentifier","src":"1028:3:10"},"nativeSrc":"1028:18:10","nodeType":"YulFunctionCall","src":"1028:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"1015:12:10","nodeType":"YulIdentifier","src":"1015:12:10"},"nativeSrc":"1015:32:10","nodeType":"YulFunctionCall","src":"1015:32:10"},"variableNames":[{"name":"value1","nativeSrc":"1005:6:10","nodeType":"YulIdentifier","src":"1005:6:10"}]},{"nativeSrc":"1056:46:10","nodeType":"YulVariableDeclaration","src":"1056:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1087:9:10","nodeType":"YulIdentifier","src":"1087:9:10"},{"kind":"number","nativeSrc":"1098:2:10","nodeType":"YulLiteral","src":"1098:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1083:3:10","nodeType":"YulIdentifier","src":"1083:3:10"},"nativeSrc":"1083:18:10","nodeType":"YulFunctionCall","src":"1083:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"1070:12:10","nodeType":"YulIdentifier","src":"1070:12:10"},"nativeSrc":"1070:32:10","nodeType":"YulFunctionCall","src":"1070:32:10"},"variables":[{"name":"offset","nativeSrc":"1060:6:10","nodeType":"YulTypedName","src":"1060:6:10","type":""}]},{"body":{"nativeSrc":"1145:16:10","nodeType":"YulBlock","src":"1145:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1154:1:10","nodeType":"YulLiteral","src":"1154:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1157:1:10","nodeType":"YulLiteral","src":"1157:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1147:6:10","nodeType":"YulIdentifier","src":"1147:6:10"},"nativeSrc":"1147:12:10","nodeType":"YulFunctionCall","src":"1147:12:10"},"nativeSrc":"1147:12:10","nodeType":"YulExpressionStatement","src":"1147:12:10"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1117:6:10","nodeType":"YulIdentifier","src":"1117:6:10"},{"kind":"number","nativeSrc":"1125:18:10","nodeType":"YulLiteral","src":"1125:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1114:2:10","nodeType":"YulIdentifier","src":"1114:2:10"},"nativeSrc":"1114:30:10","nodeType":"YulFunctionCall","src":"1114:30:10"},"nativeSrc":"1111:50:10","nodeType":"YulIf","src":"1111:50:10"},{"nativeSrc":"1170:32:10","nodeType":"YulVariableDeclaration","src":"1170:32:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1184:9:10","nodeType":"YulIdentifier","src":"1184:9:10"},{"name":"offset","nativeSrc":"1195:6:10","nodeType":"YulIdentifier","src":"1195:6:10"}],"functionName":{"name":"add","nativeSrc":"1180:3:10","nodeType":"YulIdentifier","src":"1180:3:10"},"nativeSrc":"1180:22:10","nodeType":"YulFunctionCall","src":"1180:22:10"},"variables":[{"name":"_1","nativeSrc":"1174:2:10","nodeType":"YulTypedName","src":"1174:2:10","type":""}]},{"body":{"nativeSrc":"1250:16:10","nodeType":"YulBlock","src":"1250:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1259:1:10","nodeType":"YulLiteral","src":"1259:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1262:1:10","nodeType":"YulLiteral","src":"1262:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1252:6:10","nodeType":"YulIdentifier","src":"1252:6:10"},"nativeSrc":"1252:12:10","nodeType":"YulFunctionCall","src":"1252:12:10"},"nativeSrc":"1252:12:10","nodeType":"YulExpressionStatement","src":"1252:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1229:2:10","nodeType":"YulIdentifier","src":"1229:2:10"},{"kind":"number","nativeSrc":"1233:4:10","nodeType":"YulLiteral","src":"1233:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1225:3:10","nodeType":"YulIdentifier","src":"1225:3:10"},"nativeSrc":"1225:13:10","nodeType":"YulFunctionCall","src":"1225:13:10"},{"name":"dataEnd","nativeSrc":"1240:7:10","nodeType":"YulIdentifier","src":"1240:7:10"}],"functionName":{"name":"slt","nativeSrc":"1221:3:10","nodeType":"YulIdentifier","src":"1221:3:10"},"nativeSrc":"1221:27:10","nodeType":"YulFunctionCall","src":"1221:27:10"}],"functionName":{"name":"iszero","nativeSrc":"1214:6:10","nodeType":"YulIdentifier","src":"1214:6:10"},"nativeSrc":"1214:35:10","nodeType":"YulFunctionCall","src":"1214:35:10"},"nativeSrc":"1211:55:10","nodeType":"YulIf","src":"1211:55:10"},{"nativeSrc":"1275:30:10","nodeType":"YulVariableDeclaration","src":"1275:30:10","value":{"arguments":[{"name":"_1","nativeSrc":"1302:2:10","nodeType":"YulIdentifier","src":"1302:2:10"}],"functionName":{"name":"calldataload","nativeSrc":"1289:12:10","nodeType":"YulIdentifier","src":"1289:12:10"},"nativeSrc":"1289:16:10","nodeType":"YulFunctionCall","src":"1289:16:10"},"variables":[{"name":"length","nativeSrc":"1279:6:10","nodeType":"YulTypedName","src":"1279:6:10","type":""}]},{"body":{"nativeSrc":"1348:16:10","nodeType":"YulBlock","src":"1348:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1357:1:10","nodeType":"YulLiteral","src":"1357:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1360:1:10","nodeType":"YulLiteral","src":"1360:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1350:6:10","nodeType":"YulIdentifier","src":"1350:6:10"},"nativeSrc":"1350:12:10","nodeType":"YulFunctionCall","src":"1350:12:10"},"nativeSrc":"1350:12:10","nodeType":"YulExpressionStatement","src":"1350:12:10"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1320:6:10","nodeType":"YulIdentifier","src":"1320:6:10"},{"kind":"number","nativeSrc":"1328:18:10","nodeType":"YulLiteral","src":"1328:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1317:2:10","nodeType":"YulIdentifier","src":"1317:2:10"},"nativeSrc":"1317:30:10","nodeType":"YulFunctionCall","src":"1317:30:10"},"nativeSrc":"1314:50:10","nodeType":"YulIf","src":"1314:50:10"},{"body":{"nativeSrc":"1422:16:10","nodeType":"YulBlock","src":"1422:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1431:1:10","nodeType":"YulLiteral","src":"1431:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1434:1:10","nodeType":"YulLiteral","src":"1434:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1424:6:10","nodeType":"YulIdentifier","src":"1424:6:10"},"nativeSrc":"1424:12:10","nodeType":"YulFunctionCall","src":"1424:12:10"},"nativeSrc":"1424:12:10","nodeType":"YulExpressionStatement","src":"1424:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1387:2:10","nodeType":"YulIdentifier","src":"1387:2:10"},{"arguments":[{"kind":"number","nativeSrc":"1395:1:10","nodeType":"YulLiteral","src":"1395:1:10","type":"","value":"5"},{"name":"length","nativeSrc":"1398:6:10","nodeType":"YulIdentifier","src":"1398:6:10"}],"functionName":{"name":"shl","nativeSrc":"1391:3:10","nodeType":"YulIdentifier","src":"1391:3:10"},"nativeSrc":"1391:14:10","nodeType":"YulFunctionCall","src":"1391:14:10"}],"functionName":{"name":"add","nativeSrc":"1383:3:10","nodeType":"YulIdentifier","src":"1383:3:10"},"nativeSrc":"1383:23:10","nodeType":"YulFunctionCall","src":"1383:23:10"},{"kind":"number","nativeSrc":"1408:2:10","nodeType":"YulLiteral","src":"1408:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1379:3:10","nodeType":"YulIdentifier","src":"1379:3:10"},"nativeSrc":"1379:32:10","nodeType":"YulFunctionCall","src":"1379:32:10"},{"name":"dataEnd","nativeSrc":"1413:7:10","nodeType":"YulIdentifier","src":"1413:7:10"}],"functionName":{"name":"gt","nativeSrc":"1376:2:10","nodeType":"YulIdentifier","src":"1376:2:10"},"nativeSrc":"1376:45:10","nodeType":"YulFunctionCall","src":"1376:45:10"},"nativeSrc":"1373:65:10","nodeType":"YulIf","src":"1373:65:10"},{"nativeSrc":"1447:21:10","nodeType":"YulAssignment","src":"1447:21:10","value":{"arguments":[{"name":"_1","nativeSrc":"1461:2:10","nodeType":"YulIdentifier","src":"1461:2:10"},{"kind":"number","nativeSrc":"1465:2:10","nodeType":"YulLiteral","src":"1465:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1457:3:10","nodeType":"YulIdentifier","src":"1457:3:10"},"nativeSrc":"1457:11:10","nodeType":"YulFunctionCall","src":"1457:11:10"},"variableNames":[{"name":"value2","nativeSrc":"1447:6:10","nodeType":"YulIdentifier","src":"1447:6:10"}]},{"nativeSrc":"1477:16:10","nodeType":"YulAssignment","src":"1477:16:10","value":{"name":"length","nativeSrc":"1487:6:10","nodeType":"YulIdentifier","src":"1487:6:10"},"variableNames":[{"name":"value3","nativeSrc":"1477:6:10","nodeType":"YulIdentifier","src":"1477:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"747:752:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"828:9:10","nodeType":"YulTypedName","src":"828:9:10","type":""},{"name":"dataEnd","nativeSrc":"839:7:10","nodeType":"YulTypedName","src":"839:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"851:6:10","nodeType":"YulTypedName","src":"851:6:10","type":""},{"name":"value1","nativeSrc":"859:6:10","nodeType":"YulTypedName","src":"859:6:10","type":""},{"name":"value2","nativeSrc":"867:6:10","nodeType":"YulTypedName","src":"867:6:10","type":""},{"name":"value3","nativeSrc":"875:6:10","nodeType":"YulTypedName","src":"875:6:10","type":""}],"src":"747:752:10"},{"body":{"nativeSrc":"1599:92:10","nodeType":"YulBlock","src":"1599:92:10","statements":[{"nativeSrc":"1609:26:10","nodeType":"YulAssignment","src":"1609:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1621:9:10","nodeType":"YulIdentifier","src":"1621:9:10"},{"kind":"number","nativeSrc":"1632:2:10","nodeType":"YulLiteral","src":"1632:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1617:3:10","nodeType":"YulIdentifier","src":"1617:3:10"},"nativeSrc":"1617:18:10","nodeType":"YulFunctionCall","src":"1617:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1609:4:10","nodeType":"YulIdentifier","src":"1609:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1651:9:10","nodeType":"YulIdentifier","src":"1651:9:10"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1676:6:10","nodeType":"YulIdentifier","src":"1676:6:10"}],"functionName":{"name":"iszero","nativeSrc":"1669:6:10","nodeType":"YulIdentifier","src":"1669:6:10"},"nativeSrc":"1669:14:10","nodeType":"YulFunctionCall","src":"1669:14:10"}],"functionName":{"name":"iszero","nativeSrc":"1662:6:10","nodeType":"YulIdentifier","src":"1662:6:10"},"nativeSrc":"1662:22:10","nodeType":"YulFunctionCall","src":"1662:22:10"}],"functionName":{"name":"mstore","nativeSrc":"1644:6:10","nodeType":"YulIdentifier","src":"1644:6:10"},"nativeSrc":"1644:41:10","nodeType":"YulFunctionCall","src":"1644:41:10"},"nativeSrc":"1644:41:10","nodeType":"YulExpressionStatement","src":"1644:41:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1504:187:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1568:9:10","nodeType":"YulTypedName","src":"1568:9:10","type":""},{"name":"value0","nativeSrc":"1579:6:10","nodeType":"YulTypedName","src":"1579:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1590:4:10","nodeType":"YulTypedName","src":"1590:4:10","type":""}],"src":"1504:187:10"},{"body":{"nativeSrc":"1797:102:10","nodeType":"YulBlock","src":"1797:102:10","statements":[{"nativeSrc":"1807:26:10","nodeType":"YulAssignment","src":"1807:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1819:9:10","nodeType":"YulIdentifier","src":"1819:9:10"},{"kind":"number","nativeSrc":"1830:2:10","nodeType":"YulLiteral","src":"1830:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1815:3:10","nodeType":"YulIdentifier","src":"1815:3:10"},"nativeSrc":"1815:18:10","nodeType":"YulFunctionCall","src":"1815:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1807:4:10","nodeType":"YulIdentifier","src":"1807:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1849:9:10","nodeType":"YulIdentifier","src":"1849:9:10"},{"arguments":[{"name":"value0","nativeSrc":"1864:6:10","nodeType":"YulIdentifier","src":"1864:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1880:3:10","nodeType":"YulLiteral","src":"1880:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"1885:1:10","nodeType":"YulLiteral","src":"1885:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1876:3:10","nodeType":"YulIdentifier","src":"1876:3:10"},"nativeSrc":"1876:11:10","nodeType":"YulFunctionCall","src":"1876:11:10"},{"kind":"number","nativeSrc":"1889:1:10","nodeType":"YulLiteral","src":"1889:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1872:3:10","nodeType":"YulIdentifier","src":"1872:3:10"},"nativeSrc":"1872:19:10","nodeType":"YulFunctionCall","src":"1872:19:10"}],"functionName":{"name":"and","nativeSrc":"1860:3:10","nodeType":"YulIdentifier","src":"1860:3:10"},"nativeSrc":"1860:32:10","nodeType":"YulFunctionCall","src":"1860:32:10"}],"functionName":{"name":"mstore","nativeSrc":"1842:6:10","nodeType":"YulIdentifier","src":"1842:6:10"},"nativeSrc":"1842:51:10","nodeType":"YulFunctionCall","src":"1842:51:10"},"nativeSrc":"1842:51:10","nodeType":"YulExpressionStatement","src":"1842:51:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1696:203:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1766:9:10","nodeType":"YulTypedName","src":"1766:9:10","type":""},{"name":"value0","nativeSrc":"1777:6:10","nodeType":"YulTypedName","src":"1777:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1788:4:10","nodeType":"YulTypedName","src":"1788:4:10","type":""}],"src":"1696:203:10"},{"body":{"nativeSrc":"2019:102:10","nodeType":"YulBlock","src":"2019:102:10","statements":[{"nativeSrc":"2029:26:10","nodeType":"YulAssignment","src":"2029:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2041:9:10","nodeType":"YulIdentifier","src":"2041:9:10"},{"kind":"number","nativeSrc":"2052:2:10","nodeType":"YulLiteral","src":"2052:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2037:3:10","nodeType":"YulIdentifier","src":"2037:3:10"},"nativeSrc":"2037:18:10","nodeType":"YulFunctionCall","src":"2037:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2029:4:10","nodeType":"YulIdentifier","src":"2029:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2071:9:10","nodeType":"YulIdentifier","src":"2071:9:10"},{"arguments":[{"name":"value0","nativeSrc":"2086:6:10","nodeType":"YulIdentifier","src":"2086:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2102:3:10","nodeType":"YulLiteral","src":"2102:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"2107:1:10","nodeType":"YulLiteral","src":"2107:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2098:3:10","nodeType":"YulIdentifier","src":"2098:3:10"},"nativeSrc":"2098:11:10","nodeType":"YulFunctionCall","src":"2098:11:10"},{"kind":"number","nativeSrc":"2111:1:10","nodeType":"YulLiteral","src":"2111:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2094:3:10","nodeType":"YulIdentifier","src":"2094:3:10"},"nativeSrc":"2094:19:10","nodeType":"YulFunctionCall","src":"2094:19:10"}],"functionName":{"name":"and","nativeSrc":"2082:3:10","nodeType":"YulIdentifier","src":"2082:3:10"},"nativeSrc":"2082:32:10","nodeType":"YulFunctionCall","src":"2082:32:10"}],"functionName":{"name":"mstore","nativeSrc":"2064:6:10","nodeType":"YulIdentifier","src":"2064:6:10"},"nativeSrc":"2064:51:10","nodeType":"YulFunctionCall","src":"2064:51:10"},"nativeSrc":"2064:51:10","nodeType":"YulExpressionStatement","src":"2064:51:10"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed","nativeSrc":"1904:217:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1988:9:10","nodeType":"YulTypedName","src":"1988:9:10","type":""},{"name":"value0","nativeSrc":"1999:6:10","nodeType":"YulTypedName","src":"1999:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2010:4:10","nodeType":"YulTypedName","src":"2010:4:10","type":""}],"src":"1904:217:10"},{"body":{"nativeSrc":"2300:173:10","nodeType":"YulBlock","src":"2300:173:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2317:9:10","nodeType":"YulIdentifier","src":"2317:9:10"},{"kind":"number","nativeSrc":"2328:2:10","nodeType":"YulLiteral","src":"2328:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2310:6:10","nodeType":"YulIdentifier","src":"2310:6:10"},"nativeSrc":"2310:21:10","nodeType":"YulFunctionCall","src":"2310:21:10"},"nativeSrc":"2310:21:10","nodeType":"YulExpressionStatement","src":"2310:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2351:9:10","nodeType":"YulIdentifier","src":"2351:9:10"},{"kind":"number","nativeSrc":"2362:2:10","nodeType":"YulLiteral","src":"2362:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2347:3:10","nodeType":"YulIdentifier","src":"2347:3:10"},"nativeSrc":"2347:18:10","nodeType":"YulFunctionCall","src":"2347:18:10"},{"kind":"number","nativeSrc":"2367:2:10","nodeType":"YulLiteral","src":"2367:2:10","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"2340:6:10","nodeType":"YulIdentifier","src":"2340:6:10"},"nativeSrc":"2340:30:10","nodeType":"YulFunctionCall","src":"2340:30:10"},"nativeSrc":"2340:30:10","nodeType":"YulExpressionStatement","src":"2340:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2390:9:10","nodeType":"YulIdentifier","src":"2390:9:10"},{"kind":"number","nativeSrc":"2401:2:10","nodeType":"YulLiteral","src":"2401:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2386:3:10","nodeType":"YulIdentifier","src":"2386:3:10"},"nativeSrc":"2386:18:10","nodeType":"YulFunctionCall","src":"2386:18:10"},{"hexValue":"41697264726f70206e6f7420696e697469616c697a6564","kind":"string","nativeSrc":"2406:25:10","nodeType":"YulLiteral","src":"2406:25:10","type":"","value":"Airdrop not initialized"}],"functionName":{"name":"mstore","nativeSrc":"2379:6:10","nodeType":"YulIdentifier","src":"2379:6:10"},"nativeSrc":"2379:53:10","nodeType":"YulFunctionCall","src":"2379:53:10"},"nativeSrc":"2379:53:10","nodeType":"YulExpressionStatement","src":"2379:53:10"},{"nativeSrc":"2441:26:10","nodeType":"YulAssignment","src":"2441:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2453:9:10","nodeType":"YulIdentifier","src":"2453:9:10"},{"kind":"number","nativeSrc":"2464:2:10","nodeType":"YulLiteral","src":"2464:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2449:3:10","nodeType":"YulIdentifier","src":"2449:3:10"},"nativeSrc":"2449:18:10","nodeType":"YulFunctionCall","src":"2449:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2441:4:10","nodeType":"YulIdentifier","src":"2441:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_f51c67bfafd54ff3bd71f5458e2d3bac4ca1c229624798d4a19f981f45d3f26f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2126:347:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2277:9:10","nodeType":"YulTypedName","src":"2277:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2291:4:10","nodeType":"YulTypedName","src":"2291:4:10","type":""}],"src":"2126:347:10"},{"body":{"nativeSrc":"2652:165:10","nodeType":"YulBlock","src":"2652:165:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2669:9:10","nodeType":"YulIdentifier","src":"2669:9:10"},{"kind":"number","nativeSrc":"2680:2:10","nodeType":"YulLiteral","src":"2680:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2662:6:10","nodeType":"YulIdentifier","src":"2662:6:10"},"nativeSrc":"2662:21:10","nodeType":"YulFunctionCall","src":"2662:21:10"},"nativeSrc":"2662:21:10","nodeType":"YulExpressionStatement","src":"2662:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2703:9:10","nodeType":"YulIdentifier","src":"2703:9:10"},{"kind":"number","nativeSrc":"2714:2:10","nodeType":"YulLiteral","src":"2714:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2699:3:10","nodeType":"YulIdentifier","src":"2699:3:10"},"nativeSrc":"2699:18:10","nodeType":"YulFunctionCall","src":"2699:18:10"},{"kind":"number","nativeSrc":"2719:2:10","nodeType":"YulLiteral","src":"2719:2:10","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"2692:6:10","nodeType":"YulIdentifier","src":"2692:6:10"},"nativeSrc":"2692:30:10","nodeType":"YulFunctionCall","src":"2692:30:10"},"nativeSrc":"2692:30:10","nodeType":"YulExpressionStatement","src":"2692:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2742:9:10","nodeType":"YulIdentifier","src":"2742:9:10"},{"kind":"number","nativeSrc":"2753:2:10","nodeType":"YulLiteral","src":"2753:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2738:3:10","nodeType":"YulIdentifier","src":"2738:3:10"},"nativeSrc":"2738:18:10","nodeType":"YulFunctionCall","src":"2738:18:10"},{"hexValue":"416c726561647920636c61696d6564","kind":"string","nativeSrc":"2758:17:10","nodeType":"YulLiteral","src":"2758:17:10","type":"","value":"Already claimed"}],"functionName":{"name":"mstore","nativeSrc":"2731:6:10","nodeType":"YulIdentifier","src":"2731:6:10"},"nativeSrc":"2731:45:10","nodeType":"YulFunctionCall","src":"2731:45:10"},"nativeSrc":"2731:45:10","nodeType":"YulExpressionStatement","src":"2731:45:10"},{"nativeSrc":"2785:26:10","nodeType":"YulAssignment","src":"2785:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2797:9:10","nodeType":"YulIdentifier","src":"2797:9:10"},{"kind":"number","nativeSrc":"2808:2:10","nodeType":"YulLiteral","src":"2808:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2793:3:10","nodeType":"YulIdentifier","src":"2793:3:10"},"nativeSrc":"2793:18:10","nodeType":"YulFunctionCall","src":"2793:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2785:4:10","nodeType":"YulIdentifier","src":"2785:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2478:339:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2629:9:10","nodeType":"YulTypedName","src":"2629:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2643:4:10","nodeType":"YulTypedName","src":"2643:4:10","type":""}],"src":"2478:339:10"},{"body":{"nativeSrc":"2996:170:10","nodeType":"YulBlock","src":"2996:170:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3013:9:10","nodeType":"YulIdentifier","src":"3013:9:10"},{"kind":"number","nativeSrc":"3024:2:10","nodeType":"YulLiteral","src":"3024:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3006:6:10","nodeType":"YulIdentifier","src":"3006:6:10"},"nativeSrc":"3006:21:10","nodeType":"YulFunctionCall","src":"3006:21:10"},"nativeSrc":"3006:21:10","nodeType":"YulExpressionStatement","src":"3006:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3047:9:10","nodeType":"YulIdentifier","src":"3047:9:10"},{"kind":"number","nativeSrc":"3058:2:10","nodeType":"YulLiteral","src":"3058:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3043:3:10","nodeType":"YulIdentifier","src":"3043:3:10"},"nativeSrc":"3043:18:10","nodeType":"YulFunctionCall","src":"3043:18:10"},{"kind":"number","nativeSrc":"3063:2:10","nodeType":"YulLiteral","src":"3063:2:10","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"3036:6:10","nodeType":"YulIdentifier","src":"3036:6:10"},"nativeSrc":"3036:30:10","nodeType":"YulFunctionCall","src":"3036:30:10"},"nativeSrc":"3036:30:10","nodeType":"YulExpressionStatement","src":"3036:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3086:9:10","nodeType":"YulIdentifier","src":"3086:9:10"},{"kind":"number","nativeSrc":"3097:2:10","nodeType":"YulLiteral","src":"3097:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3082:3:10","nodeType":"YulIdentifier","src":"3082:3:10"},"nativeSrc":"3082:18:10","nodeType":"YulFunctionCall","src":"3082:18:10"},{"hexValue":"496e76616c696420636c61696d20616d6f756e74","kind":"string","nativeSrc":"3102:22:10","nodeType":"YulLiteral","src":"3102:22:10","type":"","value":"Invalid claim amount"}],"functionName":{"name":"mstore","nativeSrc":"3075:6:10","nodeType":"YulIdentifier","src":"3075:6:10"},"nativeSrc":"3075:50:10","nodeType":"YulFunctionCall","src":"3075:50:10"},"nativeSrc":"3075:50:10","nodeType":"YulExpressionStatement","src":"3075:50:10"},{"nativeSrc":"3134:26:10","nodeType":"YulAssignment","src":"3134:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3146:9:10","nodeType":"YulIdentifier","src":"3146:9:10"},{"kind":"number","nativeSrc":"3157:2:10","nodeType":"YulLiteral","src":"3157:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3142:3:10","nodeType":"YulIdentifier","src":"3142:3:10"},"nativeSrc":"3142:18:10","nodeType":"YulFunctionCall","src":"3142:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3134:4:10","nodeType":"YulIdentifier","src":"3134:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2174c1737f7cb6c21957e39702561f246cc9bd66d84735975199b1061c55180__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2822:344:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2973:9:10","nodeType":"YulTypedName","src":"2973:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2987:4:10","nodeType":"YulTypedName","src":"2987:4:10","type":""}],"src":"2822:344:10"},{"body":{"nativeSrc":"3345:180:10","nodeType":"YulBlock","src":"3345:180:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3362:9:10","nodeType":"YulIdentifier","src":"3362:9:10"},{"kind":"number","nativeSrc":"3373:2:10","nodeType":"YulLiteral","src":"3373:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3355:6:10","nodeType":"YulIdentifier","src":"3355:6:10"},"nativeSrc":"3355:21:10","nodeType":"YulFunctionCall","src":"3355:21:10"},"nativeSrc":"3355:21:10","nodeType":"YulExpressionStatement","src":"3355:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3396:9:10","nodeType":"YulIdentifier","src":"3396:9:10"},{"kind":"number","nativeSrc":"3407:2:10","nodeType":"YulLiteral","src":"3407:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3392:3:10","nodeType":"YulIdentifier","src":"3392:3:10"},"nativeSrc":"3392:18:10","nodeType":"YulFunctionCall","src":"3392:18:10"},{"kind":"number","nativeSrc":"3412:2:10","nodeType":"YulLiteral","src":"3412:2:10","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"3385:6:10","nodeType":"YulIdentifier","src":"3385:6:10"},"nativeSrc":"3385:30:10","nodeType":"YulFunctionCall","src":"3385:30:10"},"nativeSrc":"3385:30:10","nodeType":"YulExpressionStatement","src":"3385:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3435:9:10","nodeType":"YulIdentifier","src":"3435:9:10"},{"kind":"number","nativeSrc":"3446:2:10","nodeType":"YulLiteral","src":"3446:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3431:3:10","nodeType":"YulIdentifier","src":"3431:3:10"},"nativeSrc":"3431:18:10","nodeType":"YulFunctionCall","src":"3431:18:10"},{"hexValue":"496e76616c69642070726f6f663a204e6f742077686974656c6973746564","kind":"string","nativeSrc":"3451:32:10","nodeType":"YulLiteral","src":"3451:32:10","type":"","value":"Invalid proof: Not whitelisted"}],"functionName":{"name":"mstore","nativeSrc":"3424:6:10","nodeType":"YulIdentifier","src":"3424:6:10"},"nativeSrc":"3424:60:10","nodeType":"YulFunctionCall","src":"3424:60:10"},"nativeSrc":"3424:60:10","nodeType":"YulExpressionStatement","src":"3424:60:10"},{"nativeSrc":"3493:26:10","nodeType":"YulAssignment","src":"3493:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3505:9:10","nodeType":"YulIdentifier","src":"3505:9:10"},{"kind":"number","nativeSrc":"3516:2:10","nodeType":"YulLiteral","src":"3516:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3501:3:10","nodeType":"YulIdentifier","src":"3501:3:10"},"nativeSrc":"3501:18:10","nodeType":"YulFunctionCall","src":"3501:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3493:4:10","nodeType":"YulIdentifier","src":"3493:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_d91c9f8f131c19ac5048986a8b04473e0f524e32284651e09801d68efa145ca2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3171:354:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3322:9:10","nodeType":"YulTypedName","src":"3322:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3336:4:10","nodeType":"YulTypedName","src":"3336:4:10","type":""}],"src":"3171:354:10"},{"body":{"nativeSrc":"3659:145:10","nodeType":"YulBlock","src":"3659:145:10","statements":[{"nativeSrc":"3669:26:10","nodeType":"YulAssignment","src":"3669:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3681:9:10","nodeType":"YulIdentifier","src":"3681:9:10"},{"kind":"number","nativeSrc":"3692:2:10","nodeType":"YulLiteral","src":"3692:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3677:3:10","nodeType":"YulIdentifier","src":"3677:3:10"},"nativeSrc":"3677:18:10","nodeType":"YulFunctionCall","src":"3677:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3669:4:10","nodeType":"YulIdentifier","src":"3669:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3711:9:10","nodeType":"YulIdentifier","src":"3711:9:10"},{"arguments":[{"name":"value0","nativeSrc":"3726:6:10","nodeType":"YulIdentifier","src":"3726:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3742:3:10","nodeType":"YulLiteral","src":"3742:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"3747:1:10","nodeType":"YulLiteral","src":"3747:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3738:3:10","nodeType":"YulIdentifier","src":"3738:3:10"},"nativeSrc":"3738:11:10","nodeType":"YulFunctionCall","src":"3738:11:10"},{"kind":"number","nativeSrc":"3751:1:10","nodeType":"YulLiteral","src":"3751:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3734:3:10","nodeType":"YulIdentifier","src":"3734:3:10"},"nativeSrc":"3734:19:10","nodeType":"YulFunctionCall","src":"3734:19:10"}],"functionName":{"name":"and","nativeSrc":"3722:3:10","nodeType":"YulIdentifier","src":"3722:3:10"},"nativeSrc":"3722:32:10","nodeType":"YulFunctionCall","src":"3722:32:10"}],"functionName":{"name":"mstore","nativeSrc":"3704:6:10","nodeType":"YulIdentifier","src":"3704:6:10"},"nativeSrc":"3704:51:10","nodeType":"YulFunctionCall","src":"3704:51:10"},"nativeSrc":"3704:51:10","nodeType":"YulExpressionStatement","src":"3704:51:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3775:9:10","nodeType":"YulIdentifier","src":"3775:9:10"},{"kind":"number","nativeSrc":"3786:2:10","nodeType":"YulLiteral","src":"3786:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3771:3:10","nodeType":"YulIdentifier","src":"3771:3:10"},"nativeSrc":"3771:18:10","nodeType":"YulFunctionCall","src":"3771:18:10"},{"name":"value1","nativeSrc":"3791:6:10","nodeType":"YulIdentifier","src":"3791:6:10"}],"functionName":{"name":"mstore","nativeSrc":"3764:6:10","nodeType":"YulIdentifier","src":"3764:6:10"},"nativeSrc":"3764:34:10","nodeType":"YulFunctionCall","src":"3764:34:10"},"nativeSrc":"3764:34:10","nodeType":"YulExpressionStatement","src":"3764:34:10"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"3530:274:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3620:9:10","nodeType":"YulTypedName","src":"3620:9:10","type":""},{"name":"value1","nativeSrc":"3631:6:10","nodeType":"YulTypedName","src":"3631:6:10","type":""},{"name":"value0","nativeSrc":"3639:6:10","nodeType":"YulTypedName","src":"3639:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3650:4:10","nodeType":"YulTypedName","src":"3650:4:10","type":""}],"src":"3530:274:10"},{"body":{"nativeSrc":"3887:199:10","nodeType":"YulBlock","src":"3887:199:10","statements":[{"body":{"nativeSrc":"3933:16:10","nodeType":"YulBlock","src":"3933:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3942:1:10","nodeType":"YulLiteral","src":"3942:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3945:1:10","nodeType":"YulLiteral","src":"3945:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3935:6:10","nodeType":"YulIdentifier","src":"3935:6:10"},"nativeSrc":"3935:12:10","nodeType":"YulFunctionCall","src":"3935:12:10"},"nativeSrc":"3935:12:10","nodeType":"YulExpressionStatement","src":"3935:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3908:7:10","nodeType":"YulIdentifier","src":"3908:7:10"},{"name":"headStart","nativeSrc":"3917:9:10","nodeType":"YulIdentifier","src":"3917:9:10"}],"functionName":{"name":"sub","nativeSrc":"3904:3:10","nodeType":"YulIdentifier","src":"3904:3:10"},"nativeSrc":"3904:23:10","nodeType":"YulFunctionCall","src":"3904:23:10"},{"kind":"number","nativeSrc":"3929:2:10","nodeType":"YulLiteral","src":"3929:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3900:3:10","nodeType":"YulIdentifier","src":"3900:3:10"},"nativeSrc":"3900:32:10","nodeType":"YulFunctionCall","src":"3900:32:10"},"nativeSrc":"3897:52:10","nodeType":"YulIf","src":"3897:52:10"},{"nativeSrc":"3958:29:10","nodeType":"YulVariableDeclaration","src":"3958:29:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3977:9:10","nodeType":"YulIdentifier","src":"3977:9:10"}],"functionName":{"name":"mload","nativeSrc":"3971:5:10","nodeType":"YulIdentifier","src":"3971:5:10"},"nativeSrc":"3971:16:10","nodeType":"YulFunctionCall","src":"3971:16:10"},"variables":[{"name":"value","nativeSrc":"3962:5:10","nodeType":"YulTypedName","src":"3962:5:10","type":""}]},{"body":{"nativeSrc":"4040:16:10","nodeType":"YulBlock","src":"4040:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4049:1:10","nodeType":"YulLiteral","src":"4049:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"4052:1:10","nodeType":"YulLiteral","src":"4052:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4042:6:10","nodeType":"YulIdentifier","src":"4042:6:10"},"nativeSrc":"4042:12:10","nodeType":"YulFunctionCall","src":"4042:12:10"},"nativeSrc":"4042:12:10","nodeType":"YulExpressionStatement","src":"4042:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4009:5:10","nodeType":"YulIdentifier","src":"4009:5:10"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4030:5:10","nodeType":"YulIdentifier","src":"4030:5:10"}],"functionName":{"name":"iszero","nativeSrc":"4023:6:10","nodeType":"YulIdentifier","src":"4023:6:10"},"nativeSrc":"4023:13:10","nodeType":"YulFunctionCall","src":"4023:13:10"}],"functionName":{"name":"iszero","nativeSrc":"4016:6:10","nodeType":"YulIdentifier","src":"4016:6:10"},"nativeSrc":"4016:21:10","nodeType":"YulFunctionCall","src":"4016:21:10"}],"functionName":{"name":"eq","nativeSrc":"4006:2:10","nodeType":"YulIdentifier","src":"4006:2:10"},"nativeSrc":"4006:32:10","nodeType":"YulFunctionCall","src":"4006:32:10"}],"functionName":{"name":"iszero","nativeSrc":"3999:6:10","nodeType":"YulIdentifier","src":"3999:6:10"},"nativeSrc":"3999:40:10","nodeType":"YulFunctionCall","src":"3999:40:10"},"nativeSrc":"3996:60:10","nodeType":"YulIf","src":"3996:60:10"},{"nativeSrc":"4065:15:10","nodeType":"YulAssignment","src":"4065:15:10","value":{"name":"value","nativeSrc":"4075:5:10","nodeType":"YulIdentifier","src":"4075:5:10"},"variableNames":[{"name":"value0","nativeSrc":"4065:6:10","nodeType":"YulIdentifier","src":"4065:6:10"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"3809:277:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3853:9:10","nodeType":"YulTypedName","src":"3853:9:10","type":""},{"name":"dataEnd","nativeSrc":"3864:7:10","nodeType":"YulTypedName","src":"3864:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3876:6:10","nodeType":"YulTypedName","src":"3876:6:10","type":""}],"src":"3809:277:10"},{"body":{"nativeSrc":"4265:171:10","nodeType":"YulBlock","src":"4265:171:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4282:9:10","nodeType":"YulIdentifier","src":"4282:9:10"},{"kind":"number","nativeSrc":"4293:2:10","nodeType":"YulLiteral","src":"4293:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4275:6:10","nodeType":"YulIdentifier","src":"4275:6:10"},"nativeSrc":"4275:21:10","nodeType":"YulFunctionCall","src":"4275:21:10"},"nativeSrc":"4275:21:10","nodeType":"YulExpressionStatement","src":"4275:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4316:9:10","nodeType":"YulIdentifier","src":"4316:9:10"},{"kind":"number","nativeSrc":"4327:2:10","nodeType":"YulLiteral","src":"4327:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4312:3:10","nodeType":"YulIdentifier","src":"4312:3:10"},"nativeSrc":"4312:18:10","nodeType":"YulFunctionCall","src":"4312:18:10"},{"kind":"number","nativeSrc":"4332:2:10","nodeType":"YulLiteral","src":"4332:2:10","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"4305:6:10","nodeType":"YulIdentifier","src":"4305:6:10"},"nativeSrc":"4305:30:10","nodeType":"YulFunctionCall","src":"4305:30:10"},"nativeSrc":"4305:30:10","nodeType":"YulExpressionStatement","src":"4305:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4355:9:10","nodeType":"YulIdentifier","src":"4355:9:10"},{"kind":"number","nativeSrc":"4366:2:10","nodeType":"YulLiteral","src":"4366:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4351:3:10","nodeType":"YulIdentifier","src":"4351:3:10"},"nativeSrc":"4351:18:10","nodeType":"YulFunctionCall","src":"4351:18:10"},{"hexValue":"546f6b656e207472616e73666572206661696c6564","kind":"string","nativeSrc":"4371:23:10","nodeType":"YulLiteral","src":"4371:23:10","type":"","value":"Token transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"4344:6:10","nodeType":"YulIdentifier","src":"4344:6:10"},"nativeSrc":"4344:51:10","nodeType":"YulFunctionCall","src":"4344:51:10"},"nativeSrc":"4344:51:10","nodeType":"YulExpressionStatement","src":"4344:51:10"},{"nativeSrc":"4404:26:10","nodeType":"YulAssignment","src":"4404:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"4416:9:10","nodeType":"YulIdentifier","src":"4416:9:10"},{"kind":"number","nativeSrc":"4427:2:10","nodeType":"YulLiteral","src":"4427:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4412:3:10","nodeType":"YulIdentifier","src":"4412:3:10"},"nativeSrc":"4412:18:10","nodeType":"YulFunctionCall","src":"4412:18:10"},"variableNames":[{"name":"tail","nativeSrc":"4404:4:10","nodeType":"YulIdentifier","src":"4404:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4091:345:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4242:9:10","nodeType":"YulTypedName","src":"4242:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4256:4:10","nodeType":"YulTypedName","src":"4256:4:10","type":""}],"src":"4091:345:10"},{"body":{"nativeSrc":"4560:63:10","nodeType":"YulBlock","src":"4560:63:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4577:3:10","nodeType":"YulIdentifier","src":"4577:3:10"},{"name":"value0","nativeSrc":"4582:6:10","nodeType":"YulIdentifier","src":"4582:6:10"}],"functionName":{"name":"mstore","nativeSrc":"4570:6:10","nodeType":"YulIdentifier","src":"4570:6:10"},"nativeSrc":"4570:19:10","nodeType":"YulFunctionCall","src":"4570:19:10"},"nativeSrc":"4570:19:10","nodeType":"YulExpressionStatement","src":"4570:19:10"},{"nativeSrc":"4598:19:10","nodeType":"YulAssignment","src":"4598:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"4609:3:10","nodeType":"YulIdentifier","src":"4609:3:10"},{"kind":"number","nativeSrc":"4614:2:10","nodeType":"YulLiteral","src":"4614:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4605:3:10","nodeType":"YulIdentifier","src":"4605:3:10"},"nativeSrc":"4605:12:10","nodeType":"YulFunctionCall","src":"4605:12:10"},"variableNames":[{"name":"end","nativeSrc":"4598:3:10","nodeType":"YulIdentifier","src":"4598:3:10"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"4441:182:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4536:3:10","nodeType":"YulTypedName","src":"4536:3:10","type":""},{"name":"value0","nativeSrc":"4541:6:10","nodeType":"YulTypedName","src":"4541:6:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4552:3:10","nodeType":"YulTypedName","src":"4552:3:10","type":""}],"src":"4441:182:10"},{"body":{"nativeSrc":"4660:95:10","nodeType":"YulBlock","src":"4660:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4677:1:10","nodeType":"YulLiteral","src":"4677:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4684:3:10","nodeType":"YulLiteral","src":"4684:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"4689:10:10","nodeType":"YulLiteral","src":"4689:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4680:3:10","nodeType":"YulIdentifier","src":"4680:3:10"},"nativeSrc":"4680:20:10","nodeType":"YulFunctionCall","src":"4680:20:10"}],"functionName":{"name":"mstore","nativeSrc":"4670:6:10","nodeType":"YulIdentifier","src":"4670:6:10"},"nativeSrc":"4670:31:10","nodeType":"YulFunctionCall","src":"4670:31:10"},"nativeSrc":"4670:31:10","nodeType":"YulExpressionStatement","src":"4670:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4717:1:10","nodeType":"YulLiteral","src":"4717:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"4720:4:10","nodeType":"YulLiteral","src":"4720:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"4710:6:10","nodeType":"YulIdentifier","src":"4710:6:10"},"nativeSrc":"4710:15:10","nodeType":"YulFunctionCall","src":"4710:15:10"},"nativeSrc":"4710:15:10","nodeType":"YulExpressionStatement","src":"4710:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4741:1:10","nodeType":"YulLiteral","src":"4741:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"4744:4:10","nodeType":"YulLiteral","src":"4744:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4734:6:10","nodeType":"YulIdentifier","src":"4734:6:10"},"nativeSrc":"4734:15:10","nodeType":"YulFunctionCall","src":"4734:15:10"},"nativeSrc":"4734:15:10","nodeType":"YulExpressionStatement","src":"4734:15:10"}]},"name":"panic_error_0x32","nativeSrc":"4628:127:10","nodeType":"YulFunctionDefinition","src":"4628:127:10"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_1, 32)\n        value3 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f51c67bfafd54ff3bd71f5458e2d3bac4ca1c229624798d4a19f981f45d3f26f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Airdrop not initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2174c1737f7cb6c21957e39702561f246cc9bd66d84735975199b1061c55180__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid claim amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d91c9f8f131c19ac5048986a8b04473e0f524e32284651e09801d68efa145ca2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Invalid proof: Not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1526":[{"length":32,"start":392},{"length":32,"start":849}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012f578063b073f68714610154578063f2fde38b1461015d578063faf7a82614610170578063fc0c546a1461018357600080fd5b80632bc79c12146100a35780632eb4a7ab146100d65780633d13f874146100df578063715018a6146100f457806373b2e80e146100fc575b600080fd5b6100c36100b1366004610664565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c360015481565b6100f26100ed36600461067f565b6101aa565b005b6100f261044d565b61011f61010a366004610664565b60026020526000908152604090205460ff1681565b60405190151581526020016100cd565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cd565b6100c360045481565b6100f261016b366004610664565b610461565b61011f61017e36600461067f565b61049f565b61013c7f000000000000000000000000000000000000000000000000000000000000000081565b6001546101fe5760405162461bcd60e51b815260206004820152601760248201527f41697264726f70206e6f7420696e697469616c697a656400000000000000000060448201526064015b60405180910390fd5b6001600160a01b03841660009081526002602052604090205460ff16156102595760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016101f5565b6001600160a01b03841660009081526003602052604090205483146102b75760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a590818db185a5b48185b5bdd5b9d60621b60448201526064016101f5565b6102c38484848461049f565b61030f5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642070726f6f663a204e6f742077686974656c6973746564000060448201526064016101f5565b6001600160a01b0384811660008181526002602052604090819020805460ff191660011790555163a9059cbb60e01b81526004810191909152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af115801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c0919061070c565b6104045760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016101f5565b836001600160a01b03167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4308460405161043f91815260200190565b60405180910390a250505050565b610455610540565b61045f600061056d565b565b610469610540565b6001600160a01b03811661049357604051631e4fbdf760e01b8152600060048201526024016101f5565b61049c8161056d565b50565b604080516001600160a01b0386166020820152908101849052600090819060600160408051601f19818403018152828252805160209182012090830152016040516020818303038152906040528051906020012090506105368484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506105bd565b9695505050505050565b6000546001600160a01b0316331461045f5760405163118cdaa760e01b81523360048201526024016101f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826105ca85846105d3565b14949350505050565b600081815b845181101561060e57610604828683815181106105f7576105f761072e565b6020026020010151610616565b91506001016105d8565b509392505050565b6000818310610632576000828152602084905260409020610641565b60008381526020839052604090205b9392505050565b80356001600160a01b038116811461065f57600080fd5b919050565b60006020828403121561067657600080fd5b61064182610648565b6000806000806060858703121561069557600080fd5b61069e85610648565b935060208501359250604085013567ffffffffffffffff8111156106c157600080fd5b8501601f810187136106d257600080fd5b803567ffffffffffffffff8111156106e957600080fd5b8760208260051b84010111156106fe57600080fd5b949793965060200194505050565b60006020828403121561071e57600080fd5b8151801515811461064157600080fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b7e3fa30d5f54d00d4f33f246a1d59f239e536e6dd213a601fa3d05317c8634064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB073F687 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xFAF7A826 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BC79C12 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x3D13F874 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x11F PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xC3 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x13C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F70206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A590818DB185A5B48185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x2C3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x49F JUMP JUMPDEST PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F663A204E6F742077686974656C69737465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP5 PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x45F PUSH1 0x0 PUSH2 0x56D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x469 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x49C DUP2 PUSH2 0x56D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x536 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x1 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0x5BD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5CA DUP6 DUP5 PUSH2 0x5D3 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x60E JUMPI PUSH2 0x604 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F7 JUMPI PUSH2 0x5F7 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x616 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x5D8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x632 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x641 DUP3 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69E DUP6 PUSH2 0x648 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xE3 STATICCALL ADDRESS 0xD5 CREATE2 0x4D STOP 0xD4 RETURN EXTCODEHASH 0x24 PUSH11 0x1D59F239E536E6DD213A60 0x1F LOG3 0xD0 MSTORE8 OR 0xC8 PUSH4 0x4064736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"252:2501:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:10;;;517:2;502:18;537:51:8;;;;;;;;329:25;;;;;;1948:802;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;434:42:8:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1669:14:10;;1662:22;1644:41;;1632:2;1617:18;434:42:8;1504:187:10;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;1860:32:10;;;1842:51;;1830:2;1815:18;1638:85:0;1696:203:10;658:33:8;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;1457:446:8:-;;;;;;:::i;:::-;;:::i;293:29::-;;;;;1948:802;2090:10;;2082:60;;;;-1:-1:-1;;;2082:60:8;;2328:2:10;2082:60:8;;;2310:21:10;2367:2;2347:18;;;2340:30;2406:25;2386:18;;;2379:53;2449:18;;2082:60:8;;;;;;;;;-1:-1:-1;;;;;2162:19:8;;;;;;:10;:19;;;;;;;;2161:20;2153:48;;;;-1:-1:-1;;;2153:48:8;;2680:2:10;2153:48:8;;;2662:21:10;2719:2;2699:18;;;2692:30;-1:-1:-1;;;2738:18:10;;;2731:45;2793:18;;2153:48:8;2478:339:10;2153:48:8;-1:-1:-1;;;;;2230:25:8;;;;;;:16;:25;;;;;;2220:35;;2212:68;;;;-1:-1:-1;;;2212:68:8;;3024:2:10;2212:68:8;;;3006:21:10;3063:2;3043:18;;;3036:30;-1:-1:-1;;;3082:18:10;;;3075:50;3142:18;;2212:68:8;2822:344:10;2212:68:8;2359:43;2373:7;2382:6;2390:11;;2359:13;:43::i;:::-;2337:123;;;;-1:-1:-1;;;2337:123:8;;3373:2:10;2337:123:8;;;3355:21:10;3412:2;3392:18;;;3385:30;3451:32;3431:18;;;3424:60;3501:18;;2337:123:8;3171:354:10;2337:123:8;-1:-1:-1;;;;;2509:19:8;;;;;;;:10;:19;;;;;;;:26;;-1:-1:-1;;2509:26:8;2531:4;2509:26;;;2606:31;-1:-1:-1;;;2606:31:8;;;;;3704:51:10;;;;3771:18;;;3764:34;;;2606:5:8;:14;;;;;;3677:18:10;;2606:31:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2584:102;;;;-1:-1:-1;;;2584:102:8;;4293:2:10;2584:102:8;;;4275:21:10;4332:2;4312:18;;;4305:30;-1:-1:-1;;;4351:18:10;;;4344:51;4412:18;;2584:102:8;4091:345:10;2584:102:8;2726:7;-1:-1:-1;;;;;2712:30:8;;2735:6;2712:30;;;;529:25:10;;517:2;502:18;;383:177;2712:30:8;;;;;;;;1948:802;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1842:51:10::0;1815:18;;2672:31:0::1;1696:203:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1457:446:8:-;1742:27;;;-1:-1:-1;;;;;3722:32:10;;1742:27:8;;;3704:51:10;3771:18;;;3764:34;;;1600:4:8;;;;3677:18:10;;1742:27:8;;;-1:-1:-1;;1742:27:8;;;;;;;;;1732:38;;1742:27;1732:38;;;;1719:52;;;4570:19:10;4605:12;1719:52:8;;;;;;;;;;;;1695:87;;;;;;1680:102;;1846:49;1865:11;;1846:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1878:10:8;;;-1:-1:-1;1890:4:8;;-1:-1:-1;1846:18:8;:49::i;:::-;1839:56;1457:446;-1:-1:-1;;;;;;1457:446:8:o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;1842:51:10;1815:18;;1901:40:0;1696:203:10;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1265:154:7:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:7:o;1967:290::-;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:7;;2106:116;;;-1:-1:-1;2238:12:7;1967:290;-1:-1:-1;;;1967:290:7:o;9229:147::-;9292:7;9322:1;9318;:5;:51;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9318:51;;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9326:20;9311:58;9229:147;-1:-1:-1;;;9229:147:7:o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;747:752::-;851:6;859;867;875;928:2;916:9;907:7;903:23;899:32;896:52;;;944:1;941;934:12;896:52;967:29;986:9;967:29;:::i;:::-;957:39;;1043:2;1032:9;1028:18;1015:32;1005:42;;1098:2;1087:9;1083:18;1070:32;1125:18;1117:6;1114:30;1111:50;;;1157:1;1154;1147:12;1111:50;1180:22;;1233:4;1225:13;;1221:27;-1:-1:-1;1211:55:10;;1262:1;1259;1252:12;1211:55;1302:2;1289:16;1328:18;1320:6;1317:30;1314:50;;;1360:1;1357;1350:12;1314:50;1413:7;1408:2;1398:6;1395:1;1391:14;1387:2;1383:23;1379:32;1376:45;1373:65;;;1434:1;1431;1424:12;1373:65;747:752;;;;-1:-1:-1;1465:2:10;1457:11;;-1:-1:-1;;;747:752:10:o;3809:277::-;3876:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:52;;;3945:1;3942;3935:12;3897:52;3977:9;3971:16;4030:5;4023:13;4016:21;4009:5;4006:32;3996:60;;4052:1;4049;4042:12;4628:127;4689:10;4684:3;4680:20;4677:1;4670:31;4720:4;4717:1;4710:15;4744:4;4741:1;4734:15"},"methodIdentifiers":{"claim(address,uint256,bytes32[])":"3d13f874","claimableAmounts(address)":"2bc79c12","hasClaimed(address)":"73b2e80e","isWhitelisted(address,uint256,bytes32[])":"faf7a826","merkleRoot()":"2eb4a7ab","owner()":"8da5cb5b","renounceOwnership()":"715018a6","token()":"fc0c546a","totalAirdropAmount()":"b073f687","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimableAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAirdropAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AirdropMerkle.sol\":\"AirdropMerkle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"contracts/AirdropMerkle.sol\":{\"keccak256\":\"0x281d2bb6a9ec2daed67b826835003ba1b32575f991eab996a8506e09f4e01b92\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://680a4a34e32fe1d594f0076ce3670592a1e79fa1fe31f6e497a66a3f78862a57\",\"dweb:/ipfs/QmVEBsPZm2YQcaPEgfvvrjv5UJhSz2sm5nT9xNwrCSQGmw\"]}},\"version\":1}"}},"contracts/AirdropToken.sol":{"AirdropToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"recoverETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"recoverTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1768":{"entryPoint":null,"id":1768,"parameterSlots":0,"returnSlots":0},"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_mint_639":{"entryPoint":279,"id":639,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":197,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_606":{"entryPoint":337,"id":606,"parameterSlots":3,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":984,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":715,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":794,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":657,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":635,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3619:10","nodeType":"YulBlock","src":"0:3619:10","statements":[{"nativeSrc":"6:3:10","nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nativeSrc":"46:95:10","nodeType":"YulBlock","src":"46:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:10","nodeType":"YulLiteral","src":"63:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:10","nodeType":"YulLiteral","src":"70:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:10","nodeType":"YulLiteral","src":"75:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:10","nodeType":"YulIdentifier","src":"66:3:10"},"nativeSrc":"66:20:10","nodeType":"YulFunctionCall","src":"66:20:10"}],"functionName":{"name":"mstore","nativeSrc":"56:6:10","nodeType":"YulIdentifier","src":"56:6:10"},"nativeSrc":"56:31:10","nodeType":"YulFunctionCall","src":"56:31:10"},"nativeSrc":"56:31:10","nodeType":"YulExpressionStatement","src":"56:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:10","nodeType":"YulLiteral","src":"103:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:10","nodeType":"YulLiteral","src":"106:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:10","nodeType":"YulIdentifier","src":"96:6:10"},"nativeSrc":"96:15:10","nodeType":"YulFunctionCall","src":"96:15:10"},"nativeSrc":"96:15:10","nodeType":"YulExpressionStatement","src":"96:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:10","nodeType":"YulLiteral","src":"127:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:10","nodeType":"YulLiteral","src":"130:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:10","nodeType":"YulIdentifier","src":"120:6:10"},"nativeSrc":"120:15:10","nodeType":"YulFunctionCall","src":"120:15:10"},"nativeSrc":"120:15:10","nodeType":"YulExpressionStatement","src":"120:15:10"}]},"name":"panic_error_0x41","nativeSrc":"14:127:10","nodeType":"YulFunctionDefinition","src":"14:127:10"},{"body":{"nativeSrc":"201:325:10","nodeType":"YulBlock","src":"201:325:10","statements":[{"nativeSrc":"211:22:10","nodeType":"YulAssignment","src":"211:22:10","value":{"arguments":[{"kind":"number","nativeSrc":"225:1:10","nodeType":"YulLiteral","src":"225:1:10","type":"","value":"1"},{"name":"data","nativeSrc":"228:4:10","nodeType":"YulIdentifier","src":"228:4:10"}],"functionName":{"name":"shr","nativeSrc":"221:3:10","nodeType":"YulIdentifier","src":"221:3:10"},"nativeSrc":"221:12:10","nodeType":"YulFunctionCall","src":"221:12:10"},"variableNames":[{"name":"length","nativeSrc":"211:6:10","nodeType":"YulIdentifier","src":"211:6:10"}]},{"nativeSrc":"242:38:10","nodeType":"YulVariableDeclaration","src":"242:38:10","value":{"arguments":[{"name":"data","nativeSrc":"272:4:10","nodeType":"YulIdentifier","src":"272:4:10"},{"kind":"number","nativeSrc":"278:1:10","nodeType":"YulLiteral","src":"278:1:10","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"268:3:10","nodeType":"YulIdentifier","src":"268:3:10"},"nativeSrc":"268:12:10","nodeType":"YulFunctionCall","src":"268:12:10"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"246:18:10","nodeType":"YulTypedName","src":"246:18:10","type":""}]},{"body":{"nativeSrc":"319:31:10","nodeType":"YulBlock","src":"319:31:10","statements":[{"nativeSrc":"321:27:10","nodeType":"YulAssignment","src":"321:27:10","value":{"arguments":[{"name":"length","nativeSrc":"335:6:10","nodeType":"YulIdentifier","src":"335:6:10"},{"kind":"number","nativeSrc":"343:4:10","nodeType":"YulLiteral","src":"343:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"331:3:10","nodeType":"YulIdentifier","src":"331:3:10"},"nativeSrc":"331:17:10","nodeType":"YulFunctionCall","src":"331:17:10"},"variableNames":[{"name":"length","nativeSrc":"321:6:10","nodeType":"YulIdentifier","src":"321:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"299:18:10","nodeType":"YulIdentifier","src":"299:18:10"}],"functionName":{"name":"iszero","nativeSrc":"292:6:10","nodeType":"YulIdentifier","src":"292:6:10"},"nativeSrc":"292:26:10","nodeType":"YulFunctionCall","src":"292:26:10"},"nativeSrc":"289:61:10","nodeType":"YulIf","src":"289:61:10"},{"body":{"nativeSrc":"409:111:10","nodeType":"YulBlock","src":"409:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"430:1:10","nodeType":"YulLiteral","src":"430:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"437:3:10","nodeType":"YulLiteral","src":"437:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"442:10:10","nodeType":"YulLiteral","src":"442:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"433:3:10","nodeType":"YulIdentifier","src":"433:3:10"},"nativeSrc":"433:20:10","nodeType":"YulFunctionCall","src":"433:20:10"}],"functionName":{"name":"mstore","nativeSrc":"423:6:10","nodeType":"YulIdentifier","src":"423:6:10"},"nativeSrc":"423:31:10","nodeType":"YulFunctionCall","src":"423:31:10"},"nativeSrc":"423:31:10","nodeType":"YulExpressionStatement","src":"423:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"474:1:10","nodeType":"YulLiteral","src":"474:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"477:4:10","nodeType":"YulLiteral","src":"477:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"467:6:10","nodeType":"YulIdentifier","src":"467:6:10"},"nativeSrc":"467:15:10","nodeType":"YulFunctionCall","src":"467:15:10"},"nativeSrc":"467:15:10","nodeType":"YulExpressionStatement","src":"467:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"502:1:10","nodeType":"YulLiteral","src":"502:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"505:4:10","nodeType":"YulLiteral","src":"505:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"495:6:10","nodeType":"YulIdentifier","src":"495:6:10"},"nativeSrc":"495:15:10","nodeType":"YulFunctionCall","src":"495:15:10"},"nativeSrc":"495:15:10","nodeType":"YulExpressionStatement","src":"495:15:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"365:18:10","nodeType":"YulIdentifier","src":"365:18:10"},{"arguments":[{"name":"length","nativeSrc":"388:6:10","nodeType":"YulIdentifier","src":"388:6:10"},{"kind":"number","nativeSrc":"396:2:10","nodeType":"YulLiteral","src":"396:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"385:2:10","nodeType":"YulIdentifier","src":"385:2:10"},"nativeSrc":"385:14:10","nodeType":"YulFunctionCall","src":"385:14:10"}],"functionName":{"name":"eq","nativeSrc":"362:2:10","nodeType":"YulIdentifier","src":"362:2:10"},"nativeSrc":"362:38:10","nodeType":"YulFunctionCall","src":"362:38:10"},"nativeSrc":"359:161:10","nodeType":"YulIf","src":"359:161:10"}]},"name":"extract_byte_array_length","nativeSrc":"146:380:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"181:4:10","nodeType":"YulTypedName","src":"181:4:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"190:6:10","nodeType":"YulTypedName","src":"190:6:10","type":""}],"src":"146:380:10"},{"body":{"nativeSrc":"587:65:10","nodeType":"YulBlock","src":"587:65:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"604:1:10","nodeType":"YulLiteral","src":"604:1:10","type":"","value":"0"},{"name":"ptr","nativeSrc":"607:3:10","nodeType":"YulIdentifier","src":"607:3:10"}],"functionName":{"name":"mstore","nativeSrc":"597:6:10","nodeType":"YulIdentifier","src":"597:6:10"},"nativeSrc":"597:14:10","nodeType":"YulFunctionCall","src":"597:14:10"},"nativeSrc":"597:14:10","nodeType":"YulExpressionStatement","src":"597:14:10"},{"nativeSrc":"620:26:10","nodeType":"YulAssignment","src":"620:26:10","value":{"arguments":[{"kind":"number","nativeSrc":"638:1:10","nodeType":"YulLiteral","src":"638:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"641:4:10","nodeType":"YulLiteral","src":"641:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"628:9:10","nodeType":"YulIdentifier","src":"628:9:10"},"nativeSrc":"628:18:10","nodeType":"YulFunctionCall","src":"628:18:10"},"variableNames":[{"name":"data","nativeSrc":"620:4:10","nodeType":"YulIdentifier","src":"620:4:10"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"531:121:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"570:3:10","nodeType":"YulTypedName","src":"570:3:10","type":""}],"returnVariables":[{"name":"data","nativeSrc":"578:4:10","nodeType":"YulTypedName","src":"578:4:10","type":""}],"src":"531:121:10"},{"body":{"nativeSrc":"738:437:10","nodeType":"YulBlock","src":"738:437:10","statements":[{"body":{"nativeSrc":"771:398:10","nodeType":"YulBlock","src":"771:398:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"792:1:10","nodeType":"YulLiteral","src":"792:1:10","type":"","value":"0"},{"name":"array","nativeSrc":"795:5:10","nodeType":"YulIdentifier","src":"795:5:10"}],"functionName":{"name":"mstore","nativeSrc":"785:6:10","nodeType":"YulIdentifier","src":"785:6:10"},"nativeSrc":"785:16:10","nodeType":"YulFunctionCall","src":"785:16:10"},"nativeSrc":"785:16:10","nodeType":"YulExpressionStatement","src":"785:16:10"},{"nativeSrc":"814:30:10","nodeType":"YulVariableDeclaration","src":"814:30:10","value":{"arguments":[{"kind":"number","nativeSrc":"836:1:10","nodeType":"YulLiteral","src":"836:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"839:4:10","nodeType":"YulLiteral","src":"839:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"826:9:10","nodeType":"YulIdentifier","src":"826:9:10"},"nativeSrc":"826:18:10","nodeType":"YulFunctionCall","src":"826:18:10"},"variables":[{"name":"data","nativeSrc":"818:4:10","nodeType":"YulTypedName","src":"818:4:10","type":""}]},{"nativeSrc":"857:57:10","nodeType":"YulVariableDeclaration","src":"857:57:10","value":{"arguments":[{"name":"data","nativeSrc":"880:4:10","nodeType":"YulIdentifier","src":"880:4:10"},{"arguments":[{"kind":"number","nativeSrc":"890:1:10","nodeType":"YulLiteral","src":"890:1:10","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"897:10:10","nodeType":"YulIdentifier","src":"897:10:10"},{"kind":"number","nativeSrc":"909:2:10","nodeType":"YulLiteral","src":"909:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"893:3:10","nodeType":"YulIdentifier","src":"893:3:10"},"nativeSrc":"893:19:10","nodeType":"YulFunctionCall","src":"893:19:10"}],"functionName":{"name":"shr","nativeSrc":"886:3:10","nodeType":"YulIdentifier","src":"886:3:10"},"nativeSrc":"886:27:10","nodeType":"YulFunctionCall","src":"886:27:10"}],"functionName":{"name":"add","nativeSrc":"876:3:10","nodeType":"YulIdentifier","src":"876:3:10"},"nativeSrc":"876:38:10","nodeType":"YulFunctionCall","src":"876:38:10"},"variables":[{"name":"deleteStart","nativeSrc":"861:11:10","nodeType":"YulTypedName","src":"861:11:10","type":""}]},{"body":{"nativeSrc":"951:23:10","nodeType":"YulBlock","src":"951:23:10","statements":[{"nativeSrc":"953:19:10","nodeType":"YulAssignment","src":"953:19:10","value":{"name":"data","nativeSrc":"968:4:10","nodeType":"YulIdentifier","src":"968:4:10"},"variableNames":[{"name":"deleteStart","nativeSrc":"953:11:10","nodeType":"YulIdentifier","src":"953:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"933:10:10","nodeType":"YulIdentifier","src":"933:10:10"},{"kind":"number","nativeSrc":"945:4:10","nodeType":"YulLiteral","src":"945:4:10","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"930:2:10","nodeType":"YulIdentifier","src":"930:2:10"},"nativeSrc":"930:20:10","nodeType":"YulFunctionCall","src":"930:20:10"},"nativeSrc":"927:47:10","nodeType":"YulIf","src":"927:47:10"},{"nativeSrc":"987:41:10","nodeType":"YulVariableDeclaration","src":"987:41:10","value":{"arguments":[{"name":"data","nativeSrc":"1001:4:10","nodeType":"YulIdentifier","src":"1001:4:10"},{"arguments":[{"kind":"number","nativeSrc":"1011:1:10","nodeType":"YulLiteral","src":"1011:1:10","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1018:3:10","nodeType":"YulIdentifier","src":"1018:3:10"},{"kind":"number","nativeSrc":"1023:2:10","nodeType":"YulLiteral","src":"1023:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1014:3:10","nodeType":"YulIdentifier","src":"1014:3:10"},"nativeSrc":"1014:12:10","nodeType":"YulFunctionCall","src":"1014:12:10"}],"functionName":{"name":"shr","nativeSrc":"1007:3:10","nodeType":"YulIdentifier","src":"1007:3:10"},"nativeSrc":"1007:20:10","nodeType":"YulFunctionCall","src":"1007:20:10"}],"functionName":{"name":"add","nativeSrc":"997:3:10","nodeType":"YulIdentifier","src":"997:3:10"},"nativeSrc":"997:31:10","nodeType":"YulFunctionCall","src":"997:31:10"},"variables":[{"name":"_1","nativeSrc":"991:2:10","nodeType":"YulTypedName","src":"991:2:10","type":""}]},{"nativeSrc":"1041:24:10","nodeType":"YulVariableDeclaration","src":"1041:24:10","value":{"name":"deleteStart","nativeSrc":"1054:11:10","nodeType":"YulIdentifier","src":"1054:11:10"},"variables":[{"name":"start","nativeSrc":"1045:5:10","nodeType":"YulTypedName","src":"1045:5:10","type":""}]},{"body":{"nativeSrc":"1139:20:10","nodeType":"YulBlock","src":"1139:20:10","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1148:5:10","nodeType":"YulIdentifier","src":"1148:5:10"},{"kind":"number","nativeSrc":"1155:1:10","nodeType":"YulLiteral","src":"1155:1:10","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1141:6:10","nodeType":"YulIdentifier","src":"1141:6:10"},"nativeSrc":"1141:16:10","nodeType":"YulFunctionCall","src":"1141:16:10"},"nativeSrc":"1141:16:10","nodeType":"YulExpressionStatement","src":"1141:16:10"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1089:5:10","nodeType":"YulIdentifier","src":"1089:5:10"},{"name":"_1","nativeSrc":"1096:2:10","nodeType":"YulIdentifier","src":"1096:2:10"}],"functionName":{"name":"lt","nativeSrc":"1086:2:10","nodeType":"YulIdentifier","src":"1086:2:10"},"nativeSrc":"1086:13:10","nodeType":"YulFunctionCall","src":"1086:13:10"},"nativeSrc":"1078:81:10","nodeType":"YulForLoop","post":{"nativeSrc":"1100:26:10","nodeType":"YulBlock","src":"1100:26:10","statements":[{"nativeSrc":"1102:22:10","nodeType":"YulAssignment","src":"1102:22:10","value":{"arguments":[{"name":"start","nativeSrc":"1115:5:10","nodeType":"YulIdentifier","src":"1115:5:10"},{"kind":"number","nativeSrc":"1122:1:10","nodeType":"YulLiteral","src":"1122:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1111:3:10","nodeType":"YulIdentifier","src":"1111:3:10"},"nativeSrc":"1111:13:10","nodeType":"YulFunctionCall","src":"1111:13:10"},"variableNames":[{"name":"start","nativeSrc":"1102:5:10","nodeType":"YulIdentifier","src":"1102:5:10"}]}]},"pre":{"nativeSrc":"1082:3:10","nodeType":"YulBlock","src":"1082:3:10","statements":[]},"src":"1078:81:10"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"754:3:10","nodeType":"YulIdentifier","src":"754:3:10"},{"kind":"number","nativeSrc":"759:2:10","nodeType":"YulLiteral","src":"759:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"751:2:10","nodeType":"YulIdentifier","src":"751:2:10"},"nativeSrc":"751:11:10","nodeType":"YulFunctionCall","src":"751:11:10"},"nativeSrc":"748:421:10","nodeType":"YulIf","src":"748:421:10"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"657:518:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"710:5:10","nodeType":"YulTypedName","src":"710:5:10","type":""},{"name":"len","nativeSrc":"717:3:10","nodeType":"YulTypedName","src":"717:3:10","type":""},{"name":"startIndex","nativeSrc":"722:10:10","nodeType":"YulTypedName","src":"722:10:10","type":""}],"src":"657:518:10"},{"body":{"nativeSrc":"1265:81:10","nodeType":"YulBlock","src":"1265:81:10","statements":[{"nativeSrc":"1275:65:10","nodeType":"YulAssignment","src":"1275:65:10","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1290:4:10","nodeType":"YulIdentifier","src":"1290:4:10"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1308:1:10","nodeType":"YulLiteral","src":"1308:1:10","type":"","value":"3"},{"name":"len","nativeSrc":"1311:3:10","nodeType":"YulIdentifier","src":"1311:3:10"}],"functionName":{"name":"shl","nativeSrc":"1304:3:10","nodeType":"YulIdentifier","src":"1304:3:10"},"nativeSrc":"1304:11:10","nodeType":"YulFunctionCall","src":"1304:11:10"},{"arguments":[{"kind":"number","nativeSrc":"1321:1:10","nodeType":"YulLiteral","src":"1321:1:10","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1317:3:10","nodeType":"YulIdentifier","src":"1317:3:10"},"nativeSrc":"1317:6:10","nodeType":"YulFunctionCall","src":"1317:6:10"}],"functionName":{"name":"shr","nativeSrc":"1300:3:10","nodeType":"YulIdentifier","src":"1300:3:10"},"nativeSrc":"1300:24:10","nodeType":"YulFunctionCall","src":"1300:24:10"}],"functionName":{"name":"not","nativeSrc":"1296:3:10","nodeType":"YulIdentifier","src":"1296:3:10"},"nativeSrc":"1296:29:10","nodeType":"YulFunctionCall","src":"1296:29:10"}],"functionName":{"name":"and","nativeSrc":"1286:3:10","nodeType":"YulIdentifier","src":"1286:3:10"},"nativeSrc":"1286:40:10","nodeType":"YulFunctionCall","src":"1286:40:10"},{"arguments":[{"kind":"number","nativeSrc":"1332:1:10","nodeType":"YulLiteral","src":"1332:1:10","type":"","value":"1"},{"name":"len","nativeSrc":"1335:3:10","nodeType":"YulIdentifier","src":"1335:3:10"}],"functionName":{"name":"shl","nativeSrc":"1328:3:10","nodeType":"YulIdentifier","src":"1328:3:10"},"nativeSrc":"1328:11:10","nodeType":"YulFunctionCall","src":"1328:11:10"}],"functionName":{"name":"or","nativeSrc":"1283:2:10","nodeType":"YulIdentifier","src":"1283:2:10"},"nativeSrc":"1283:57:10","nodeType":"YulFunctionCall","src":"1283:57:10"},"variableNames":[{"name":"used","nativeSrc":"1275:4:10","nodeType":"YulIdentifier","src":"1275:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1180:166:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1242:4:10","nodeType":"YulTypedName","src":"1242:4:10","type":""},{"name":"len","nativeSrc":"1248:3:10","nodeType":"YulTypedName","src":"1248:3:10","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1256:4:10","nodeType":"YulTypedName","src":"1256:4:10","type":""}],"src":"1180:166:10"},{"body":{"nativeSrc":"1447:1203:10","nodeType":"YulBlock","src":"1447:1203:10","statements":[{"nativeSrc":"1457:24:10","nodeType":"YulVariableDeclaration","src":"1457:24:10","value":{"arguments":[{"name":"src","nativeSrc":"1477:3:10","nodeType":"YulIdentifier","src":"1477:3:10"}],"functionName":{"name":"mload","nativeSrc":"1471:5:10","nodeType":"YulIdentifier","src":"1471:5:10"},"nativeSrc":"1471:10:10","nodeType":"YulFunctionCall","src":"1471:10:10"},"variables":[{"name":"newLen","nativeSrc":"1461:6:10","nodeType":"YulTypedName","src":"1461:6:10","type":""}]},{"body":{"nativeSrc":"1524:22:10","nodeType":"YulBlock","src":"1524:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1526:16:10","nodeType":"YulIdentifier","src":"1526:16:10"},"nativeSrc":"1526:18:10","nodeType":"YulFunctionCall","src":"1526:18:10"},"nativeSrc":"1526:18:10","nodeType":"YulExpressionStatement","src":"1526:18:10"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1496:6:10","nodeType":"YulIdentifier","src":"1496:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1512:2:10","nodeType":"YulLiteral","src":"1512:2:10","type":"","value":"64"},{"kind":"number","nativeSrc":"1516:1:10","nodeType":"YulLiteral","src":"1516:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1508:3:10","nodeType":"YulIdentifier","src":"1508:3:10"},"nativeSrc":"1508:10:10","nodeType":"YulFunctionCall","src":"1508:10:10"},{"kind":"number","nativeSrc":"1520:1:10","nodeType":"YulLiteral","src":"1520:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1504:3:10","nodeType":"YulIdentifier","src":"1504:3:10"},"nativeSrc":"1504:18:10","nodeType":"YulFunctionCall","src":"1504:18:10"}],"functionName":{"name":"gt","nativeSrc":"1493:2:10","nodeType":"YulIdentifier","src":"1493:2:10"},"nativeSrc":"1493:30:10","nodeType":"YulFunctionCall","src":"1493:30:10"},"nativeSrc":"1490:56:10","nodeType":"YulIf","src":"1490:56:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1599:4:10","nodeType":"YulIdentifier","src":"1599:4:10"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1637:4:10","nodeType":"YulIdentifier","src":"1637:4:10"}],"functionName":{"name":"sload","nativeSrc":"1631:5:10","nodeType":"YulIdentifier","src":"1631:5:10"},"nativeSrc":"1631:11:10","nodeType":"YulFunctionCall","src":"1631:11:10"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1605:25:10","nodeType":"YulIdentifier","src":"1605:25:10"},"nativeSrc":"1605:38:10","nodeType":"YulFunctionCall","src":"1605:38:10"},{"name":"newLen","nativeSrc":"1645:6:10","nodeType":"YulIdentifier","src":"1645:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1555:43:10","nodeType":"YulIdentifier","src":"1555:43:10"},"nativeSrc":"1555:97:10","nodeType":"YulFunctionCall","src":"1555:97:10"},"nativeSrc":"1555:97:10","nodeType":"YulExpressionStatement","src":"1555:97:10"},{"nativeSrc":"1661:18:10","nodeType":"YulVariableDeclaration","src":"1661:18:10","value":{"kind":"number","nativeSrc":"1678:1:10","nodeType":"YulLiteral","src":"1678:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1665:9:10","nodeType":"YulTypedName","src":"1665:9:10","type":""}]},{"nativeSrc":"1688:17:10","nodeType":"YulAssignment","src":"1688:17:10","value":{"kind":"number","nativeSrc":"1701:4:10","nodeType":"YulLiteral","src":"1701:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1688:9:10","nodeType":"YulIdentifier","src":"1688:9:10"}]},{"cases":[{"body":{"nativeSrc":"1751:642:10","nodeType":"YulBlock","src":"1751:642:10","statements":[{"nativeSrc":"1765:35:10","nodeType":"YulVariableDeclaration","src":"1765:35:10","value":{"arguments":[{"name":"newLen","nativeSrc":"1784:6:10","nodeType":"YulIdentifier","src":"1784:6:10"},{"arguments":[{"kind":"number","nativeSrc":"1796:2:10","nodeType":"YulLiteral","src":"1796:2:10","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1792:3:10","nodeType":"YulIdentifier","src":"1792:3:10"},"nativeSrc":"1792:7:10","nodeType":"YulFunctionCall","src":"1792:7:10"}],"functionName":{"name":"and","nativeSrc":"1780:3:10","nodeType":"YulIdentifier","src":"1780:3:10"},"nativeSrc":"1780:20:10","nodeType":"YulFunctionCall","src":"1780:20:10"},"variables":[{"name":"loopEnd","nativeSrc":"1769:7:10","nodeType":"YulTypedName","src":"1769:7:10","type":""}]},{"nativeSrc":"1813:49:10","nodeType":"YulVariableDeclaration","src":"1813:49:10","value":{"arguments":[{"name":"slot","nativeSrc":"1857:4:10","nodeType":"YulIdentifier","src":"1857:4:10"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"1827:29:10","nodeType":"YulIdentifier","src":"1827:29:10"},"nativeSrc":"1827:35:10","nodeType":"YulFunctionCall","src":"1827:35:10"},"variables":[{"name":"dstPtr","nativeSrc":"1817:6:10","nodeType":"YulTypedName","src":"1817:6:10","type":""}]},{"nativeSrc":"1875:10:10","nodeType":"YulVariableDeclaration","src":"1875:10:10","value":{"kind":"number","nativeSrc":"1884:1:10","nodeType":"YulLiteral","src":"1884:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1879:1:10","nodeType":"YulTypedName","src":"1879:1:10","type":""}]},{"body":{"nativeSrc":"1955:165:10","nodeType":"YulBlock","src":"1955:165:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"1980:6:10","nodeType":"YulIdentifier","src":"1980:6:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1998:3:10","nodeType":"YulIdentifier","src":"1998:3:10"},{"name":"srcOffset","nativeSrc":"2003:9:10","nodeType":"YulIdentifier","src":"2003:9:10"}],"functionName":{"name":"add","nativeSrc":"1994:3:10","nodeType":"YulIdentifier","src":"1994:3:10"},"nativeSrc":"1994:19:10","nodeType":"YulFunctionCall","src":"1994:19:10"}],"functionName":{"name":"mload","nativeSrc":"1988:5:10","nodeType":"YulIdentifier","src":"1988:5:10"},"nativeSrc":"1988:26:10","nodeType":"YulFunctionCall","src":"1988:26:10"}],"functionName":{"name":"sstore","nativeSrc":"1973:6:10","nodeType":"YulIdentifier","src":"1973:6:10"},"nativeSrc":"1973:42:10","nodeType":"YulFunctionCall","src":"1973:42:10"},"nativeSrc":"1973:42:10","nodeType":"YulExpressionStatement","src":"1973:42:10"},{"nativeSrc":"2032:24:10","nodeType":"YulAssignment","src":"2032:24:10","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2046:6:10","nodeType":"YulIdentifier","src":"2046:6:10"},{"kind":"number","nativeSrc":"2054:1:10","nodeType":"YulLiteral","src":"2054:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2042:3:10","nodeType":"YulIdentifier","src":"2042:3:10"},"nativeSrc":"2042:14:10","nodeType":"YulFunctionCall","src":"2042:14:10"},"variableNames":[{"name":"dstPtr","nativeSrc":"2032:6:10","nodeType":"YulIdentifier","src":"2032:6:10"}]},{"nativeSrc":"2073:33:10","nodeType":"YulAssignment","src":"2073:33:10","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2090:9:10","nodeType":"YulIdentifier","src":"2090:9:10"},{"kind":"number","nativeSrc":"2101:4:10","nodeType":"YulLiteral","src":"2101:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2086:3:10","nodeType":"YulIdentifier","src":"2086:3:10"},"nativeSrc":"2086:20:10","nodeType":"YulFunctionCall","src":"2086:20:10"},"variableNames":[{"name":"srcOffset","nativeSrc":"2073:9:10","nodeType":"YulIdentifier","src":"2073:9:10"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1909:1:10","nodeType":"YulIdentifier","src":"1909:1:10"},{"name":"loopEnd","nativeSrc":"1912:7:10","nodeType":"YulIdentifier","src":"1912:7:10"}],"functionName":{"name":"lt","nativeSrc":"1906:2:10","nodeType":"YulIdentifier","src":"1906:2:10"},"nativeSrc":"1906:14:10","nodeType":"YulFunctionCall","src":"1906:14:10"},"nativeSrc":"1898:222:10","nodeType":"YulForLoop","post":{"nativeSrc":"1921:21:10","nodeType":"YulBlock","src":"1921:21:10","statements":[{"nativeSrc":"1923:17:10","nodeType":"YulAssignment","src":"1923:17:10","value":{"arguments":[{"name":"i","nativeSrc":"1932:1:10","nodeType":"YulIdentifier","src":"1932:1:10"},{"kind":"number","nativeSrc":"1935:4:10","nodeType":"YulLiteral","src":"1935:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1928:3:10","nodeType":"YulIdentifier","src":"1928:3:10"},"nativeSrc":"1928:12:10","nodeType":"YulFunctionCall","src":"1928:12:10"},"variableNames":[{"name":"i","nativeSrc":"1923:1:10","nodeType":"YulIdentifier","src":"1923:1:10"}]}]},"pre":{"nativeSrc":"1902:3:10","nodeType":"YulBlock","src":"1902:3:10","statements":[]},"src":"1898:222:10"},{"body":{"nativeSrc":"2168:166:10","nodeType":"YulBlock","src":"2168:166:10","statements":[{"nativeSrc":"2186:43:10","nodeType":"YulVariableDeclaration","src":"2186:43:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2213:3:10","nodeType":"YulIdentifier","src":"2213:3:10"},{"name":"srcOffset","nativeSrc":"2218:9:10","nodeType":"YulIdentifier","src":"2218:9:10"}],"functionName":{"name":"add","nativeSrc":"2209:3:10","nodeType":"YulIdentifier","src":"2209:3:10"},"nativeSrc":"2209:19:10","nodeType":"YulFunctionCall","src":"2209:19:10"}],"functionName":{"name":"mload","nativeSrc":"2203:5:10","nodeType":"YulIdentifier","src":"2203:5:10"},"nativeSrc":"2203:26:10","nodeType":"YulFunctionCall","src":"2203:26:10"},"variables":[{"name":"lastValue","nativeSrc":"2190:9:10","nodeType":"YulTypedName","src":"2190:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2253:6:10","nodeType":"YulIdentifier","src":"2253:6:10"},{"arguments":[{"name":"lastValue","nativeSrc":"2265:9:10","nodeType":"YulIdentifier","src":"2265:9:10"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2292:1:10","nodeType":"YulLiteral","src":"2292:1:10","type":"","value":"3"},{"name":"newLen","nativeSrc":"2295:6:10","nodeType":"YulIdentifier","src":"2295:6:10"}],"functionName":{"name":"shl","nativeSrc":"2288:3:10","nodeType":"YulIdentifier","src":"2288:3:10"},"nativeSrc":"2288:14:10","nodeType":"YulFunctionCall","src":"2288:14:10"},{"kind":"number","nativeSrc":"2304:3:10","nodeType":"YulLiteral","src":"2304:3:10","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2284:3:10","nodeType":"YulIdentifier","src":"2284:3:10"},"nativeSrc":"2284:24:10","nodeType":"YulFunctionCall","src":"2284:24:10"},{"arguments":[{"kind":"number","nativeSrc":"2314:1:10","nodeType":"YulLiteral","src":"2314:1:10","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2310:3:10","nodeType":"YulIdentifier","src":"2310:3:10"},"nativeSrc":"2310:6:10","nodeType":"YulFunctionCall","src":"2310:6:10"}],"functionName":{"name":"shr","nativeSrc":"2280:3:10","nodeType":"YulIdentifier","src":"2280:3:10"},"nativeSrc":"2280:37:10","nodeType":"YulFunctionCall","src":"2280:37:10"}],"functionName":{"name":"not","nativeSrc":"2276:3:10","nodeType":"YulIdentifier","src":"2276:3:10"},"nativeSrc":"2276:42:10","nodeType":"YulFunctionCall","src":"2276:42:10"}],"functionName":{"name":"and","nativeSrc":"2261:3:10","nodeType":"YulIdentifier","src":"2261:3:10"},"nativeSrc":"2261:58:10","nodeType":"YulFunctionCall","src":"2261:58:10"}],"functionName":{"name":"sstore","nativeSrc":"2246:6:10","nodeType":"YulIdentifier","src":"2246:6:10"},"nativeSrc":"2246:74:10","nodeType":"YulFunctionCall","src":"2246:74:10"},"nativeSrc":"2246:74:10","nodeType":"YulExpressionStatement","src":"2246:74:10"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2139:7:10","nodeType":"YulIdentifier","src":"2139:7:10"},{"name":"newLen","nativeSrc":"2148:6:10","nodeType":"YulIdentifier","src":"2148:6:10"}],"functionName":{"name":"lt","nativeSrc":"2136:2:10","nodeType":"YulIdentifier","src":"2136:2:10"},"nativeSrc":"2136:19:10","nodeType":"YulFunctionCall","src":"2136:19:10"},"nativeSrc":"2133:201:10","nodeType":"YulIf","src":"2133:201:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2354:4:10","nodeType":"YulIdentifier","src":"2354:4:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2368:1:10","nodeType":"YulLiteral","src":"2368:1:10","type":"","value":"1"},{"name":"newLen","nativeSrc":"2371:6:10","nodeType":"YulIdentifier","src":"2371:6:10"}],"functionName":{"name":"shl","nativeSrc":"2364:3:10","nodeType":"YulIdentifier","src":"2364:3:10"},"nativeSrc":"2364:14:10","nodeType":"YulFunctionCall","src":"2364:14:10"},{"kind":"number","nativeSrc":"2380:1:10","nodeType":"YulLiteral","src":"2380:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2360:3:10","nodeType":"YulIdentifier","src":"2360:3:10"},"nativeSrc":"2360:22:10","nodeType":"YulFunctionCall","src":"2360:22:10"}],"functionName":{"name":"sstore","nativeSrc":"2347:6:10","nodeType":"YulIdentifier","src":"2347:6:10"},"nativeSrc":"2347:36:10","nodeType":"YulFunctionCall","src":"2347:36:10"},"nativeSrc":"2347:36:10","nodeType":"YulExpressionStatement","src":"2347:36:10"}]},"nativeSrc":"1744:649:10","nodeType":"YulCase","src":"1744:649:10","value":{"kind":"number","nativeSrc":"1749:1:10","nodeType":"YulLiteral","src":"1749:1:10","type":"","value":"1"}},{"body":{"nativeSrc":"2410:234:10","nodeType":"YulBlock","src":"2410:234:10","statements":[{"nativeSrc":"2424:14:10","nodeType":"YulVariableDeclaration","src":"2424:14:10","value":{"kind":"number","nativeSrc":"2437:1:10","nodeType":"YulLiteral","src":"2437:1:10","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2428:5:10","nodeType":"YulTypedName","src":"2428:5:10","type":""}]},{"body":{"nativeSrc":"2473:67:10","nodeType":"YulBlock","src":"2473:67:10","statements":[{"nativeSrc":"2491:35:10","nodeType":"YulAssignment","src":"2491:35:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2510:3:10","nodeType":"YulIdentifier","src":"2510:3:10"},{"name":"srcOffset","nativeSrc":"2515:9:10","nodeType":"YulIdentifier","src":"2515:9:10"}],"functionName":{"name":"add","nativeSrc":"2506:3:10","nodeType":"YulIdentifier","src":"2506:3:10"},"nativeSrc":"2506:19:10","nodeType":"YulFunctionCall","src":"2506:19:10"}],"functionName":{"name":"mload","nativeSrc":"2500:5:10","nodeType":"YulIdentifier","src":"2500:5:10"},"nativeSrc":"2500:26:10","nodeType":"YulFunctionCall","src":"2500:26:10"},"variableNames":[{"name":"value","nativeSrc":"2491:5:10","nodeType":"YulIdentifier","src":"2491:5:10"}]}]},"condition":{"name":"newLen","nativeSrc":"2454:6:10","nodeType":"YulIdentifier","src":"2454:6:10"},"nativeSrc":"2451:89:10","nodeType":"YulIf","src":"2451:89:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2560:4:10","nodeType":"YulIdentifier","src":"2560:4:10"},{"arguments":[{"name":"value","nativeSrc":"2619:5:10","nodeType":"YulIdentifier","src":"2619:5:10"},{"name":"newLen","nativeSrc":"2626:6:10","nodeType":"YulIdentifier","src":"2626:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2566:52:10","nodeType":"YulIdentifier","src":"2566:52:10"},"nativeSrc":"2566:67:10","nodeType":"YulFunctionCall","src":"2566:67:10"}],"functionName":{"name":"sstore","nativeSrc":"2553:6:10","nodeType":"YulIdentifier","src":"2553:6:10"},"nativeSrc":"2553:81:10","nodeType":"YulFunctionCall","src":"2553:81:10"},"nativeSrc":"2553:81:10","nodeType":"YulExpressionStatement","src":"2553:81:10"}]},"nativeSrc":"2402:242:10","nodeType":"YulCase","src":"2402:242:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"1724:6:10","nodeType":"YulIdentifier","src":"1724:6:10"},{"kind":"number","nativeSrc":"1732:2:10","nodeType":"YulLiteral","src":"1732:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1721:2:10","nodeType":"YulIdentifier","src":"1721:2:10"},"nativeSrc":"1721:14:10","nodeType":"YulFunctionCall","src":"1721:14:10"},"nativeSrc":"1714:930:10","nodeType":"YulSwitch","src":"1714:930:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1351:1299:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1432:4:10","nodeType":"YulTypedName","src":"1432:4:10","type":""},{"name":"src","nativeSrc":"1438:3:10","nodeType":"YulTypedName","src":"1438:3:10","type":""}],"src":"1351:1299:10"},{"body":{"nativeSrc":"2756:102:10","nodeType":"YulBlock","src":"2756:102:10","statements":[{"nativeSrc":"2766:26:10","nodeType":"YulAssignment","src":"2766:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2778:9:10","nodeType":"YulIdentifier","src":"2778:9:10"},{"kind":"number","nativeSrc":"2789:2:10","nodeType":"YulLiteral","src":"2789:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2774:3:10","nodeType":"YulIdentifier","src":"2774:3:10"},"nativeSrc":"2774:18:10","nodeType":"YulFunctionCall","src":"2774:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2766:4:10","nodeType":"YulIdentifier","src":"2766:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2808:9:10","nodeType":"YulIdentifier","src":"2808:9:10"},{"arguments":[{"name":"value0","nativeSrc":"2823:6:10","nodeType":"YulIdentifier","src":"2823:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2839:3:10","nodeType":"YulLiteral","src":"2839:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"2844:1:10","nodeType":"YulLiteral","src":"2844:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2835:3:10","nodeType":"YulIdentifier","src":"2835:3:10"},"nativeSrc":"2835:11:10","nodeType":"YulFunctionCall","src":"2835:11:10"},{"kind":"number","nativeSrc":"2848:1:10","nodeType":"YulLiteral","src":"2848:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2831:3:10","nodeType":"YulIdentifier","src":"2831:3:10"},"nativeSrc":"2831:19:10","nodeType":"YulFunctionCall","src":"2831:19:10"}],"functionName":{"name":"and","nativeSrc":"2819:3:10","nodeType":"YulIdentifier","src":"2819:3:10"},"nativeSrc":"2819:32:10","nodeType":"YulFunctionCall","src":"2819:32:10"}],"functionName":{"name":"mstore","nativeSrc":"2801:6:10","nodeType":"YulIdentifier","src":"2801:6:10"},"nativeSrc":"2801:51:10","nodeType":"YulFunctionCall","src":"2801:51:10"},"nativeSrc":"2801:51:10","nodeType":"YulExpressionStatement","src":"2801:51:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2655:203:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2725:9:10","nodeType":"YulTypedName","src":"2725:9:10","type":""},{"name":"value0","nativeSrc":"2736:6:10","nodeType":"YulTypedName","src":"2736:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2747:4:10","nodeType":"YulTypedName","src":"2747:4:10","type":""}],"src":"2655:203:10"},{"body":{"nativeSrc":"2911:174:10","nodeType":"YulBlock","src":"2911:174:10","statements":[{"nativeSrc":"2921:16:10","nodeType":"YulAssignment","src":"2921:16:10","value":{"arguments":[{"name":"x","nativeSrc":"2932:1:10","nodeType":"YulIdentifier","src":"2932:1:10"},{"name":"y","nativeSrc":"2935:1:10","nodeType":"YulIdentifier","src":"2935:1:10"}],"functionName":{"name":"add","nativeSrc":"2928:3:10","nodeType":"YulIdentifier","src":"2928:3:10"},"nativeSrc":"2928:9:10","nodeType":"YulFunctionCall","src":"2928:9:10"},"variableNames":[{"name":"sum","nativeSrc":"2921:3:10","nodeType":"YulIdentifier","src":"2921:3:10"}]},{"body":{"nativeSrc":"2968:111:10","nodeType":"YulBlock","src":"2968:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2989:1:10","nodeType":"YulLiteral","src":"2989:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2996:3:10","nodeType":"YulLiteral","src":"2996:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"3001:10:10","nodeType":"YulLiteral","src":"3001:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2992:3:10","nodeType":"YulIdentifier","src":"2992:3:10"},"nativeSrc":"2992:20:10","nodeType":"YulFunctionCall","src":"2992:20:10"}],"functionName":{"name":"mstore","nativeSrc":"2982:6:10","nodeType":"YulIdentifier","src":"2982:6:10"},"nativeSrc":"2982:31:10","nodeType":"YulFunctionCall","src":"2982:31:10"},"nativeSrc":"2982:31:10","nodeType":"YulExpressionStatement","src":"2982:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3033:1:10","nodeType":"YulLiteral","src":"3033:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"3036:4:10","nodeType":"YulLiteral","src":"3036:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3026:6:10","nodeType":"YulIdentifier","src":"3026:6:10"},"nativeSrc":"3026:15:10","nodeType":"YulFunctionCall","src":"3026:15:10"},"nativeSrc":"3026:15:10","nodeType":"YulExpressionStatement","src":"3026:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3061:1:10","nodeType":"YulLiteral","src":"3061:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3064:4:10","nodeType":"YulLiteral","src":"3064:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3054:6:10","nodeType":"YulIdentifier","src":"3054:6:10"},"nativeSrc":"3054:15:10","nodeType":"YulFunctionCall","src":"3054:15:10"},"nativeSrc":"3054:15:10","nodeType":"YulExpressionStatement","src":"3054:15:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"2952:1:10","nodeType":"YulIdentifier","src":"2952:1:10"},{"name":"sum","nativeSrc":"2955:3:10","nodeType":"YulIdentifier","src":"2955:3:10"}],"functionName":{"name":"gt","nativeSrc":"2949:2:10","nodeType":"YulIdentifier","src":"2949:2:10"},"nativeSrc":"2949:10:10","nodeType":"YulFunctionCall","src":"2949:10:10"},"nativeSrc":"2946:133:10","nodeType":"YulIf","src":"2946:133:10"}]},"name":"checked_add_t_uint256","nativeSrc":"2863:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"2894:1:10","nodeType":"YulTypedName","src":"2894:1:10","type":""},{"name":"y","nativeSrc":"2897:1:10","nodeType":"YulTypedName","src":"2897:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"2903:3:10","nodeType":"YulTypedName","src":"2903:3:10","type":""}],"src":"2863:222:10"},{"body":{"nativeSrc":"3247:188:10","nodeType":"YulBlock","src":"3247:188:10","statements":[{"nativeSrc":"3257:26:10","nodeType":"YulAssignment","src":"3257:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3269:9:10","nodeType":"YulIdentifier","src":"3269:9:10"},{"kind":"number","nativeSrc":"3280:2:10","nodeType":"YulLiteral","src":"3280:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3265:3:10","nodeType":"YulIdentifier","src":"3265:3:10"},"nativeSrc":"3265:18:10","nodeType":"YulFunctionCall","src":"3265:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3257:4:10","nodeType":"YulIdentifier","src":"3257:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3299:9:10","nodeType":"YulIdentifier","src":"3299:9:10"},{"arguments":[{"name":"value0","nativeSrc":"3314:6:10","nodeType":"YulIdentifier","src":"3314:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3330:3:10","nodeType":"YulLiteral","src":"3330:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"3335:1:10","nodeType":"YulLiteral","src":"3335:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3326:3:10","nodeType":"YulIdentifier","src":"3326:3:10"},"nativeSrc":"3326:11:10","nodeType":"YulFunctionCall","src":"3326:11:10"},{"kind":"number","nativeSrc":"3339:1:10","nodeType":"YulLiteral","src":"3339:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3322:3:10","nodeType":"YulIdentifier","src":"3322:3:10"},"nativeSrc":"3322:19:10","nodeType":"YulFunctionCall","src":"3322:19:10"}],"functionName":{"name":"and","nativeSrc":"3310:3:10","nodeType":"YulIdentifier","src":"3310:3:10"},"nativeSrc":"3310:32:10","nodeType":"YulFunctionCall","src":"3310:32:10"}],"functionName":{"name":"mstore","nativeSrc":"3292:6:10","nodeType":"YulIdentifier","src":"3292:6:10"},"nativeSrc":"3292:51:10","nodeType":"YulFunctionCall","src":"3292:51:10"},"nativeSrc":"3292:51:10","nodeType":"YulExpressionStatement","src":"3292:51:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3363:9:10","nodeType":"YulIdentifier","src":"3363:9:10"},{"kind":"number","nativeSrc":"3374:2:10","nodeType":"YulLiteral","src":"3374:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3359:3:10","nodeType":"YulIdentifier","src":"3359:3:10"},"nativeSrc":"3359:18:10","nodeType":"YulFunctionCall","src":"3359:18:10"},{"name":"value1","nativeSrc":"3379:6:10","nodeType":"YulIdentifier","src":"3379:6:10"}],"functionName":{"name":"mstore","nativeSrc":"3352:6:10","nodeType":"YulIdentifier","src":"3352:6:10"},"nativeSrc":"3352:34:10","nodeType":"YulFunctionCall","src":"3352:34:10"},"nativeSrc":"3352:34:10","nodeType":"YulExpressionStatement","src":"3352:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3406:9:10","nodeType":"YulIdentifier","src":"3406:9:10"},{"kind":"number","nativeSrc":"3417:2:10","nodeType":"YulLiteral","src":"3417:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3402:3:10","nodeType":"YulIdentifier","src":"3402:3:10"},"nativeSrc":"3402:18:10","nodeType":"YulFunctionCall","src":"3402:18:10"},{"name":"value2","nativeSrc":"3422:6:10","nodeType":"YulIdentifier","src":"3422:6:10"}],"functionName":{"name":"mstore","nativeSrc":"3395:6:10","nodeType":"YulIdentifier","src":"3395:6:10"},"nativeSrc":"3395:34:10","nodeType":"YulFunctionCall","src":"3395:34:10"},"nativeSrc":"3395:34:10","nodeType":"YulExpressionStatement","src":"3395:34:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3090:345:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3200:9:10","nodeType":"YulTypedName","src":"3200:9:10","type":""},{"name":"value2","nativeSrc":"3211:6:10","nodeType":"YulTypedName","src":"3211:6:10","type":""},{"name":"value1","nativeSrc":"3219:6:10","nodeType":"YulTypedName","src":"3219:6:10","type":""},{"name":"value0","nativeSrc":"3227:6:10","nodeType":"YulTypedName","src":"3227:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3238:4:10","nodeType":"YulTypedName","src":"3238:4:10","type":""}],"src":"3090:345:10"},{"body":{"nativeSrc":"3541:76:10","nodeType":"YulBlock","src":"3541:76:10","statements":[{"nativeSrc":"3551:26:10","nodeType":"YulAssignment","src":"3551:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3563:9:10","nodeType":"YulIdentifier","src":"3563:9:10"},{"kind":"number","nativeSrc":"3574:2:10","nodeType":"YulLiteral","src":"3574:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3559:3:10","nodeType":"YulIdentifier","src":"3559:3:10"},"nativeSrc":"3559:18:10","nodeType":"YulFunctionCall","src":"3559:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3551:4:10","nodeType":"YulIdentifier","src":"3551:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3593:9:10","nodeType":"YulIdentifier","src":"3593:9:10"},{"name":"value0","nativeSrc":"3604:6:10","nodeType":"YulIdentifier","src":"3604:6:10"}],"functionName":{"name":"mstore","nativeSrc":"3586:6:10","nodeType":"YulIdentifier","src":"3586:6:10"},"nativeSrc":"3586:25:10","nodeType":"YulFunctionCall","src":"3586:25:10"},"nativeSrc":"3586:25:10","nodeType":"YulExpressionStatement","src":"3586:25:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3440:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3510:9:10","nodeType":"YulTypedName","src":"3510:9:10","type":""},{"name":"value0","nativeSrc":"3521:6:10","nodeType":"YulTypedName","src":"3521:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3532:4:10","nodeType":"YulTypedName","src":"3532:4:10","type":""}],"src":"3440:177:10"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50336040518060400160405280600b81526020016a25b7b232b2102a37b5b2b760a91b815250604051806040016040528060038152602001624b544b60e81b8152508160039081610061919061031a565b50600461006e828261031a565b5050506001600160a01b0381166100a057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100a9816100c5565b506100c0336b033b2e3c9fd0803ce8000000610117565b6103ff565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101415760405163ec442f0560e01b815260006004820152602401610097565b61014d60008383610151565b5050565b6001600160a01b03831661017c57806002600082825461017191906103d8565b909155506101ee9050565b6001600160a01b038316600090815260208190526040902054818110156101cf5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610097565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661020a57600280548290039055610229565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161026e91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102a557607f821691505b6020821081036102c557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031557806000526020600020601f840160051c810160208510156102f25750805b601f840160051c820191505b8181101561031257600081556001016102fe565b50505b505050565b81516001600160401b038111156103335761033361027b565b610347816103418454610291565b846102cb565b6020601f82116001811461037b57600083156103635750848201515b600019600385901b1c1916600184901b178455610312565b600084815260208120601f198516915b828110156103ab578785015182556020948501946001909201910161038b565b50848210156103c95786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103f957634e487b7160e01b600052601160045260246000fd5b92915050565b610b2f8061040e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806342966c68116100a25780638da5cb5b116100715780638da5cb5b1461022a57806395d89b4114610245578063a9059cbb1461024d578063dd62ed3e14610260578063f2fde38b1461029957600080fd5b806342966c68146101d357806370a08231146101e6578063715018a61461020f57806379cc67901461021757600080fd5b806318160ddd116100e957806318160ddd1461017957806323b872dd1461018b578063313ce5671461019e57806332cb6b0c146101ad57806340c10f19146101c057600080fd5b80630614117a1461011b578063069c9fae1461012557806306fdde0314610138578063095ea7b314610156575b600080fd5b6101236102ac565b005b610123610133366004610959565b6102f0565b61014061038f565b60405161014d9190610983565b60405180910390f35b610169610164366004610959565b610421565b604051901515815260200161014d565b6002545b60405190815260200161014d565b6101696101993660046109d1565b61043b565b6040516012815260200161014d565b61017d6b033b2e3c9fd0803ce800000081565b6101236101ce366004610959565b61045f565b6101236101e1366004610a0e565b6104de565b61017d6101f4366004610a27565b6001600160a01b031660009081526020819052604090205490565b6101236104e8565b610123610225366004610959565b6104fc565b6005546040516001600160a01b03909116815260200161014d565b610140610511565b61016961025b366004610959565b610520565b61017d61026e366004610a49565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101236102a7366004610a27565b61052e565b6102b4610569565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156102ed573d6000803e3d6000fd5b50565b6102f8610569565b816001600160a01b031663a9059cbb6103196005546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190610a7c565b505050565b60606003805461039e90610a9e565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90610a9e565b80156104175780601f106103ec57610100808354040283529160200191610417565b820191906000526020600020905b8154815290600101906020018083116103fa57829003601f168201915b5050505050905090565b60003361042f818585610596565b60019150505b92915050565b6000336104498582856105a3565b610454858585610621565b506001949350505050565b610467610569565b6b033b2e3c9fd0803ce80000008161047e60025490565b6104889190610ad8565b11156104d05760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b60448201526064015b60405180910390fd5b6104da8282610680565b5050565b6102ed33826106b6565b6104f0610569565b6104fa60006106ec565b565b6105078233836105a3565b6104da82826106b6565b60606004805461039e90610a9e565b60003361042f818585610621565b610536610569565b6001600160a01b03811661056057604051631e4fbdf760e01b8152600060048201526024016104c7565b6102ed816106ec565b6005546001600160a01b031633146104fa5760405163118cdaa760e01b81523360048201526024016104c7565b61038a838383600161073e565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461061b578181101561060c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104c7565b61061b8484848403600061073e565b50505050565b6001600160a01b03831661064b57604051634b637e8f60e11b8152600060048201526024016104c7565b6001600160a01b0382166106755760405163ec442f0560e01b8152600060048201526024016104c7565b61038a838383610813565b6001600160a01b0382166106aa5760405163ec442f0560e01b8152600060048201526024016104c7565b6104da60008383610813565b6001600160a01b0382166106e057604051634b637e8f60e11b8152600060048201526024016104c7565b6104da82600083610813565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166107685760405163e602df0560e01b8152600060048201526024016104c7565b6001600160a01b03831661079257604051634a1406b160e11b8152600060048201526024016104c7565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561061b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161080591815260200190565b60405180910390a350505050565b6001600160a01b03831661083e5780600260008282546108339190610ad8565b909155506108b09050565b6001600160a01b038316600090815260208190526040902054818110156108915760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104c7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108cc576002805482900390556108eb565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161093091815260200190565b60405180910390a3505050565b80356001600160a01b038116811461095457600080fd5b919050565b6000806040838503121561096c57600080fd5b6109758361093d565b946020939093013593505050565b602081526000825180602084015260005b818110156109b15760208186018101516040868401015201610994565b506000604082850101526040601f19601f83011684010191505092915050565b6000806000606084860312156109e657600080fd5b6109ef8461093d565b92506109fd6020850161093d565b929592945050506040919091013590565b600060208284031215610a2057600080fd5b5035919050565b600060208284031215610a3957600080fd5b610a428261093d565b9392505050565b60008060408385031215610a5c57600080fd5b610a658361093d565b9150610a736020840161093d565b90509250929050565b600060208284031215610a8e57600080fd5b81518015158114610a4257600080fd5b600181811c90821680610ab257607f821691505b602082108103610ad257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561043557634e487b7160e01b600052601160045260246000fdfea2646970667358221220cca5a3c7a1458effde40ce0ac1250945fcad21861cbc249e28137900777825fa64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x25B7B232B2102A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4B544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x31A JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x6E DUP3 DUP3 PUSH2 0x31A JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9 DUP2 PUSH2 0xC5 JUMP JUMPDEST POP PUSH2 0xC0 CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x117 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x141 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0x14D PUSH1 0x0 DUP4 DUP4 PUSH2 0x151 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1EE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20A JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x315 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2FE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x27B JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x341 DUP5 SLOAD PUSH2 0x291 JUMP JUMPDEST DUP5 PUSH2 0x2CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x363 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x312 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AB JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x38B JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3C9 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2F DUP1 PUSH2 0x40E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x614117A EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x69C9FAE EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH2 0x169 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH2 0x17D PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH2 0x140 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F8 PUSH2 0x569 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x319 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x417 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x417 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x42F DUP2 DUP6 DUP6 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x449 DUP6 DUP3 DUP6 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x454 DUP6 DUP6 DUP6 PUSH2 0x621 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x467 PUSH2 0x569 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 PUSH2 0x47E PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x488 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST GT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x45786365656473206D617820737570706C79 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DA DUP3 DUP3 PUSH2 0x680 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2ED CALLER DUP3 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x4FA PUSH1 0x0 PUSH2 0x6EC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x507 DUP3 CALLER DUP4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x4DA DUP3 DUP3 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x42F DUP2 DUP6 DUP6 PUSH2 0x621 JUMP JUMPDEST PUSH2 0x536 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x38A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x61B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x61B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x73E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x38A DUP4 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x4DA PUSH1 0x0 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x4DA DUP3 PUSH1 0x0 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x61B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x805 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x83E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8B0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8CC JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x930 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x975 DUP4 PUSH2 0x93D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x994 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9EF DUP5 PUSH2 0x93D JUMP JUMPDEST SWAP3 POP PUSH2 0x9FD PUSH1 0x20 DUP6 ADD PUSH2 0x93D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA42 DUP3 PUSH2 0x93D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 PUSH2 0x93D JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 PUSH1 0x20 DUP5 ADD PUSH2 0x93D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x435 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xA5 LOG3 0xC7 LOG1 GASLIMIT DUP15 SELFDESTRUCT 0xDE BLOCKHASH 0xCE EXP 0xC1 0x25 MULMOD GASLIMIT 0xFC 0xAD 0x21 DUP7 SHR 0xBC 0x24 SWAP15 0x28 SGT PUSH26 0x777825FA64736F6C634300081C003300000000000000000000 ","sourceMap":"250:975:9:-:0;;;418:169;;;;;;;;;;485:10;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2801:51:10;2774:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;551:29:9::2;557:10;348:22;551:5;:29::i;:::-;250:975:::0;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2801:51:10;2774:18;;7835:32:2;2655:203:10;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3310:32:10;;6649:50:2;;;3292:51:10;3359:18;;;3352:34;;;3402:18;;;3395:34;;;3265:18;;6649:50:2;3090:345:10;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3586::10;;3574:2;3559:18;;3440:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:10;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:10;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:10;;;2500:26;2451:89;-1:-1:-1;;1308:1:10;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:10;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:10;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:10;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:10:o;2863:222::-;2928:9;;;2949:10;;;2946:133;;;3001:10;2996:3;2992:20;2989:1;2982:31;3036:4;3033:1;3026:15;3064:4;3061:1;3054:15;2946:133;2863:222;;;;:::o;3440:177::-;250:975:9;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_SUPPLY_1750":{"entryPoint":null,"id":1750,"parameterSlots":0,"returnSlots":0},"@_approve_690":{"entryPoint":1430,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1854,"id":750,"parameterSlots":4,"returnSlots":0},"@_burn_672":{"entryPoint":1718,"id":672,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1385,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_639":{"entryPoint":1664,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_961":{"entryPoint":null,"id":961,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":1443,"id":798,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":1772,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_529":{"entryPoint":1569,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":2067,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":null,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":1057,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":null,"id":385,"parameterSlots":1,"returnSlots":1},"@burnFrom_922":{"entryPoint":1276,"id":922,"parameterSlots":2,"returnSlots":0},"@burn_901":{"entryPoint":1246,"id":901,"parameterSlots":1,"returnSlots":0},"@decimals_363":{"entryPoint":null,"id":363,"parameterSlots":0,"returnSlots":1},"@mint_1793":{"entryPoint":1119,"id":1793,"parameterSlots":2,"returnSlots":0},"@name_345":{"entryPoint":911,"id":345,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@recoverETH_1831":{"entryPoint":684,"id":1831,"parameterSlots":0,"returnSlots":0},"@recoverTokens_1812":{"entryPoint":752,"id":1812,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1256,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_354":{"entryPoint":1297,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":null,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":1083,"id":482,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1326,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_409":{"entryPoint":1312,"id":409,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2365,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2633,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2513,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2393,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2776,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2718,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:4733:10","nodeType":"YulBlock","src":"0:4733:10","statements":[{"nativeSrc":"6:3:10","nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nativeSrc":"63:124:10","nodeType":"YulBlock","src":"63:124:10","statements":[{"nativeSrc":"73:29:10","nodeType":"YulAssignment","src":"73:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:10","nodeType":"YulIdentifier","src":"95:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:10","nodeType":"YulIdentifier","src":"82:12:10"},"nativeSrc":"82:20:10","nodeType":"YulFunctionCall","src":"82:20:10"},"variableNames":[{"name":"value","nativeSrc":"73:5:10","nodeType":"YulIdentifier","src":"73:5:10"}]},{"body":{"nativeSrc":"165:16:10","nodeType":"YulBlock","src":"165:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:10","nodeType":"YulLiteral","src":"174:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:10","nodeType":"YulLiteral","src":"177:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:10","nodeType":"YulIdentifier","src":"167:6:10"},"nativeSrc":"167:12:10","nodeType":"YulFunctionCall","src":"167:12:10"},"nativeSrc":"167:12:10","nodeType":"YulExpressionStatement","src":"167:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:10","nodeType":"YulIdentifier","src":"124:5:10"},{"arguments":[{"name":"value","nativeSrc":"135:5:10","nodeType":"YulIdentifier","src":"135:5:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:10","nodeType":"YulLiteral","src":"150:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:10","nodeType":"YulLiteral","src":"155:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:10","nodeType":"YulIdentifier","src":"146:3:10"},"nativeSrc":"146:11:10","nodeType":"YulFunctionCall","src":"146:11:10"},{"kind":"number","nativeSrc":"159:1:10","nodeType":"YulLiteral","src":"159:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:10","nodeType":"YulIdentifier","src":"142:3:10"},"nativeSrc":"142:19:10","nodeType":"YulFunctionCall","src":"142:19:10"}],"functionName":{"name":"and","nativeSrc":"131:3:10","nodeType":"YulIdentifier","src":"131:3:10"},"nativeSrc":"131:31:10","nodeType":"YulFunctionCall","src":"131:31:10"}],"functionName":{"name":"eq","nativeSrc":"121:2:10","nodeType":"YulIdentifier","src":"121:2:10"},"nativeSrc":"121:42:10","nodeType":"YulFunctionCall","src":"121:42:10"}],"functionName":{"name":"iszero","nativeSrc":"114:6:10","nodeType":"YulIdentifier","src":"114:6:10"},"nativeSrc":"114:50:10","nodeType":"YulFunctionCall","src":"114:50:10"},"nativeSrc":"111:70:10","nodeType":"YulIf","src":"111:70:10"}]},"name":"abi_decode_address","nativeSrc":"14:173:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:10","nodeType":"YulTypedName","src":"42:6:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:10","nodeType":"YulTypedName","src":"53:5:10","type":""}],"src":"14:173:10"},{"body":{"nativeSrc":"279:213:10","nodeType":"YulBlock","src":"279:213:10","statements":[{"body":{"nativeSrc":"325:16:10","nodeType":"YulBlock","src":"325:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"334:1:10","nodeType":"YulLiteral","src":"334:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"337:1:10","nodeType":"YulLiteral","src":"337:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"327:6:10","nodeType":"YulIdentifier","src":"327:6:10"},"nativeSrc":"327:12:10","nodeType":"YulFunctionCall","src":"327:12:10"},"nativeSrc":"327:12:10","nodeType":"YulExpressionStatement","src":"327:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"300:7:10","nodeType":"YulIdentifier","src":"300:7:10"},{"name":"headStart","nativeSrc":"309:9:10","nodeType":"YulIdentifier","src":"309:9:10"}],"functionName":{"name":"sub","nativeSrc":"296:3:10","nodeType":"YulIdentifier","src":"296:3:10"},"nativeSrc":"296:23:10","nodeType":"YulFunctionCall","src":"296:23:10"},{"kind":"number","nativeSrc":"321:2:10","nodeType":"YulLiteral","src":"321:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"292:3:10","nodeType":"YulIdentifier","src":"292:3:10"},"nativeSrc":"292:32:10","nodeType":"YulFunctionCall","src":"292:32:10"},"nativeSrc":"289:52:10","nodeType":"YulIf","src":"289:52:10"},{"nativeSrc":"350:39:10","nodeType":"YulAssignment","src":"350:39:10","value":{"arguments":[{"name":"headStart","nativeSrc":"379:9:10","nodeType":"YulIdentifier","src":"379:9:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"360:18:10","nodeType":"YulIdentifier","src":"360:18:10"},"nativeSrc":"360:29:10","nodeType":"YulFunctionCall","src":"360:29:10"},"variableNames":[{"name":"value0","nativeSrc":"350:6:10","nodeType":"YulIdentifier","src":"350:6:10"}]},{"nativeSrc":"398:14:10","nodeType":"YulVariableDeclaration","src":"398:14:10","value":{"kind":"number","nativeSrc":"411:1:10","nodeType":"YulLiteral","src":"411:1:10","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"402:5:10","nodeType":"YulTypedName","src":"402:5:10","type":""}]},{"nativeSrc":"421:41:10","nodeType":"YulAssignment","src":"421:41:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"447:9:10","nodeType":"YulIdentifier","src":"447:9:10"},{"kind":"number","nativeSrc":"458:2:10","nodeType":"YulLiteral","src":"458:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"443:3:10","nodeType":"YulIdentifier","src":"443:3:10"},"nativeSrc":"443:18:10","nodeType":"YulFunctionCall","src":"443:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"430:12:10","nodeType":"YulIdentifier","src":"430:12:10"},"nativeSrc":"430:32:10","nodeType":"YulFunctionCall","src":"430:32:10"},"variableNames":[{"name":"value","nativeSrc":"421:5:10","nodeType":"YulIdentifier","src":"421:5:10"}]},{"nativeSrc":"471:15:10","nodeType":"YulAssignment","src":"471:15:10","value":{"name":"value","nativeSrc":"481:5:10","nodeType":"YulIdentifier","src":"481:5:10"},"variableNames":[{"name":"value1","nativeSrc":"471:6:10","nodeType":"YulIdentifier","src":"471:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"192:300:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"237:9:10","nodeType":"YulTypedName","src":"237:9:10","type":""},{"name":"dataEnd","nativeSrc":"248:7:10","nodeType":"YulTypedName","src":"248:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"260:6:10","nodeType":"YulTypedName","src":"260:6:10","type":""},{"name":"value1","nativeSrc":"268:6:10","nodeType":"YulTypedName","src":"268:6:10","type":""}],"src":"192:300:10"},{"body":{"nativeSrc":"618:406:10","nodeType":"YulBlock","src":"618:406:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"635:9:10","nodeType":"YulIdentifier","src":"635:9:10"},{"kind":"number","nativeSrc":"646:2:10","nodeType":"YulLiteral","src":"646:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"628:6:10","nodeType":"YulIdentifier","src":"628:6:10"},"nativeSrc":"628:21:10","nodeType":"YulFunctionCall","src":"628:21:10"},"nativeSrc":"628:21:10","nodeType":"YulExpressionStatement","src":"628:21:10"},{"nativeSrc":"658:27:10","nodeType":"YulVariableDeclaration","src":"658:27:10","value":{"arguments":[{"name":"value0","nativeSrc":"678:6:10","nodeType":"YulIdentifier","src":"678:6:10"}],"functionName":{"name":"mload","nativeSrc":"672:5:10","nodeType":"YulIdentifier","src":"672:5:10"},"nativeSrc":"672:13:10","nodeType":"YulFunctionCall","src":"672:13:10"},"variables":[{"name":"length","nativeSrc":"662:6:10","nodeType":"YulTypedName","src":"662:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"705:9:10","nodeType":"YulIdentifier","src":"705:9:10"},{"kind":"number","nativeSrc":"716:2:10","nodeType":"YulLiteral","src":"716:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"701:3:10","nodeType":"YulIdentifier","src":"701:3:10"},"nativeSrc":"701:18:10","nodeType":"YulFunctionCall","src":"701:18:10"},{"name":"length","nativeSrc":"721:6:10","nodeType":"YulIdentifier","src":"721:6:10"}],"functionName":{"name":"mstore","nativeSrc":"694:6:10","nodeType":"YulIdentifier","src":"694:6:10"},"nativeSrc":"694:34:10","nodeType":"YulFunctionCall","src":"694:34:10"},"nativeSrc":"694:34:10","nodeType":"YulExpressionStatement","src":"694:34:10"},{"nativeSrc":"737:10:10","nodeType":"YulVariableDeclaration","src":"737:10:10","value":{"kind":"number","nativeSrc":"746:1:10","nodeType":"YulLiteral","src":"746:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"741:1:10","nodeType":"YulTypedName","src":"741:1:10","type":""}]},{"body":{"nativeSrc":"806:90:10","nodeType":"YulBlock","src":"806:90:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"835:9:10","nodeType":"YulIdentifier","src":"835:9:10"},{"name":"i","nativeSrc":"846:1:10","nodeType":"YulIdentifier","src":"846:1:10"}],"functionName":{"name":"add","nativeSrc":"831:3:10","nodeType":"YulIdentifier","src":"831:3:10"},"nativeSrc":"831:17:10","nodeType":"YulFunctionCall","src":"831:17:10"},{"kind":"number","nativeSrc":"850:2:10","nodeType":"YulLiteral","src":"850:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"827:3:10","nodeType":"YulIdentifier","src":"827:3:10"},"nativeSrc":"827:26:10","nodeType":"YulFunctionCall","src":"827:26:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"869:6:10","nodeType":"YulIdentifier","src":"869:6:10"},{"name":"i","nativeSrc":"877:1:10","nodeType":"YulIdentifier","src":"877:1:10"}],"functionName":{"name":"add","nativeSrc":"865:3:10","nodeType":"YulIdentifier","src":"865:3:10"},"nativeSrc":"865:14:10","nodeType":"YulFunctionCall","src":"865:14:10"},{"kind":"number","nativeSrc":"881:2:10","nodeType":"YulLiteral","src":"881:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"861:3:10","nodeType":"YulIdentifier","src":"861:3:10"},"nativeSrc":"861:23:10","nodeType":"YulFunctionCall","src":"861:23:10"}],"functionName":{"name":"mload","nativeSrc":"855:5:10","nodeType":"YulIdentifier","src":"855:5:10"},"nativeSrc":"855:30:10","nodeType":"YulFunctionCall","src":"855:30:10"}],"functionName":{"name":"mstore","nativeSrc":"820:6:10","nodeType":"YulIdentifier","src":"820:6:10"},"nativeSrc":"820:66:10","nodeType":"YulFunctionCall","src":"820:66:10"},"nativeSrc":"820:66:10","nodeType":"YulExpressionStatement","src":"820:66:10"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"767:1:10","nodeType":"YulIdentifier","src":"767:1:10"},{"name":"length","nativeSrc":"770:6:10","nodeType":"YulIdentifier","src":"770:6:10"}],"functionName":{"name":"lt","nativeSrc":"764:2:10","nodeType":"YulIdentifier","src":"764:2:10"},"nativeSrc":"764:13:10","nodeType":"YulFunctionCall","src":"764:13:10"},"nativeSrc":"756:140:10","nodeType":"YulForLoop","post":{"nativeSrc":"778:19:10","nodeType":"YulBlock","src":"778:19:10","statements":[{"nativeSrc":"780:15:10","nodeType":"YulAssignment","src":"780:15:10","value":{"arguments":[{"name":"i","nativeSrc":"789:1:10","nodeType":"YulIdentifier","src":"789:1:10"},{"kind":"number","nativeSrc":"792:2:10","nodeType":"YulLiteral","src":"792:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"785:3:10","nodeType":"YulIdentifier","src":"785:3:10"},"nativeSrc":"785:10:10","nodeType":"YulFunctionCall","src":"785:10:10"},"variableNames":[{"name":"i","nativeSrc":"780:1:10","nodeType":"YulIdentifier","src":"780:1:10"}]}]},"pre":{"nativeSrc":"760:3:10","nodeType":"YulBlock","src":"760:3:10","statements":[]},"src":"756:140:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"920:9:10","nodeType":"YulIdentifier","src":"920:9:10"},{"name":"length","nativeSrc":"931:6:10","nodeType":"YulIdentifier","src":"931:6:10"}],"functionName":{"name":"add","nativeSrc":"916:3:10","nodeType":"YulIdentifier","src":"916:3:10"},"nativeSrc":"916:22:10","nodeType":"YulFunctionCall","src":"916:22:10"},{"kind":"number","nativeSrc":"940:2:10","nodeType":"YulLiteral","src":"940:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"912:3:10","nodeType":"YulIdentifier","src":"912:3:10"},"nativeSrc":"912:31:10","nodeType":"YulFunctionCall","src":"912:31:10"},{"kind":"number","nativeSrc":"945:1:10","nodeType":"YulLiteral","src":"945:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"905:6:10","nodeType":"YulIdentifier","src":"905:6:10"},"nativeSrc":"905:42:10","nodeType":"YulFunctionCall","src":"905:42:10"},"nativeSrc":"905:42:10","nodeType":"YulExpressionStatement","src":"905:42:10"},{"nativeSrc":"956:62:10","nodeType":"YulAssignment","src":"956:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"972:9:10","nodeType":"YulIdentifier","src":"972:9:10"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"991:6:10","nodeType":"YulIdentifier","src":"991:6:10"},{"kind":"number","nativeSrc":"999:2:10","nodeType":"YulLiteral","src":"999:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"987:3:10","nodeType":"YulIdentifier","src":"987:3:10"},"nativeSrc":"987:15:10","nodeType":"YulFunctionCall","src":"987:15:10"},{"arguments":[{"kind":"number","nativeSrc":"1008:2:10","nodeType":"YulLiteral","src":"1008:2:10","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1004:3:10","nodeType":"YulIdentifier","src":"1004:3:10"},"nativeSrc":"1004:7:10","nodeType":"YulFunctionCall","src":"1004:7:10"}],"functionName":{"name":"and","nativeSrc":"983:3:10","nodeType":"YulIdentifier","src":"983:3:10"},"nativeSrc":"983:29:10","nodeType":"YulFunctionCall","src":"983:29:10"}],"functionName":{"name":"add","nativeSrc":"968:3:10","nodeType":"YulIdentifier","src":"968:3:10"},"nativeSrc":"968:45:10","nodeType":"YulFunctionCall","src":"968:45:10"},{"kind":"number","nativeSrc":"1015:2:10","nodeType":"YulLiteral","src":"1015:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"964:3:10","nodeType":"YulIdentifier","src":"964:3:10"},"nativeSrc":"964:54:10","nodeType":"YulFunctionCall","src":"964:54:10"},"variableNames":[{"name":"tail","nativeSrc":"956:4:10","nodeType":"YulIdentifier","src":"956:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"497:527:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"587:9:10","nodeType":"YulTypedName","src":"587:9:10","type":""},{"name":"value0","nativeSrc":"598:6:10","nodeType":"YulTypedName","src":"598:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"609:4:10","nodeType":"YulTypedName","src":"609:4:10","type":""}],"src":"497:527:10"},{"body":{"nativeSrc":"1124:92:10","nodeType":"YulBlock","src":"1124:92:10","statements":[{"nativeSrc":"1134:26:10","nodeType":"YulAssignment","src":"1134:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1146:9:10","nodeType":"YulIdentifier","src":"1146:9:10"},{"kind":"number","nativeSrc":"1157:2:10","nodeType":"YulLiteral","src":"1157:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1142:3:10","nodeType":"YulIdentifier","src":"1142:3:10"},"nativeSrc":"1142:18:10","nodeType":"YulFunctionCall","src":"1142:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1134:4:10","nodeType":"YulIdentifier","src":"1134:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1176:9:10","nodeType":"YulIdentifier","src":"1176:9:10"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1201:6:10","nodeType":"YulIdentifier","src":"1201:6:10"}],"functionName":{"name":"iszero","nativeSrc":"1194:6:10","nodeType":"YulIdentifier","src":"1194:6:10"},"nativeSrc":"1194:14:10","nodeType":"YulFunctionCall","src":"1194:14:10"}],"functionName":{"name":"iszero","nativeSrc":"1187:6:10","nodeType":"YulIdentifier","src":"1187:6:10"},"nativeSrc":"1187:22:10","nodeType":"YulFunctionCall","src":"1187:22:10"}],"functionName":{"name":"mstore","nativeSrc":"1169:6:10","nodeType":"YulIdentifier","src":"1169:6:10"},"nativeSrc":"1169:41:10","nodeType":"YulFunctionCall","src":"1169:41:10"},"nativeSrc":"1169:41:10","nodeType":"YulExpressionStatement","src":"1169:41:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1029:187:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1093:9:10","nodeType":"YulTypedName","src":"1093:9:10","type":""},{"name":"value0","nativeSrc":"1104:6:10","nodeType":"YulTypedName","src":"1104:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1115:4:10","nodeType":"YulTypedName","src":"1115:4:10","type":""}],"src":"1029:187:10"},{"body":{"nativeSrc":"1322:76:10","nodeType":"YulBlock","src":"1322:76:10","statements":[{"nativeSrc":"1332:26:10","nodeType":"YulAssignment","src":"1332:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1344:9:10","nodeType":"YulIdentifier","src":"1344:9:10"},{"kind":"number","nativeSrc":"1355:2:10","nodeType":"YulLiteral","src":"1355:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1340:3:10","nodeType":"YulIdentifier","src":"1340:3:10"},"nativeSrc":"1340:18:10","nodeType":"YulFunctionCall","src":"1340:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1332:4:10","nodeType":"YulIdentifier","src":"1332:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1374:9:10","nodeType":"YulIdentifier","src":"1374:9:10"},{"name":"value0","nativeSrc":"1385:6:10","nodeType":"YulIdentifier","src":"1385:6:10"}],"functionName":{"name":"mstore","nativeSrc":"1367:6:10","nodeType":"YulIdentifier","src":"1367:6:10"},"nativeSrc":"1367:25:10","nodeType":"YulFunctionCall","src":"1367:25:10"},"nativeSrc":"1367:25:10","nodeType":"YulExpressionStatement","src":"1367:25:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1221:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1291:9:10","nodeType":"YulTypedName","src":"1291:9:10","type":""},{"name":"value0","nativeSrc":"1302:6:10","nodeType":"YulTypedName","src":"1302:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1313:4:10","nodeType":"YulTypedName","src":"1313:4:10","type":""}],"src":"1221:177:10"},{"body":{"nativeSrc":"1507:270:10","nodeType":"YulBlock","src":"1507:270:10","statements":[{"body":{"nativeSrc":"1553:16:10","nodeType":"YulBlock","src":"1553:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1562:1:10","nodeType":"YulLiteral","src":"1562:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1565:1:10","nodeType":"YulLiteral","src":"1565:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1555:6:10","nodeType":"YulIdentifier","src":"1555:6:10"},"nativeSrc":"1555:12:10","nodeType":"YulFunctionCall","src":"1555:12:10"},"nativeSrc":"1555:12:10","nodeType":"YulExpressionStatement","src":"1555:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1528:7:10","nodeType":"YulIdentifier","src":"1528:7:10"},{"name":"headStart","nativeSrc":"1537:9:10","nodeType":"YulIdentifier","src":"1537:9:10"}],"functionName":{"name":"sub","nativeSrc":"1524:3:10","nodeType":"YulIdentifier","src":"1524:3:10"},"nativeSrc":"1524:23:10","nodeType":"YulFunctionCall","src":"1524:23:10"},{"kind":"number","nativeSrc":"1549:2:10","nodeType":"YulLiteral","src":"1549:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1520:3:10","nodeType":"YulIdentifier","src":"1520:3:10"},"nativeSrc":"1520:32:10","nodeType":"YulFunctionCall","src":"1520:32:10"},"nativeSrc":"1517:52:10","nodeType":"YulIf","src":"1517:52:10"},{"nativeSrc":"1578:39:10","nodeType":"YulAssignment","src":"1578:39:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1607:9:10","nodeType":"YulIdentifier","src":"1607:9:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1588:18:10","nodeType":"YulIdentifier","src":"1588:18:10"},"nativeSrc":"1588:29:10","nodeType":"YulFunctionCall","src":"1588:29:10"},"variableNames":[{"name":"value0","nativeSrc":"1578:6:10","nodeType":"YulIdentifier","src":"1578:6:10"}]},{"nativeSrc":"1626:48:10","nodeType":"YulAssignment","src":"1626:48:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1659:9:10","nodeType":"YulIdentifier","src":"1659:9:10"},{"kind":"number","nativeSrc":"1670:2:10","nodeType":"YulLiteral","src":"1670:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1655:3:10","nodeType":"YulIdentifier","src":"1655:3:10"},"nativeSrc":"1655:18:10","nodeType":"YulFunctionCall","src":"1655:18:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1636:18:10","nodeType":"YulIdentifier","src":"1636:18:10"},"nativeSrc":"1636:38:10","nodeType":"YulFunctionCall","src":"1636:38:10"},"variableNames":[{"name":"value1","nativeSrc":"1626:6:10","nodeType":"YulIdentifier","src":"1626:6:10"}]},{"nativeSrc":"1683:14:10","nodeType":"YulVariableDeclaration","src":"1683:14:10","value":{"kind":"number","nativeSrc":"1696:1:10","nodeType":"YulLiteral","src":"1696:1:10","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1687:5:10","nodeType":"YulTypedName","src":"1687:5:10","type":""}]},{"nativeSrc":"1706:41:10","nodeType":"YulAssignment","src":"1706:41:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1732:9:10","nodeType":"YulIdentifier","src":"1732:9:10"},{"kind":"number","nativeSrc":"1743:2:10","nodeType":"YulLiteral","src":"1743:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1728:3:10","nodeType":"YulIdentifier","src":"1728:3:10"},"nativeSrc":"1728:18:10","nodeType":"YulFunctionCall","src":"1728:18:10"}],"functionName":{"name":"calldataload","nativeSrc":"1715:12:10","nodeType":"YulIdentifier","src":"1715:12:10"},"nativeSrc":"1715:32:10","nodeType":"YulFunctionCall","src":"1715:32:10"},"variableNames":[{"name":"value","nativeSrc":"1706:5:10","nodeType":"YulIdentifier","src":"1706:5:10"}]},{"nativeSrc":"1756:15:10","nodeType":"YulAssignment","src":"1756:15:10","value":{"name":"value","nativeSrc":"1766:5:10","nodeType":"YulIdentifier","src":"1766:5:10"},"variableNames":[{"name":"value2","nativeSrc":"1756:6:10","nodeType":"YulIdentifier","src":"1756:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1403:374:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1457:9:10","nodeType":"YulTypedName","src":"1457:9:10","type":""},{"name":"dataEnd","nativeSrc":"1468:7:10","nodeType":"YulTypedName","src":"1468:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1480:6:10","nodeType":"YulTypedName","src":"1480:6:10","type":""},{"name":"value1","nativeSrc":"1488:6:10","nodeType":"YulTypedName","src":"1488:6:10","type":""},{"name":"value2","nativeSrc":"1496:6:10","nodeType":"YulTypedName","src":"1496:6:10","type":""}],"src":"1403:374:10"},{"body":{"nativeSrc":"1879:87:10","nodeType":"YulBlock","src":"1879:87:10","statements":[{"nativeSrc":"1889:26:10","nodeType":"YulAssignment","src":"1889:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1901:9:10","nodeType":"YulIdentifier","src":"1901:9:10"},{"kind":"number","nativeSrc":"1912:2:10","nodeType":"YulLiteral","src":"1912:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1897:3:10","nodeType":"YulIdentifier","src":"1897:3:10"},"nativeSrc":"1897:18:10","nodeType":"YulFunctionCall","src":"1897:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1889:4:10","nodeType":"YulIdentifier","src":"1889:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1931:9:10","nodeType":"YulIdentifier","src":"1931:9:10"},{"arguments":[{"name":"value0","nativeSrc":"1946:6:10","nodeType":"YulIdentifier","src":"1946:6:10"},{"kind":"number","nativeSrc":"1954:4:10","nodeType":"YulLiteral","src":"1954:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1942:3:10","nodeType":"YulIdentifier","src":"1942:3:10"},"nativeSrc":"1942:17:10","nodeType":"YulFunctionCall","src":"1942:17:10"}],"functionName":{"name":"mstore","nativeSrc":"1924:6:10","nodeType":"YulIdentifier","src":"1924:6:10"},"nativeSrc":"1924:36:10","nodeType":"YulFunctionCall","src":"1924:36:10"},"nativeSrc":"1924:36:10","nodeType":"YulExpressionStatement","src":"1924:36:10"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1782:184:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1848:9:10","nodeType":"YulTypedName","src":"1848:9:10","type":""},{"name":"value0","nativeSrc":"1859:6:10","nodeType":"YulTypedName","src":"1859:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1870:4:10","nodeType":"YulTypedName","src":"1870:4:10","type":""}],"src":"1782:184:10"},{"body":{"nativeSrc":"2041:156:10","nodeType":"YulBlock","src":"2041:156:10","statements":[{"body":{"nativeSrc":"2087:16:10","nodeType":"YulBlock","src":"2087:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2096:1:10","nodeType":"YulLiteral","src":"2096:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2099:1:10","nodeType":"YulLiteral","src":"2099:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2089:6:10","nodeType":"YulIdentifier","src":"2089:6:10"},"nativeSrc":"2089:12:10","nodeType":"YulFunctionCall","src":"2089:12:10"},"nativeSrc":"2089:12:10","nodeType":"YulExpressionStatement","src":"2089:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2062:7:10","nodeType":"YulIdentifier","src":"2062:7:10"},{"name":"headStart","nativeSrc":"2071:9:10","nodeType":"YulIdentifier","src":"2071:9:10"}],"functionName":{"name":"sub","nativeSrc":"2058:3:10","nodeType":"YulIdentifier","src":"2058:3:10"},"nativeSrc":"2058:23:10","nodeType":"YulFunctionCall","src":"2058:23:10"},{"kind":"number","nativeSrc":"2083:2:10","nodeType":"YulLiteral","src":"2083:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2054:3:10","nodeType":"YulIdentifier","src":"2054:3:10"},"nativeSrc":"2054:32:10","nodeType":"YulFunctionCall","src":"2054:32:10"},"nativeSrc":"2051:52:10","nodeType":"YulIf","src":"2051:52:10"},{"nativeSrc":"2112:14:10","nodeType":"YulVariableDeclaration","src":"2112:14:10","value":{"kind":"number","nativeSrc":"2125:1:10","nodeType":"YulLiteral","src":"2125:1:10","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2116:5:10","nodeType":"YulTypedName","src":"2116:5:10","type":""}]},{"nativeSrc":"2135:32:10","nodeType":"YulAssignment","src":"2135:32:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2157:9:10","nodeType":"YulIdentifier","src":"2157:9:10"}],"functionName":{"name":"calldataload","nativeSrc":"2144:12:10","nodeType":"YulIdentifier","src":"2144:12:10"},"nativeSrc":"2144:23:10","nodeType":"YulFunctionCall","src":"2144:23:10"},"variableNames":[{"name":"value","nativeSrc":"2135:5:10","nodeType":"YulIdentifier","src":"2135:5:10"}]},{"nativeSrc":"2176:15:10","nodeType":"YulAssignment","src":"2176:15:10","value":{"name":"value","nativeSrc":"2186:5:10","nodeType":"YulIdentifier","src":"2186:5:10"},"variableNames":[{"name":"value0","nativeSrc":"2176:6:10","nodeType":"YulIdentifier","src":"2176:6:10"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1971:226:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2007:9:10","nodeType":"YulTypedName","src":"2007:9:10","type":""},{"name":"dataEnd","nativeSrc":"2018:7:10","nodeType":"YulTypedName","src":"2018:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2030:6:10","nodeType":"YulTypedName","src":"2030:6:10","type":""}],"src":"1971:226:10"},{"body":{"nativeSrc":"2272:116:10","nodeType":"YulBlock","src":"2272:116:10","statements":[{"body":{"nativeSrc":"2318:16:10","nodeType":"YulBlock","src":"2318:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2327:1:10","nodeType":"YulLiteral","src":"2327:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2330:1:10","nodeType":"YulLiteral","src":"2330:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2320:6:10","nodeType":"YulIdentifier","src":"2320:6:10"},"nativeSrc":"2320:12:10","nodeType":"YulFunctionCall","src":"2320:12:10"},"nativeSrc":"2320:12:10","nodeType":"YulExpressionStatement","src":"2320:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2293:7:10","nodeType":"YulIdentifier","src":"2293:7:10"},{"name":"headStart","nativeSrc":"2302:9:10","nodeType":"YulIdentifier","src":"2302:9:10"}],"functionName":{"name":"sub","nativeSrc":"2289:3:10","nodeType":"YulIdentifier","src":"2289:3:10"},"nativeSrc":"2289:23:10","nodeType":"YulFunctionCall","src":"2289:23:10"},{"kind":"number","nativeSrc":"2314:2:10","nodeType":"YulLiteral","src":"2314:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2285:3:10","nodeType":"YulIdentifier","src":"2285:3:10"},"nativeSrc":"2285:32:10","nodeType":"YulFunctionCall","src":"2285:32:10"},"nativeSrc":"2282:52:10","nodeType":"YulIf","src":"2282:52:10"},{"nativeSrc":"2343:39:10","nodeType":"YulAssignment","src":"2343:39:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2372:9:10","nodeType":"YulIdentifier","src":"2372:9:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2353:18:10","nodeType":"YulIdentifier","src":"2353:18:10"},"nativeSrc":"2353:29:10","nodeType":"YulFunctionCall","src":"2353:29:10"},"variableNames":[{"name":"value0","nativeSrc":"2343:6:10","nodeType":"YulIdentifier","src":"2343:6:10"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2202:186:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2238:9:10","nodeType":"YulTypedName","src":"2238:9:10","type":""},{"name":"dataEnd","nativeSrc":"2249:7:10","nodeType":"YulTypedName","src":"2249:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2261:6:10","nodeType":"YulTypedName","src":"2261:6:10","type":""}],"src":"2202:186:10"},{"body":{"nativeSrc":"2494:102:10","nodeType":"YulBlock","src":"2494:102:10","statements":[{"nativeSrc":"2504:26:10","nodeType":"YulAssignment","src":"2504:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2516:9:10","nodeType":"YulIdentifier","src":"2516:9:10"},{"kind":"number","nativeSrc":"2527:2:10","nodeType":"YulLiteral","src":"2527:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2512:3:10","nodeType":"YulIdentifier","src":"2512:3:10"},"nativeSrc":"2512:18:10","nodeType":"YulFunctionCall","src":"2512:18:10"},"variableNames":[{"name":"tail","nativeSrc":"2504:4:10","nodeType":"YulIdentifier","src":"2504:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2546:9:10","nodeType":"YulIdentifier","src":"2546:9:10"},{"arguments":[{"name":"value0","nativeSrc":"2561:6:10","nodeType":"YulIdentifier","src":"2561:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2577:3:10","nodeType":"YulLiteral","src":"2577:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"2582:1:10","nodeType":"YulLiteral","src":"2582:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2573:3:10","nodeType":"YulIdentifier","src":"2573:3:10"},"nativeSrc":"2573:11:10","nodeType":"YulFunctionCall","src":"2573:11:10"},{"kind":"number","nativeSrc":"2586:1:10","nodeType":"YulLiteral","src":"2586:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2569:3:10","nodeType":"YulIdentifier","src":"2569:3:10"},"nativeSrc":"2569:19:10","nodeType":"YulFunctionCall","src":"2569:19:10"}],"functionName":{"name":"and","nativeSrc":"2557:3:10","nodeType":"YulIdentifier","src":"2557:3:10"},"nativeSrc":"2557:32:10","nodeType":"YulFunctionCall","src":"2557:32:10"}],"functionName":{"name":"mstore","nativeSrc":"2539:6:10","nodeType":"YulIdentifier","src":"2539:6:10"},"nativeSrc":"2539:51:10","nodeType":"YulFunctionCall","src":"2539:51:10"},"nativeSrc":"2539:51:10","nodeType":"YulExpressionStatement","src":"2539:51:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2393:203:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2463:9:10","nodeType":"YulTypedName","src":"2463:9:10","type":""},{"name":"value0","nativeSrc":"2474:6:10","nodeType":"YulTypedName","src":"2474:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2485:4:10","nodeType":"YulTypedName","src":"2485:4:10","type":""}],"src":"2393:203:10"},{"body":{"nativeSrc":"2688:173:10","nodeType":"YulBlock","src":"2688:173:10","statements":[{"body":{"nativeSrc":"2734:16:10","nodeType":"YulBlock","src":"2734:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2743:1:10","nodeType":"YulLiteral","src":"2743:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2746:1:10","nodeType":"YulLiteral","src":"2746:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2736:6:10","nodeType":"YulIdentifier","src":"2736:6:10"},"nativeSrc":"2736:12:10","nodeType":"YulFunctionCall","src":"2736:12:10"},"nativeSrc":"2736:12:10","nodeType":"YulExpressionStatement","src":"2736:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2709:7:10","nodeType":"YulIdentifier","src":"2709:7:10"},{"name":"headStart","nativeSrc":"2718:9:10","nodeType":"YulIdentifier","src":"2718:9:10"}],"functionName":{"name":"sub","nativeSrc":"2705:3:10","nodeType":"YulIdentifier","src":"2705:3:10"},"nativeSrc":"2705:23:10","nodeType":"YulFunctionCall","src":"2705:23:10"},{"kind":"number","nativeSrc":"2730:2:10","nodeType":"YulLiteral","src":"2730:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2701:3:10","nodeType":"YulIdentifier","src":"2701:3:10"},"nativeSrc":"2701:32:10","nodeType":"YulFunctionCall","src":"2701:32:10"},"nativeSrc":"2698:52:10","nodeType":"YulIf","src":"2698:52:10"},{"nativeSrc":"2759:39:10","nodeType":"YulAssignment","src":"2759:39:10","value":{"arguments":[{"name":"headStart","nativeSrc":"2788:9:10","nodeType":"YulIdentifier","src":"2788:9:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2769:18:10","nodeType":"YulIdentifier","src":"2769:18:10"},"nativeSrc":"2769:29:10","nodeType":"YulFunctionCall","src":"2769:29:10"},"variableNames":[{"name":"value0","nativeSrc":"2759:6:10","nodeType":"YulIdentifier","src":"2759:6:10"}]},{"nativeSrc":"2807:48:10","nodeType":"YulAssignment","src":"2807:48:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:10","nodeType":"YulIdentifier","src":"2840:9:10"},{"kind":"number","nativeSrc":"2851:2:10","nodeType":"YulLiteral","src":"2851:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2836:3:10","nodeType":"YulIdentifier","src":"2836:3:10"},"nativeSrc":"2836:18:10","nodeType":"YulFunctionCall","src":"2836:18:10"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2817:18:10","nodeType":"YulIdentifier","src":"2817:18:10"},"nativeSrc":"2817:38:10","nodeType":"YulFunctionCall","src":"2817:38:10"},"variableNames":[{"name":"value1","nativeSrc":"2807:6:10","nodeType":"YulIdentifier","src":"2807:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2601:260:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2646:9:10","nodeType":"YulTypedName","src":"2646:9:10","type":""},{"name":"dataEnd","nativeSrc":"2657:7:10","nodeType":"YulTypedName","src":"2657:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2669:6:10","nodeType":"YulTypedName","src":"2669:6:10","type":""},{"name":"value1","nativeSrc":"2677:6:10","nodeType":"YulTypedName","src":"2677:6:10","type":""}],"src":"2601:260:10"},{"body":{"nativeSrc":"2995:145:10","nodeType":"YulBlock","src":"2995:145:10","statements":[{"nativeSrc":"3005:26:10","nodeType":"YulAssignment","src":"3005:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3017:9:10","nodeType":"YulIdentifier","src":"3017:9:10"},{"kind":"number","nativeSrc":"3028:2:10","nodeType":"YulLiteral","src":"3028:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3013:3:10","nodeType":"YulIdentifier","src":"3013:3:10"},"nativeSrc":"3013:18:10","nodeType":"YulFunctionCall","src":"3013:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3005:4:10","nodeType":"YulIdentifier","src":"3005:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3047:9:10","nodeType":"YulIdentifier","src":"3047:9:10"},{"arguments":[{"name":"value0","nativeSrc":"3062:6:10","nodeType":"YulIdentifier","src":"3062:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3078:3:10","nodeType":"YulLiteral","src":"3078:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"3083:1:10","nodeType":"YulLiteral","src":"3083:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3074:3:10","nodeType":"YulIdentifier","src":"3074:3:10"},"nativeSrc":"3074:11:10","nodeType":"YulFunctionCall","src":"3074:11:10"},{"kind":"number","nativeSrc":"3087:1:10","nodeType":"YulLiteral","src":"3087:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3070:3:10","nodeType":"YulIdentifier","src":"3070:3:10"},"nativeSrc":"3070:19:10","nodeType":"YulFunctionCall","src":"3070:19:10"}],"functionName":{"name":"and","nativeSrc":"3058:3:10","nodeType":"YulIdentifier","src":"3058:3:10"},"nativeSrc":"3058:32:10","nodeType":"YulFunctionCall","src":"3058:32:10"}],"functionName":{"name":"mstore","nativeSrc":"3040:6:10","nodeType":"YulIdentifier","src":"3040:6:10"},"nativeSrc":"3040:51:10","nodeType":"YulFunctionCall","src":"3040:51:10"},"nativeSrc":"3040:51:10","nodeType":"YulExpressionStatement","src":"3040:51:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3111:9:10","nodeType":"YulIdentifier","src":"3111:9:10"},{"kind":"number","nativeSrc":"3122:2:10","nodeType":"YulLiteral","src":"3122:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3107:3:10","nodeType":"YulIdentifier","src":"3107:3:10"},"nativeSrc":"3107:18:10","nodeType":"YulFunctionCall","src":"3107:18:10"},{"name":"value1","nativeSrc":"3127:6:10","nodeType":"YulIdentifier","src":"3127:6:10"}],"functionName":{"name":"mstore","nativeSrc":"3100:6:10","nodeType":"YulIdentifier","src":"3100:6:10"},"nativeSrc":"3100:34:10","nodeType":"YulFunctionCall","src":"3100:34:10"},"nativeSrc":"3100:34:10","nodeType":"YulExpressionStatement","src":"3100:34:10"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"2866:274:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2956:9:10","nodeType":"YulTypedName","src":"2956:9:10","type":""},{"name":"value1","nativeSrc":"2967:6:10","nodeType":"YulTypedName","src":"2967:6:10","type":""},{"name":"value0","nativeSrc":"2975:6:10","nodeType":"YulTypedName","src":"2975:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2986:4:10","nodeType":"YulTypedName","src":"2986:4:10","type":""}],"src":"2866:274:10"},{"body":{"nativeSrc":"3223:199:10","nodeType":"YulBlock","src":"3223:199:10","statements":[{"body":{"nativeSrc":"3269:16:10","nodeType":"YulBlock","src":"3269:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3278:1:10","nodeType":"YulLiteral","src":"3278:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3281:1:10","nodeType":"YulLiteral","src":"3281:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3271:6:10","nodeType":"YulIdentifier","src":"3271:6:10"},"nativeSrc":"3271:12:10","nodeType":"YulFunctionCall","src":"3271:12:10"},"nativeSrc":"3271:12:10","nodeType":"YulExpressionStatement","src":"3271:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3244:7:10","nodeType":"YulIdentifier","src":"3244:7:10"},{"name":"headStart","nativeSrc":"3253:9:10","nodeType":"YulIdentifier","src":"3253:9:10"}],"functionName":{"name":"sub","nativeSrc":"3240:3:10","nodeType":"YulIdentifier","src":"3240:3:10"},"nativeSrc":"3240:23:10","nodeType":"YulFunctionCall","src":"3240:23:10"},{"kind":"number","nativeSrc":"3265:2:10","nodeType":"YulLiteral","src":"3265:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3236:3:10","nodeType":"YulIdentifier","src":"3236:3:10"},"nativeSrc":"3236:32:10","nodeType":"YulFunctionCall","src":"3236:32:10"},"nativeSrc":"3233:52:10","nodeType":"YulIf","src":"3233:52:10"},{"nativeSrc":"3294:29:10","nodeType":"YulVariableDeclaration","src":"3294:29:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3313:9:10","nodeType":"YulIdentifier","src":"3313:9:10"}],"functionName":{"name":"mload","nativeSrc":"3307:5:10","nodeType":"YulIdentifier","src":"3307:5:10"},"nativeSrc":"3307:16:10","nodeType":"YulFunctionCall","src":"3307:16:10"},"variables":[{"name":"value","nativeSrc":"3298:5:10","nodeType":"YulTypedName","src":"3298:5:10","type":""}]},{"body":{"nativeSrc":"3376:16:10","nodeType":"YulBlock","src":"3376:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3385:1:10","nodeType":"YulLiteral","src":"3385:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3388:1:10","nodeType":"YulLiteral","src":"3388:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3378:6:10","nodeType":"YulIdentifier","src":"3378:6:10"},"nativeSrc":"3378:12:10","nodeType":"YulFunctionCall","src":"3378:12:10"},"nativeSrc":"3378:12:10","nodeType":"YulExpressionStatement","src":"3378:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3345:5:10","nodeType":"YulIdentifier","src":"3345:5:10"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3366:5:10","nodeType":"YulIdentifier","src":"3366:5:10"}],"functionName":{"name":"iszero","nativeSrc":"3359:6:10","nodeType":"YulIdentifier","src":"3359:6:10"},"nativeSrc":"3359:13:10","nodeType":"YulFunctionCall","src":"3359:13:10"}],"functionName":{"name":"iszero","nativeSrc":"3352:6:10","nodeType":"YulIdentifier","src":"3352:6:10"},"nativeSrc":"3352:21:10","nodeType":"YulFunctionCall","src":"3352:21:10"}],"functionName":{"name":"eq","nativeSrc":"3342:2:10","nodeType":"YulIdentifier","src":"3342:2:10"},"nativeSrc":"3342:32:10","nodeType":"YulFunctionCall","src":"3342:32:10"}],"functionName":{"name":"iszero","nativeSrc":"3335:6:10","nodeType":"YulIdentifier","src":"3335:6:10"},"nativeSrc":"3335:40:10","nodeType":"YulFunctionCall","src":"3335:40:10"},"nativeSrc":"3332:60:10","nodeType":"YulIf","src":"3332:60:10"},{"nativeSrc":"3401:15:10","nodeType":"YulAssignment","src":"3401:15:10","value":{"name":"value","nativeSrc":"3411:5:10","nodeType":"YulIdentifier","src":"3411:5:10"},"variableNames":[{"name":"value0","nativeSrc":"3401:6:10","nodeType":"YulIdentifier","src":"3401:6:10"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"3145:277:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3189:9:10","nodeType":"YulTypedName","src":"3189:9:10","type":""},{"name":"dataEnd","nativeSrc":"3200:7:10","nodeType":"YulTypedName","src":"3200:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3212:6:10","nodeType":"YulTypedName","src":"3212:6:10","type":""}],"src":"3145:277:10"},{"body":{"nativeSrc":"3482:325:10","nodeType":"YulBlock","src":"3482:325:10","statements":[{"nativeSrc":"3492:22:10","nodeType":"YulAssignment","src":"3492:22:10","value":{"arguments":[{"kind":"number","nativeSrc":"3506:1:10","nodeType":"YulLiteral","src":"3506:1:10","type":"","value":"1"},{"name":"data","nativeSrc":"3509:4:10","nodeType":"YulIdentifier","src":"3509:4:10"}],"functionName":{"name":"shr","nativeSrc":"3502:3:10","nodeType":"YulIdentifier","src":"3502:3:10"},"nativeSrc":"3502:12:10","nodeType":"YulFunctionCall","src":"3502:12:10"},"variableNames":[{"name":"length","nativeSrc":"3492:6:10","nodeType":"YulIdentifier","src":"3492:6:10"}]},{"nativeSrc":"3523:38:10","nodeType":"YulVariableDeclaration","src":"3523:38:10","value":{"arguments":[{"name":"data","nativeSrc":"3553:4:10","nodeType":"YulIdentifier","src":"3553:4:10"},{"kind":"number","nativeSrc":"3559:1:10","nodeType":"YulLiteral","src":"3559:1:10","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"3549:3:10","nodeType":"YulIdentifier","src":"3549:3:10"},"nativeSrc":"3549:12:10","nodeType":"YulFunctionCall","src":"3549:12:10"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"3527:18:10","nodeType":"YulTypedName","src":"3527:18:10","type":""}]},{"body":{"nativeSrc":"3600:31:10","nodeType":"YulBlock","src":"3600:31:10","statements":[{"nativeSrc":"3602:27:10","nodeType":"YulAssignment","src":"3602:27:10","value":{"arguments":[{"name":"length","nativeSrc":"3616:6:10","nodeType":"YulIdentifier","src":"3616:6:10"},{"kind":"number","nativeSrc":"3624:4:10","nodeType":"YulLiteral","src":"3624:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"3612:3:10","nodeType":"YulIdentifier","src":"3612:3:10"},"nativeSrc":"3612:17:10","nodeType":"YulFunctionCall","src":"3612:17:10"},"variableNames":[{"name":"length","nativeSrc":"3602:6:10","nodeType":"YulIdentifier","src":"3602:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3580:18:10","nodeType":"YulIdentifier","src":"3580:18:10"}],"functionName":{"name":"iszero","nativeSrc":"3573:6:10","nodeType":"YulIdentifier","src":"3573:6:10"},"nativeSrc":"3573:26:10","nodeType":"YulFunctionCall","src":"3573:26:10"},"nativeSrc":"3570:61:10","nodeType":"YulIf","src":"3570:61:10"},{"body":{"nativeSrc":"3690:111:10","nodeType":"YulBlock","src":"3690:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3711:1:10","nodeType":"YulLiteral","src":"3711:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3718:3:10","nodeType":"YulLiteral","src":"3718:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"3723:10:10","nodeType":"YulLiteral","src":"3723:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3714:3:10","nodeType":"YulIdentifier","src":"3714:3:10"},"nativeSrc":"3714:20:10","nodeType":"YulFunctionCall","src":"3714:20:10"}],"functionName":{"name":"mstore","nativeSrc":"3704:6:10","nodeType":"YulIdentifier","src":"3704:6:10"},"nativeSrc":"3704:31:10","nodeType":"YulFunctionCall","src":"3704:31:10"},"nativeSrc":"3704:31:10","nodeType":"YulExpressionStatement","src":"3704:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3755:1:10","nodeType":"YulLiteral","src":"3755:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"3758:4:10","nodeType":"YulLiteral","src":"3758:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3748:6:10","nodeType":"YulIdentifier","src":"3748:6:10"},"nativeSrc":"3748:15:10","nodeType":"YulFunctionCall","src":"3748:15:10"},"nativeSrc":"3748:15:10","nodeType":"YulExpressionStatement","src":"3748:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3783:1:10","nodeType":"YulLiteral","src":"3783:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"3786:4:10","nodeType":"YulLiteral","src":"3786:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3776:6:10","nodeType":"YulIdentifier","src":"3776:6:10"},"nativeSrc":"3776:15:10","nodeType":"YulFunctionCall","src":"3776:15:10"},"nativeSrc":"3776:15:10","nodeType":"YulExpressionStatement","src":"3776:15:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3646:18:10","nodeType":"YulIdentifier","src":"3646:18:10"},{"arguments":[{"name":"length","nativeSrc":"3669:6:10","nodeType":"YulIdentifier","src":"3669:6:10"},{"kind":"number","nativeSrc":"3677:2:10","nodeType":"YulLiteral","src":"3677:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3666:2:10","nodeType":"YulIdentifier","src":"3666:2:10"},"nativeSrc":"3666:14:10","nodeType":"YulFunctionCall","src":"3666:14:10"}],"functionName":{"name":"eq","nativeSrc":"3643:2:10","nodeType":"YulIdentifier","src":"3643:2:10"},"nativeSrc":"3643:38:10","nodeType":"YulFunctionCall","src":"3643:38:10"},"nativeSrc":"3640:161:10","nodeType":"YulIf","src":"3640:161:10"}]},"name":"extract_byte_array_length","nativeSrc":"3427:380:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3462:4:10","nodeType":"YulTypedName","src":"3462:4:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3471:6:10","nodeType":"YulTypedName","src":"3471:6:10","type":""}],"src":"3427:380:10"},{"body":{"nativeSrc":"3860:174:10","nodeType":"YulBlock","src":"3860:174:10","statements":[{"nativeSrc":"3870:16:10","nodeType":"YulAssignment","src":"3870:16:10","value":{"arguments":[{"name":"x","nativeSrc":"3881:1:10","nodeType":"YulIdentifier","src":"3881:1:10"},{"name":"y","nativeSrc":"3884:1:10","nodeType":"YulIdentifier","src":"3884:1:10"}],"functionName":{"name":"add","nativeSrc":"3877:3:10","nodeType":"YulIdentifier","src":"3877:3:10"},"nativeSrc":"3877:9:10","nodeType":"YulFunctionCall","src":"3877:9:10"},"variableNames":[{"name":"sum","nativeSrc":"3870:3:10","nodeType":"YulIdentifier","src":"3870:3:10"}]},{"body":{"nativeSrc":"3917:111:10","nodeType":"YulBlock","src":"3917:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3938:1:10","nodeType":"YulLiteral","src":"3938:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3945:3:10","nodeType":"YulLiteral","src":"3945:3:10","type":"","value":"224"},{"kind":"number","nativeSrc":"3950:10:10","nodeType":"YulLiteral","src":"3950:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3941:3:10","nodeType":"YulIdentifier","src":"3941:3:10"},"nativeSrc":"3941:20:10","nodeType":"YulFunctionCall","src":"3941:20:10"}],"functionName":{"name":"mstore","nativeSrc":"3931:6:10","nodeType":"YulIdentifier","src":"3931:6:10"},"nativeSrc":"3931:31:10","nodeType":"YulFunctionCall","src":"3931:31:10"},"nativeSrc":"3931:31:10","nodeType":"YulExpressionStatement","src":"3931:31:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3982:1:10","nodeType":"YulLiteral","src":"3982:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"3985:4:10","nodeType":"YulLiteral","src":"3985:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3975:6:10","nodeType":"YulIdentifier","src":"3975:6:10"},"nativeSrc":"3975:15:10","nodeType":"YulFunctionCall","src":"3975:15:10"},"nativeSrc":"3975:15:10","nodeType":"YulExpressionStatement","src":"3975:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4010:1:10","nodeType":"YulLiteral","src":"4010:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"4013:4:10","nodeType":"YulLiteral","src":"4013:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4003:6:10","nodeType":"YulIdentifier","src":"4003:6:10"},"nativeSrc":"4003:15:10","nodeType":"YulFunctionCall","src":"4003:15:10"},"nativeSrc":"4003:15:10","nodeType":"YulExpressionStatement","src":"4003:15:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"3901:1:10","nodeType":"YulIdentifier","src":"3901:1:10"},{"name":"sum","nativeSrc":"3904:3:10","nodeType":"YulIdentifier","src":"3904:3:10"}],"functionName":{"name":"gt","nativeSrc":"3898:2:10","nodeType":"YulIdentifier","src":"3898:2:10"},"nativeSrc":"3898:10:10","nodeType":"YulFunctionCall","src":"3898:10:10"},"nativeSrc":"3895:133:10","nodeType":"YulIf","src":"3895:133:10"}]},"name":"checked_add_t_uint256","nativeSrc":"3812:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3843:1:10","nodeType":"YulTypedName","src":"3843:1:10","type":""},{"name":"y","nativeSrc":"3846:1:10","nodeType":"YulTypedName","src":"3846:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3852:3:10","nodeType":"YulTypedName","src":"3852:3:10","type":""}],"src":"3812:222:10"},{"body":{"nativeSrc":"4213:168:10","nodeType":"YulBlock","src":"4213:168:10","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4230:9:10","nodeType":"YulIdentifier","src":"4230:9:10"},{"kind":"number","nativeSrc":"4241:2:10","nodeType":"YulLiteral","src":"4241:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:10","nodeType":"YulIdentifier","src":"4223:6:10"},"nativeSrc":"4223:21:10","nodeType":"YulFunctionCall","src":"4223:21:10"},"nativeSrc":"4223:21:10","nodeType":"YulExpressionStatement","src":"4223:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4264:9:10","nodeType":"YulIdentifier","src":"4264:9:10"},{"kind":"number","nativeSrc":"4275:2:10","nodeType":"YulLiteral","src":"4275:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4260:3:10","nodeType":"YulIdentifier","src":"4260:3:10"},"nativeSrc":"4260:18:10","nodeType":"YulFunctionCall","src":"4260:18:10"},{"kind":"number","nativeSrc":"4280:2:10","nodeType":"YulLiteral","src":"4280:2:10","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"4253:6:10","nodeType":"YulIdentifier","src":"4253:6:10"},"nativeSrc":"4253:30:10","nodeType":"YulFunctionCall","src":"4253:30:10"},"nativeSrc":"4253:30:10","nodeType":"YulExpressionStatement","src":"4253:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4303:9:10","nodeType":"YulIdentifier","src":"4303:9:10"},{"kind":"number","nativeSrc":"4314:2:10","nodeType":"YulLiteral","src":"4314:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4299:3:10","nodeType":"YulIdentifier","src":"4299:3:10"},"nativeSrc":"4299:18:10","nodeType":"YulFunctionCall","src":"4299:18:10"},{"hexValue":"45786365656473206d617820737570706c79","kind":"string","nativeSrc":"4319:20:10","nodeType":"YulLiteral","src":"4319:20:10","type":"","value":"Exceeds max supply"}],"functionName":{"name":"mstore","nativeSrc":"4292:6:10","nodeType":"YulIdentifier","src":"4292:6:10"},"nativeSrc":"4292:48:10","nodeType":"YulFunctionCall","src":"4292:48:10"},"nativeSrc":"4292:48:10","nodeType":"YulExpressionStatement","src":"4292:48:10"},{"nativeSrc":"4349:26:10","nodeType":"YulAssignment","src":"4349:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"4361:9:10","nodeType":"YulIdentifier","src":"4361:9:10"},{"kind":"number","nativeSrc":"4372:2:10","nodeType":"YulLiteral","src":"4372:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4357:3:10","nodeType":"YulIdentifier","src":"4357:3:10"},"nativeSrc":"4357:18:10","nodeType":"YulFunctionCall","src":"4357:18:10"},"variableNames":[{"name":"tail","nativeSrc":"4349:4:10","nodeType":"YulIdentifier","src":"4349:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4039:342:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4190:9:10","nodeType":"YulTypedName","src":"4190:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4204:4:10","nodeType":"YulTypedName","src":"4204:4:10","type":""}],"src":"4039:342:10"},{"body":{"nativeSrc":"4543:188:10","nodeType":"YulBlock","src":"4543:188:10","statements":[{"nativeSrc":"4553:26:10","nodeType":"YulAssignment","src":"4553:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"4565:9:10","nodeType":"YulIdentifier","src":"4565:9:10"},{"kind":"number","nativeSrc":"4576:2:10","nodeType":"YulLiteral","src":"4576:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4561:3:10","nodeType":"YulIdentifier","src":"4561:3:10"},"nativeSrc":"4561:18:10","nodeType":"YulFunctionCall","src":"4561:18:10"},"variableNames":[{"name":"tail","nativeSrc":"4553:4:10","nodeType":"YulIdentifier","src":"4553:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4595:9:10","nodeType":"YulIdentifier","src":"4595:9:10"},{"arguments":[{"name":"value0","nativeSrc":"4610:6:10","nodeType":"YulIdentifier","src":"4610:6:10"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4626:3:10","nodeType":"YulLiteral","src":"4626:3:10","type":"","value":"160"},{"kind":"number","nativeSrc":"4631:1:10","nodeType":"YulLiteral","src":"4631:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4622:3:10","nodeType":"YulIdentifier","src":"4622:3:10"},"nativeSrc":"4622:11:10","nodeType":"YulFunctionCall","src":"4622:11:10"},{"kind":"number","nativeSrc":"4635:1:10","nodeType":"YulLiteral","src":"4635:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4618:3:10","nodeType":"YulIdentifier","src":"4618:3:10"},"nativeSrc":"4618:19:10","nodeType":"YulFunctionCall","src":"4618:19:10"}],"functionName":{"name":"and","nativeSrc":"4606:3:10","nodeType":"YulIdentifier","src":"4606:3:10"},"nativeSrc":"4606:32:10","nodeType":"YulFunctionCall","src":"4606:32:10"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:10","nodeType":"YulIdentifier","src":"4588:6:10"},"nativeSrc":"4588:51:10","nodeType":"YulFunctionCall","src":"4588:51:10"},"nativeSrc":"4588:51:10","nodeType":"YulExpressionStatement","src":"4588:51:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4659:9:10","nodeType":"YulIdentifier","src":"4659:9:10"},{"kind":"number","nativeSrc":"4670:2:10","nodeType":"YulLiteral","src":"4670:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4655:3:10","nodeType":"YulIdentifier","src":"4655:3:10"},"nativeSrc":"4655:18:10","nodeType":"YulFunctionCall","src":"4655:18:10"},{"name":"value1","nativeSrc":"4675:6:10","nodeType":"YulIdentifier","src":"4675:6:10"}],"functionName":{"name":"mstore","nativeSrc":"4648:6:10","nodeType":"YulIdentifier","src":"4648:6:10"},"nativeSrc":"4648:34:10","nodeType":"YulFunctionCall","src":"4648:34:10"},"nativeSrc":"4648:34:10","nodeType":"YulExpressionStatement","src":"4648:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4702:9:10","nodeType":"YulIdentifier","src":"4702:9:10"},{"kind":"number","nativeSrc":"4713:2:10","nodeType":"YulLiteral","src":"4713:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4698:3:10","nodeType":"YulIdentifier","src":"4698:3:10"},"nativeSrc":"4698:18:10","nodeType":"YulFunctionCall","src":"4698:18:10"},{"name":"value2","nativeSrc":"4718:6:10","nodeType":"YulIdentifier","src":"4718:6:10"}],"functionName":{"name":"mstore","nativeSrc":"4691:6:10","nodeType":"YulIdentifier","src":"4691:6:10"},"nativeSrc":"4691:34:10","nodeType":"YulFunctionCall","src":"4691:34:10"},"nativeSrc":"4691:34:10","nodeType":"YulExpressionStatement","src":"4691:34:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"4386:345:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4496:9:10","nodeType":"YulTypedName","src":"4496:9:10","type":""},{"name":"value2","nativeSrc":"4507:6:10","nodeType":"YulTypedName","src":"4507:6:10","type":""},{"name":"value1","nativeSrc":"4515:6:10","nodeType":"YulTypedName","src":"4515:6:10","type":""},{"name":"value0","nativeSrc":"4523:6:10","nodeType":"YulTypedName","src":"4523:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4534:4:10","nodeType":"YulTypedName","src":"4534:4:10","type":""}],"src":"4386:345:10"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Exceeds max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806342966c68116100a25780638da5cb5b116100715780638da5cb5b1461022a57806395d89b4114610245578063a9059cbb1461024d578063dd62ed3e14610260578063f2fde38b1461029957600080fd5b806342966c68146101d357806370a08231146101e6578063715018a61461020f57806379cc67901461021757600080fd5b806318160ddd116100e957806318160ddd1461017957806323b872dd1461018b578063313ce5671461019e57806332cb6b0c146101ad57806340c10f19146101c057600080fd5b80630614117a1461011b578063069c9fae1461012557806306fdde0314610138578063095ea7b314610156575b600080fd5b6101236102ac565b005b610123610133366004610959565b6102f0565b61014061038f565b60405161014d9190610983565b60405180910390f35b610169610164366004610959565b610421565b604051901515815260200161014d565b6002545b60405190815260200161014d565b6101696101993660046109d1565b61043b565b6040516012815260200161014d565b61017d6b033b2e3c9fd0803ce800000081565b6101236101ce366004610959565b61045f565b6101236101e1366004610a0e565b6104de565b61017d6101f4366004610a27565b6001600160a01b031660009081526020819052604090205490565b6101236104e8565b610123610225366004610959565b6104fc565b6005546040516001600160a01b03909116815260200161014d565b610140610511565b61016961025b366004610959565b610520565b61017d61026e366004610a49565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101236102a7366004610a27565b61052e565b6102b4610569565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156102ed573d6000803e3d6000fd5b50565b6102f8610569565b816001600160a01b031663a9059cbb6103196005546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190610a7c565b505050565b60606003805461039e90610a9e565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca90610a9e565b80156104175780601f106103ec57610100808354040283529160200191610417565b820191906000526020600020905b8154815290600101906020018083116103fa57829003601f168201915b5050505050905090565b60003361042f818585610596565b60019150505b92915050565b6000336104498582856105a3565b610454858585610621565b506001949350505050565b610467610569565b6b033b2e3c9fd0803ce80000008161047e60025490565b6104889190610ad8565b11156104d05760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b60448201526064015b60405180910390fd5b6104da8282610680565b5050565b6102ed33826106b6565b6104f0610569565b6104fa60006106ec565b565b6105078233836105a3565b6104da82826106b6565b60606004805461039e90610a9e565b60003361042f818585610621565b610536610569565b6001600160a01b03811661056057604051631e4fbdf760e01b8152600060048201526024016104c7565b6102ed816106ec565b6005546001600160a01b031633146104fa5760405163118cdaa760e01b81523360048201526024016104c7565b61038a838383600161073e565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461061b578181101561060c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104c7565b61061b8484848403600061073e565b50505050565b6001600160a01b03831661064b57604051634b637e8f60e11b8152600060048201526024016104c7565b6001600160a01b0382166106755760405163ec442f0560e01b8152600060048201526024016104c7565b61038a838383610813565b6001600160a01b0382166106aa5760405163ec442f0560e01b8152600060048201526024016104c7565b6104da60008383610813565b6001600160a01b0382166106e057604051634b637e8f60e11b8152600060048201526024016104c7565b6104da82600083610813565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166107685760405163e602df0560e01b8152600060048201526024016104c7565b6001600160a01b03831661079257604051634a1406b160e11b8152600060048201526024016104c7565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561061b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161080591815260200190565b60405180910390a350505050565b6001600160a01b03831661083e5780600260008282546108339190610ad8565b909155506108b09050565b6001600160a01b038316600090815260208190526040902054818110156108915760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104c7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108cc576002805482900390556108eb565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161093091815260200190565b60405180910390a3505050565b80356001600160a01b038116811461095457600080fd5b919050565b6000806040838503121561096c57600080fd5b6109758361093d565b946020939093013593505050565b602081526000825180602084015260005b818110156109b15760208186018101516040868401015201610994565b506000604082850101526040601f19601f83011684010191505092915050565b6000806000606084860312156109e657600080fd5b6109ef8461093d565b92506109fd6020850161093d565b929592945050506040919091013590565b600060208284031215610a2057600080fd5b5035919050565b600060208284031215610a3957600080fd5b610a428261093d565b9392505050565b60008060408385031215610a5c57600080fd5b610a658361093d565b9150610a736020840161093d565b90509250929050565b600060208284031215610a8e57600080fd5b81518015158114610a4257600080fd5b600181811c90821680610ab257607f821691505b602082108103610ad257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561043557634e487b7160e01b600052601160045260246000fdfea2646970667358221220cca5a3c7a1458effde40ce0ac1250945fcad21861cbc249e28137900777825fa64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x614117A EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x69C9FAE EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH2 0x169 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH2 0x17D PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14D JUMP JUMPDEST PUSH2 0x140 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F8 PUSH2 0x569 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x319 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x417 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x417 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x42F DUP2 DUP6 DUP6 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x449 DUP6 DUP3 DUP6 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x454 DUP6 DUP6 DUP6 PUSH2 0x621 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x467 PUSH2 0x569 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 PUSH2 0x47E PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x488 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST GT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x45786365656473206D617820737570706C79 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DA DUP3 DUP3 PUSH2 0x680 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2ED CALLER DUP3 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x4FA PUSH1 0x0 PUSH2 0x6EC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x507 DUP3 CALLER DUP4 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x4DA DUP3 DUP3 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x42F DUP2 DUP6 DUP6 PUSH2 0x621 JUMP JUMPDEST PUSH2 0x536 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x38A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x61B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x61B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x73E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x38A DUP4 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x4DA PUSH1 0x0 DUP4 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x4DA DUP3 PUSH1 0x0 DUP4 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x61B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x805 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x83E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8B0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8CC JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x930 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x975 DUP4 PUSH2 0x93D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x994 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9EF DUP5 PUSH2 0x93D JUMP JUMPDEST SWAP3 POP PUSH2 0x9FD PUSH1 0x20 DUP6 ADD PUSH2 0x93D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA42 DUP3 PUSH2 0x93D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 PUSH2 0x93D JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 PUSH1 0x20 DUP5 ADD PUSH2 0x93D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x435 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xA5 LOG3 0xC7 LOG1 GASLIMIT DUP15 SELFDESTRUCT 0xDE BLOCKHASH 0xCE EXP 0xC1 0x25 MULMOD GASLIMIT 0xFC 0xAD 0x21 DUP7 SHR 0xBC 0x24 SWAP15 0x28 SGT PUSH26 0x777825FA64736F6C634300081C003300000000000000000000 ","sourceMap":"250:975:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1117:106;;;:::i;:::-;;903:143;;;;;;:::i;:::-;;:::i;2074:89:2:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:10;;1187:22;1169:41;;1157:2;1142:18;4293:186:2;1029:187:10;3144:97:2;3222:12;;3144:97;;;1367:25:10;;;1355:2;1340:18;3144:97:2;1221:177:10;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1924:36:10;;1912:2;1897:18;3002:82:2;1782:184:10;311:59:9;;348:22;311:59;;659:170;;;;;;:::i;:::-;;:::i;618:87:4:-;;;;;;:::i;:::-;;:::i;3299:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2539:51:10;;2527:2;2512:18;1638:85:0;2393:203:10;2276:93:2;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;:::i;:::-;;:::i;1117:106:9:-;1531:13:0;:11;:13::i;:::-;1710:6;;1168:48:9::1;::::0;-1:-1:-1;;;;;1710:6:0;;;;1194:21:9::1;1168:48:::0;::::1;;;::::0;::::1;::::0;;;1194:21;1710:6:0;1168:48:9;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1117:106::o:0;903:143::-;1531:13:0;:11;:13::i;:::-;1000:12:9::1;-1:-1:-1::0;;;;;993:29:9::1;;1023:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;1638:85;1023:7:9::1;993:46;::::0;-1:-1:-1;;;;;;993:46:9::1;::::0;;;;;;-1:-1:-1;;;;;3058:32:10;;;993:46:9::1;::::0;::::1;3040:51:10::0;3107:18;;;3100:34;;;3013:18;;993:46:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;903:143:::0;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:6;4420:31:2;735:10:6;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:6;5182:37:2;5198:4;735:10:6;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;659:170:9:-;1531:13:0;:11;:13::i;:::-;348:22:9::1;752:6;736:13;3222:12:2::0;;;3144:97;736:13:9::1;:22;;;;:::i;:::-;:36;;728:67;;;::::0;-1:-1:-1;;;728:67:9;;4241:2:10;728:67:9::1;::::0;::::1;4223:21:10::0;4280:2;4260:18;;;4253:30;-1:-1:-1;;;4299:18:10;;;4292:48;4357:18;;728:67:9::1;;;;;;;;;805:17;811:2;815:6;805:5;:17::i;:::-;659:170:::0;;:::o;618:87:4:-;672:26;735:10:6;692:5:4;672;:26::i;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;735:10:6;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:6;3733:27:2;735:10:6;3750:2:2;3754:5;3733:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2539:51:10::0;2512:18;;2672:31:0::1;2393:203:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;2539:51:10;2512:18;;1901:40:0;2393:203:10;8989:128:2;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;4606:32:10;;10936:60:2;;;4588:51:10;4655:18;;;4648:34;;;4698:18;;;4691:34;;;4561:18;;10936:60:2;4386:345:10;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2539:51:10;2512:18;;5780:30:2;2393:203:10;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2539:51:10;2512:18;;5873:32:2;2393:203:10;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2539:51:10;2512:18;;7835:32:2;2393:203:10;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;8247:206::-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;2539:51:10;2512:18;;8361:30:2;2393:203:10;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2539:51:10;2512:18;;10103:32:2;2393:203:10;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2539:51:10;2512:18;;10203:31:2;2393:203:10;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1367:25:10;;1355:2;1340:18;;1221:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;4606:32:10;;6649:50:2;;;4588:51:10;4655:18;;;4648:34;;;4698:18;;;4691:34;;;4561:18;;6649:50:2;4386:345:10;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1367::10;;1355:2;1340:18;;1221:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;458:2;443:18;;;;430:32;;-1:-1:-1;;;192:300:10:o;497:527::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;746:1;756:140;770:6;767:1;764:13;756:140;;;881:2;865:14;;;861:23;;855:30;850:2;831:17;;;827:26;820:66;785:10;756:140;;;760:3;945:1;940:2;931:6;920:9;916:22;912:31;905:42;1015:2;1008;1004:7;999:2;991:6;987:15;983:29;972:9;968:45;964:54;956:62;;;497:527;;;;:::o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:10;1728:18;;;;1715:32;;1403:374::o;1971:226::-;2030:6;2083:2;2071:9;2062:7;2058:23;2054:32;2051:52;;;2099:1;2096;2089:12;2051:52;-1:-1:-1;2144:23:10;;1971:226;-1:-1:-1;1971:226:10:o;2202:186::-;2261:6;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;2353:29;2372:9;2353:29;:::i;:::-;2343:39;2202:186;-1:-1:-1;;;2202:186:10:o;2601:260::-;2669:6;2677;2730:2;2718:9;2709:7;2705:23;2701:32;2698:52;;;2746:1;2743;2736:12;2698:52;2769:29;2788:9;2769:29;:::i;:::-;2759:39;;2817:38;2851:2;2840:9;2836:18;2817:38;:::i;:::-;2807:48;;2601:260;;;;;:::o;3145:277::-;3212:6;3265:2;3253:9;3244:7;3240:23;3236:32;3233:52;;;3281:1;3278;3271:12;3233:52;3313:9;3307:16;3366:5;3359:13;3352:21;3345:5;3342:32;3332:60;;3388:1;3385;3378:12;3427:380;3506:1;3502:12;;;;3549;;;3570:61;;3624:4;3616:6;3612:17;3602:27;;3570:61;3677:2;3669:6;3666:14;3646:18;3643:38;3640:161;;3723:10;3718:3;3714:20;3711:1;3704:31;3758:4;3755:1;3748:15;3786:4;3783:1;3776:15;3640:161;;3427:380;;;:::o;3812:222::-;3877:9;;;3898:10;;;3895:133;;;3950:10;3945:3;3941:20;3938:1;3931:31;3985:4;3982:1;3975:15;4013:4;4010:1;4003:15"},"methodIdentifiers":{"MAX_SUPPLY()":"32cb6b0c","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","recoverETH()":"0614117a","recoverTokens(address,uint256)":"069c9fae","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AirdropToken.sol\":\"AirdropToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AirdropToken.sol\":{\"keccak256\":\"0x697d57ddac6c0f21db44c58783fc3259a79eb35f9299bc91ea68dd4e267fbe78\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://495e10594a0575a8d4ce15da2079261b08fe878323c53d7cb4f11b67083473cc\",\"dweb:/ipfs/QmbssvhmkCyouZ9ZJLaHqsXetyuiRgtzw5gQPdixbs9aA5\"]}},\"version\":1}"}}}}}