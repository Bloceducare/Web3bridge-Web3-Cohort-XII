/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AirdropMerkle,
  AirdropMerkleInterface,
} from "../../contracts/AirdropMerkle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimableAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAirdropAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ba9380380610ba983398101604081905261002f916102ec565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816101aa565b506001600160a01b038416608052826100ba5760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206d65726b6c6520726f6f7400000000000000000000000000604482015260640161004d565b80518251146100ff5760405162461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b604482015260640161004d565b60018390556000805b835181101561019c57828181518110610123576101236103d0565b602002602001015160036000868481518110610141576101416103d0565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555082818151811061017f5761017f6103d0565b60200260200101518261019291906103e6565b9150600101610108565b506004555061040d92505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461021157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561025457610254610216565b604052919050565b60006001600160401b0382111561027557610275610216565b5060051b60200190565b600082601f83011261029057600080fd5b81516102a361029e8261025c565b61022c565b8082825260208201915060208360051b8601019250858311156102c557600080fd5b602085015b838110156102e25780518352602092830192016102ca565b5095945050505050565b6000806000806080858703121561030257600080fd5b61030b856101fa565b6020860151604087015191955093506001600160401b0381111561032e57600080fd5b8501601f8101871361033f57600080fd5b805161034d61029e8261025c565b8082825260208201915060208360051b85010192508983111561036f57600080fd5b6020840193505b8284101561039857610387846101fa565b825260209384019390910190610376565b6060890151909550925050506001600160401b038111156103b857600080fd5b6103c48782880161027f565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b8082018082111561040757634e487b7160e01b600052601160045260246000fd5b92915050565b60805161077a61042f600039600081816101880152610351015261077a6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012f578063b073f68714610154578063f2fde38b1461015d578063faf7a82614610170578063fc0c546a1461018357600080fd5b80632bc79c12146100a35780632eb4a7ab146100d65780633d13f874146100df578063715018a6146100f457806373b2e80e146100fc575b600080fd5b6100c36100b1366004610664565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c360015481565b6100f26100ed36600461067f565b6101aa565b005b6100f261044d565b61011f61010a366004610664565b60026020526000908152604090205460ff1681565b60405190151581526020016100cd565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cd565b6100c360045481565b6100f261016b366004610664565b610461565b61011f61017e36600461067f565b61049f565b61013c7f000000000000000000000000000000000000000000000000000000000000000081565b6001546101fe5760405162461bcd60e51b815260206004820152601760248201527f41697264726f70206e6f7420696e697469616c697a656400000000000000000060448201526064015b60405180910390fd5b6001600160a01b03841660009081526002602052604090205460ff16156102595760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b60448201526064016101f5565b6001600160a01b03841660009081526003602052604090205483146102b75760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a590818db185a5b48185b5bdd5b9d60621b60448201526064016101f5565b6102c38484848461049f565b61030f5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642070726f6f663a204e6f742077686974656c6973746564000060448201526064016101f5565b6001600160a01b0384811660008181526002602052604090819020805460ff191660011790555163a9059cbb60e01b81526004810191909152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af115801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c0919061070c565b6104045760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016101f5565b836001600160a01b03167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4308460405161043f91815260200190565b60405180910390a250505050565b610455610540565b61045f600061056d565b565b610469610540565b6001600160a01b03811661049357604051631e4fbdf760e01b8152600060048201526024016101f5565b61049c8161056d565b50565b604080516001600160a01b0386166020820152908101849052600090819060600160408051601f19818403018152828252805160209182012090830152016040516020818303038152906040528051906020012090506105368484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506105bd565b9695505050505050565b6000546001600160a01b0316331461045f5760405163118cdaa760e01b81523360048201526024016101f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826105ca85846105d3565b14949350505050565b600081815b845181101561060e57610604828683815181106105f7576105f761072e565b6020026020010151610616565b91506001016105d8565b509392505050565b6000818310610632576000828152602084905260409020610641565b60008381526020839052604090205b9392505050565b80356001600160a01b038116811461065f57600080fd5b919050565b60006020828403121561067657600080fd5b61064182610648565b6000806000806060858703121561069557600080fd5b61069e85610648565b935060208501359250604085013567ffffffffffffffff8111156106c157600080fd5b8501601f810187136106d257600080fd5b803567ffffffffffffffff8111156106e957600080fd5b8760208260051b84010111156106fe57600080fd5b949793965060200194505050565b60006020828403121561071e57600080fd5b8151801515811461064157600080fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b7e3fa30d5f54d00d4f33f246a1d59f239e536e6dd213a601fa3d05317c8634064736f6c634300081c0033";

type AirdropMerkleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropMerkleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropMerkle__factory extends ContractFactory {
  constructor(...args: AirdropMerkleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _merkleRoot: BytesLike,
    addresses: AddressLike[],
    amounts: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _token,
      _merkleRoot,
      addresses,
      amounts,
      overrides || {}
    );
  }
  override deploy(
    _token: AddressLike,
    _merkleRoot: BytesLike,
    addresses: AddressLike[],
    amounts: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _token,
      _merkleRoot,
      addresses,
      amounts,
      overrides || {}
    ) as Promise<
      AirdropMerkle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AirdropMerkle__factory {
    return super.connect(runner) as AirdropMerkle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropMerkleInterface {
    return new Interface(_abi) as AirdropMerkleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AirdropMerkle {
    return new Contract(address, _abi, runner) as unknown as AirdropMerkle;
  }
}
